openapi: 3.0.0
info:
  title: Square
  description: Use Square APIs to manage and run business including payment, customer,
    product, inventory, and employee management.
  termsOfService: https://connect.squareup.com/tos
  contact:
    name: Square Developer Platform
    url: https://squareup.com/developers
    email: developers@squareup.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: "2.0"
  x-server-configuration:
    default-environment: production
    default-server: default
    environments:
    - name: production
      servers:
      - name: default
        url: https://connect.squareup.com
    - name: sandbox
      servers:
      - name: default
        url: https://connect.squareupsandbox.com
  x-square-generic-error-codes:
  - ACCESS_TOKEN_EXPIRED
  - ACCESS_TOKEN_REVOKED
  - API_VERSION_INCOMPATIBLE
  - APPLICATION_DISABLED
  - ARRAY_EMPTY
  - ARRAY_LENGTH_TOO_LONG
  - ARRAY_LENGTH_TOO_SHORT
  - BAD_CERTIFICATE
  - BAD_GATEWAY
  - BAD_REQUEST
  - CONFLICT
  - CONFLICTING_PARAMETERS
  - CURRENCY_MISMATCH
  - EXPECTED_ARRAY
  - EXPECTED_BASE64_ENCODED_BYTE_ARRAY
  - EXPECTED_BOOLEAN
  - EXPECTED_FLOAT
  - EXPECTED_INTEGER
  - EXPECTED_JSON_BODY
  - EXPECTED_MAP
  - EXPECTED_OBJECT
  - EXPECTED_STRING
  - FORBIDDEN
  - GATEWAY_TIMEOUT
  - GONE
  - IDEMPOTENCY_KEY_REUSED
  - INCORRECT_TYPE
  - INSUFFICIENT_SCOPES
  - INTERNAL_SERVER_ERROR
  - INVALID_ARRAY_VALUE
  - INVALID_CONTENT_TYPE
  - INVALID_CURSOR
  - INVALID_ENUM_VALUE
  - INVALID_FORM_VALUE
  - INVALID_SORT_ORDER
  - INVALID_SQUARE_VERSION_FORMAT
  - INVALID_TIME
  - INVALID_TIME_RANGE
  - INVALID_VALUE
  - LOCATION_MISMATCH
  - MAP_KEY_LENGTH_TOO_LONG
  - MAP_KEY_LENGTH_TOO_SHORT
  - METHOD_NOT_ALLOWED
  - MISSING_REQUIRED_PARAMETER
  - NOT_ACCEPTABLE
  - NOT_FOUND
  - NOT_IMPLEMENTED
  - NO_FIELDS_SET
  - RATE_LIMITED
  - REQUEST_ENTITY_TOO_LARGE
  - REQUEST_TIMEOUT
  - SANDBOX_NOT_SUPPORTED
  - SERVICE_UNAVAILABLE
  - TOO_MANY_MAP_ENTRIES
  - UNAUTHORIZED
  - UNEXPECTED_VALUE
  - UNKNOWN_QUERY_PARAMETER
  - UNPROCESSABLE_ENTITY
  - UNSUPPORTED_MEDIA_TYPE
  - V1_ACCESS_TOKEN
  - V1_APPLICATION
  - VALUE_EMPTY
  - VALUE_REGEX_MISMATCH
  - VALUE_TOO_HIGH
  - VALUE_TOO_LONG
  - VALUE_TOO_LOW
  - VALUE_TOO_SHORT
servers:
- url: https://connect.squareup.com
paths:
  /mobile/authorization-code:
    post:
      tags:
      - MobileAuthorization
      summary: CreateMobileAuthorizationCode
      description: |-
        Generates code to authorize a mobile application to connect to a Square card reader

        Authorization codes are one-time-use and expire __60 minutes__ after being issued.

        __Important:__ The `Authorization` header you provide to this endpoint must have the following format:

        ```
        Authorization: Bearer ACCESS_TOKEN
        ```

        Replace `ACCESS_TOKEN` with a
        [valid production authorization credential](https://developer.squareup.com/docs/docs/build-basics/access-tokens).
      operationId: CreateMobileAuthorizationCode
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMobileAuthorizationCodeRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMobileAuthorizationCodeResponse'
      security:
      - oauth2:
        - PAYMENTS_WRITE_IN_PERSON
      x-release-status: PUBLIC
  /oauth2/authorize:
    get:
      tags:
      - OAuth
      summary: Authorize
      description: |-
        Presents a Permission Request form that returns an access
        code to be exchanged during the OAuth flow for a valid OAuth access token.
        To send users to the Permission Request form and start the OAuth flow,
        configure a link with the desired permissions that directs users to the
        OAuth Authorization endpoint. See the
        [OAuth Build Guide](https://developer.squareup.com/docs/oauth-api/build-with-oauth) for more information.

        In the event of an error, Authorize returns an error response
        (`error` and `error_description`). If the failure is a result of the user
        denying the request, the value is `access_denied` with a description of
        `user_denied`.
      operationId: Authorize
      parameters:
      - name: client_id
        in: query
        description: The Square-issued ID of the application requesting permissions.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: scope
        in: query
        description: |-
          __OPTIONAL__

          A space-separated list of the permissions the application is requesting.
          Default: "`MERCHANT_PROFILE_READ PAYMENTS_READ SETTLEMENTS_READ BANK_ACCOUNTS_READ`"
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/OAuthPermission'
      - name: locale
        in: query
        description: |-
          __OPTIONAL__

          The locale to present the permission request form in. Square detects the
          appropriate locale automatically. Only provide this value if the application
          can definitively determine the preferred locale.

          Currently supported values: `en-US`, `en-CA`, `es-US`, `fr-CA`, `ja-JP`.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: session
        in: query
        description: |-
          If `false`, the user must log in to their Square account to
          view the Permission Request form, even if they already have a valid user
          session.
          Default: `true`
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: state
        in: query
        description: |-
          __OPTIONAL__

          When provided, `state` is passed along to the configured Redirect URL after
          the Permission Request form is submitted. You can include state and verify
          its value to help protect against cross-site request forgery.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizeResponse'
      security: []
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
  /oauth2/clients/{client_id}/access-token/renew:
    post:
      tags:
      - OAuth
      summary: RenewToken
      description: |-
        `RenewToken` is deprecated. For information about refreshing OAuth access tokens, see
        [Renew OAuth Token](https://developer.squareup.com/docs/oauth-api/cookbook/renew-oauth-tokens).


        Renews an OAuth access token before it expires.

        OAuth access tokens besides your application's personal access token expire after __30 days__.
        You can also renew expired tokens within __15 days__ of their expiration.
        You cannot renew an access token that has been expired for more than 15 days.
        Instead, the associated user must re-complete the OAuth flow from the beginning.

        __Important:__ The `Authorization` header for this endpoint must have the
        following format:

        ```
        Authorization: Client APPLICATION_SECRET
        ```

        Replace `APPLICATION_SECRET` with the application secret on the Credentials
        page in the [application dashboard](https://connect.squareup.com/apps).
      operationId: RenewToken
      parameters:
      - name: client_id
        in: path
        description: Your application ID, available from the [application dashboard](https://connect.squareup.com/apps).
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenewTokenRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenewTokenResponse'
      deprecated: true
      security:
      - oauth2ClientSecret: []
      x-release-status: DEPRECATED
      x-deprecation: {}
  /oauth2/revoke:
    post:
      tags:
      - OAuth
      summary: RevokeToken
      description: |-
        Revokes an access token generated with the OAuth flow.

        If an account has more than one OAuth access token for your application, this
        endpoint revokes all of them, regardless of which token you specify. When an
        OAuth access token is revoked, all of the active subscriptions associated
        with that OAuth token are canceled immediately.

        __Important:__ The `Authorization` header for this endpoint must have the
        following format:

        ```
        Authorization: Client APPLICATION_SECRET
        ```

        Replace `APPLICATION_SECRET` with the application secret on the Credentials
        page in the [application dashboard](https://connect.squareup.com/apps).
      operationId: RevokeToken
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeTokenRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevokeTokenResponse'
      security:
      - oauth2ClientSecret: []
      x-release-status: PUBLIC
  /oauth2/token:
    post:
      tags:
      - OAuth
      summary: ObtainToken
      description: |-
        Returns an OAuth access token.

        The endpoint supports distinct methods of obtaining OAuth access tokens.
        Applications specify a method by adding the `grant_type` parameter
        in the request and also provide relevant information.
        For more information, see [OAuth access token management](https://developer.squareup.com/docs/authz/oauth/how-it-works#oauth-access-token-management).

        __Note:__ Regardless of the method application specified,
        the endpoint always returns two items; an OAuth access token and
        a refresh token in the response.

        __OAuth tokens should only live on secure servers. Application clients
        should never interact directly with OAuth tokens__.
      operationId: ObtainToken
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObtainTokenRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObtainTokenResponse'
      security: []
      x-release-status: PUBLIC
  /v1/batch:
    post:
      tags:
      - V1Batching
      summary: V1SubmitBatch
      description: |-
        Bundle multiple requests to Connect V1 API endpoints as a single
        request.


        The __V1SubmitBatch__ endpoint does not require an access token
        in the request header. Instead, provide an `access_token` parameter for
        each request included in the batch.

        __V1SubmitBatch__ responds with an array that contains response objects for
        each of the batched requests. There is no guarantee of the order in
        which batched requests are performed.


        __IMPORTANT__

        You cannot include more than 30 requests in a single batch and
        recursive requests to __V1SubmitBatch__ are not allowed. In
        other words, none of the requests included in a batch can itself be a
        request to the __V1SubmitBatch__ endpoint.
      operationId: V1SubmitBatch
      parameters: []
      requestBody:
        description: The set of API actions to perform.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BatchResponse'
                x-content-type: application/json
      deprecated: true
      security: []
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/general-guidance#v1batching
      x-visibility: DOC_ONLY
  /v1/me:
    get:
      tags:
      - V1Locations
      summary: RetrieveBusiness
      description: Get the general information for a business.
      operationId: RetrieveBusiness
      parameters: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Merchant'
      deprecated: true
      security:
      - oauth2:
        - MERCHANT_PROFILE_READ
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: RetrieveLocation
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-locations
  /v1/me/employees:
    get:
      tags:
      - V1Employees
      summary: ListEmployees
      description: Provides summary information for all of a business's employees.
      operationId: ListEmployees
      parameters:
      - name: order
        in: query
        description: 'The order in which employees are listed in the response, based
          on their created_at field.      Default value: ASC'
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SortOrder'
      - name: begin_updated_at
        in: query
        description: If filtering results by their updated_at field, the beginning
          of the requested reporting period, in ISO 8601 format
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_updated_at
        in: query
        description: If filtering results by there updated_at field, the end of the
          requested reporting period, in ISO 8601 format.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: begin_created_at
        in: query
        description: If filtering results by their created_at field, the beginning
          of the requested reporting period, in ISO 8601 format.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_created_at
        in: query
        description: If filtering results by their created_at field, the end of the
          requested reporting period, in ISO 8601 format.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: If provided, the endpoint returns only employee entities with
          the specified status (ACTIVE or INACTIVE).
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/V1ListEmployeesRequestStatus'
      - name: external_id
        in: query
        description: If provided, the endpoint returns only employee entities with
          the specified external_id.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum integer number of employee entities to return in
          a single response. Default 100, maximum 200.
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: batch_token
        in: query
        description: |-
          A pagination cursor to retrieve the next set of results for your
          original query to the endpoint.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V1Employee'
                x-content-type: application/json
      security:
      - oauth2:
        - EMPLOYEES_READ
      x-release-status: PUBLIC
    post:
      tags:
      - V1Employees
      summary: CreateEmployee
      description: |2-
         Use the CreateEmployee endpoint to add an employee to a Square
        account. Employees created with the Connect API have an initial status
        of `INACTIVE`. Inactive employees cannot sign in to Square Point of Sale
        until they are activated from the Square Dashboard. Employee status
        cannot be changed with the Connect API.

        <aside class="important">
        Employee entities cannot be deleted. To disable employee profiles,
        set the employee's status to <code>INACTIVE</code>
        </aside>
      operationId: CreateEmployee
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1Employee'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Employee'
      security:
      - oauth2:
        - EMPLOYEES_WRITE
      x-release-status: PUBLIC
  /v1/me/employees/{employee_id}:
    get:
      tags:
      - V1Employees
      summary: RetrieveEmployee
      description: Provides the details for a single employee.
      operationId: RetrieveEmployee
      parameters:
      - name: employee_id
        in: path
        description: The employee's ID.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Employee'
      security:
      - oauth2:
        - EMPLOYEES_READ
      x-release-status: PUBLIC
    put:
      tags:
      - V1Employees
      summary: UpdateEmployee
      operationId: UpdateEmployee
      parameters:
      - name: employee_id
        in: path
        description: The ID of the role to modify.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1Employee'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Employee'
      security:
      - oauth2:
        - EMPLOYEES_WRITE
      x-release-status: PUBLIC
  /v1/me/locations:
    get:
      tags:
      - V1Locations
      summary: ListLocations
      description: |-
        Provides details for all business locations associated with a Square
        account, including the Square-assigned object ID for the location.
      operationId: ListLocations
      parameters: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V1Merchant'
                x-content-type: application/json
      deprecated: true
      security:
      - oauth2:
        - MERCHANT_PROFILE_READ
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: ListLocations
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-locations
  /v1/me/roles:
    get:
      tags:
      - V1Employees
      summary: ListEmployeeRoles
      description: Provides summary information for all of a business's employee roles.
      operationId: ListEmployeeRoles
      parameters:
      - name: order
        in: query
        description: 'The order in which employees are listed in the response, based
          on their created_at field.Default value: ASC'
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SortOrder'
      - name: limit
        in: query
        description: The maximum integer number of employee entities to return in
          a single response. Default 100, maximum 200.
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: batch_token
        in: query
        description: |-
          A pagination cursor to retrieve the next set of results for your
          original query to the endpoint.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V1EmployeeRole'
                x-content-type: application/json
      security:
      - oauth2:
        - EMPLOYEES_READ
      x-release-status: PUBLIC
    post:
      tags:
      - V1Employees
      summary: CreateEmployeeRole
      description: |-
        Creates an employee role you can then assign to employees.

        Square accounts can include any number of roles that can be assigned to
        employees. These roles define the actions and permissions granted to an
        employee with that role. For example, an employee with a "Shift Manager"
        role might be able to issue refunds in Square Point of Sale, whereas an
        employee with a "Clerk" role might not.

        Roles are assigned with the [V1UpdateEmployee](#endpoint-v1updateemployee)
        endpoint. An employee can have only one role at a time.

        If an employee has no role, they have none of the permissions associated
        with roles. All employees can accept payments with Square Point of Sale.
      operationId: CreateEmployeeRole
      parameters: []
      requestBody:
        description: An EmployeeRole object with a name and permissions, and an optional
          owner flag.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1EmployeeRole'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1EmployeeRole'
      security:
      - oauth2:
        - EMPLOYEES_WRITE
      x-release-status: PUBLIC
  /v1/me/roles/{role_id}:
    get:
      tags:
      - V1Employees
      summary: RetrieveEmployeeRole
      description: Provides the details for a single employee role.
      operationId: RetrieveEmployeeRole
      parameters:
      - name: role_id
        in: path
        description: The role's ID.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1EmployeeRole'
      security:
      - oauth2:
        - EMPLOYEES_READ
      x-release-status: PUBLIC
    put:
      tags:
      - V1Employees
      summary: UpdateEmployeeRole
      description: Modifies the details of an employee role.
      operationId: UpdateEmployeeRole
      parameters:
      - name: role_id
        in: path
        description: The ID of the role to modify.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1EmployeeRole'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1EmployeeRole'
      security:
      - oauth2:
        - EMPLOYEES_WRITE
      x-release-status: PUBLIC
  /v1/me/timecards:
    get:
      tags:
      - V1Employees
      summary: ListTimecards
      description: Provides summary information for all of a business's employee timecards.
      operationId: ListTimecards
      parameters:
      - name: order
        in: query
        description: The order in which timecards are listed in the response, based
          on their created_at field.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SortOrder'
      - name: employee_id
        in: query
        description: If provided, the endpoint returns only timecards for the employee
          with the specified ID.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: begin_clockin_time
        in: query
        description: If filtering results by their clockin_time field, the beginning
          of the requested reporting period, in ISO 8601 format.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_clockin_time
        in: query
        description: If filtering results by their clockin_time field, the end of
          the requested reporting period, in ISO 8601 format.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: begin_clockout_time
        in: query
        description: If filtering results by their clockout_time field, the beginning
          of the requested reporting period, in ISO 8601 format.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_clockout_time
        in: query
        description: If filtering results by their clockout_time field, the end of
          the requested reporting period, in ISO 8601 format.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: begin_updated_at
        in: query
        description: If filtering results by their updated_at field, the beginning
          of the requested reporting period, in ISO 8601 format.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_updated_at
        in: query
        description: If filtering results by their updated_at field, the end of the
          requested reporting period, in ISO 8601 format.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: deleted
        in: query
        description: If true, only deleted timecards are returned. If false, only
          valid timecards are returned.If you don't provide this parameter, both valid
          and deleted timecards are returned.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: limit
        in: query
        description: The maximum integer number of employee entities to return in
          a single response. Default 100, maximum 200.
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: batch_token
        in: query
        description: |-
          A pagination cursor to retrieve the next set of results for your
          original query to the endpoint.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V1Timecard'
                x-content-type: application/json
      deprecated: true
      security:
      - oauth2:
        - TIMECARDS_READ
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2020-02-26
        retirementDate: 2021-02-26
        replacedBy: SearchShifts
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-timecards
    post:
      tags:
      - V1Employees
      summary: CreateTimecard
      description: |-
        Creates a timecard for an employee and clocks them in with an
        `API_CREATE` event and a `clockin_time` set to the current time unless
        the request provides a different value.

        To import timecards from another
        system (rather than clocking someone in). Specify the `clockin_time`
        and* `clockout_time` in the request.

        Timecards correspond to exactly one shift for a given employee, bounded
        by the `clockin_time` and `clockout_time` fields. An employee is
        considered clocked in if they have a timecard that doesn't have a
        `clockout_time` set. An employee that is currently clocked in cannot
        be clocked in a second time.
      operationId: CreateTimecard
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1Timecard'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Timecard'
      deprecated: true
      security:
      - oauth2:
        - TIMECARDS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2020-02-26
        retirementDate: 2021-02-26
        replacedBy: CreateShift
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-timecards
  /v1/me/timecards/{timecard_id}:
    get:
      tags:
      - V1Employees
      summary: RetrieveTimecard
      description: |-
        Provides the details for a single timecard.


        <aside>
        Only approved accounts can manage their employees with Square.
        Unapproved accounts cannot use employee management features with the
        API.
        </aside>
      operationId: RetrieveTimecard
      parameters:
      - name: timecard_id
        in: path
        description: The timecard's ID.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Timecard'
      deprecated: true
      security:
      - oauth2:
        - TIMECARDS_READ
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2020-02-26
        retirementDate: 2021-02-26
        replacedBy: GetShift
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-timecards
    put:
      tags:
      - V1Employees
      summary: UpdateTimecard
      description: |-
        Modifies the details of a timecard with an `API_EDIT` event for
        the timecard. Updating an active timecard with a `clockout_time`
        clocks the employee out.
      operationId: UpdateTimecard
      parameters:
      - name: timecard_id
        in: path
        description: TThe ID of the timecard to modify.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.
          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1Timecard'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Timecard'
      deprecated: true
      security:
      - oauth2:
        - TIMECARDS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2020-02-26
        retirementDate: 2021-02-26
        replacedBy: UpdateShift
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-timecards
    delete:
      tags:
      - V1Employees
      summary: DeleteTimecard
      description: |-
        Deletes a timecard. Timecards can also be deleted through the
        Square Dashboard. Deleted timecards are still accessible through
        Connect API endpoints, but cannot be modified. The `deleted` field of
        the `Timecard` object indicates whether the timecard has been deleted.


        __Note__: By default, deleted timecards appear alongside valid timecards in
        results returned by the [ListTimecards](#endpoint-v1employees-listtimecards)
        endpoint. To filter deleted timecards, include the `deleted` query
        parameter in the list request.

        Only approved accounts can manage their employees with Square.
        Unapproved accounts cannot use employee management features with the
        API.
      operationId: DeleteTimecard
      parameters:
      - name: timecard_id
        in: path
        description: The ID of the timecard to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
      deprecated: true
      security:
      - oauth2:
        - TIMECARDS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2020-02-26
        retirementDate: 2021-02-26
        replacedBy: DeleteShift
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-timecards
  /v1/me/timecards/{timecard_id}/events:
    get:
      tags:
      - V1Employees
      summary: ListTimecardEvents
      description: |-
        Provides summary information for all events associated with a
        particular timecard.


        <aside>
        Only approved accounts can manage their employees with Square.
        Unapproved accounts cannot use employee management features with the
        API.
        </aside>
      operationId: ListTimecardEvents
      parameters:
      - name: timecard_id
        in: path
        description: The ID of the timecard to list events for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V1TimecardEvent'
                x-content-type: application/json
      deprecated: true
      security:
      - oauth2:
        - TIMECARDS_READ
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2020-02-26
        retirementDate: 2021-02-26
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-timecards
  /v1/{location_id}/bank-accounts:
    get:
      tags:
      - V1Transactions
      summary: ListBankAccounts
      description: Provides non-confidential details for all of a location's associated
        bank accounts. This endpoint does not provide full bank account numbers, and
        there is no way to obtain a full bank account number with the Connect API.
      operationId: ListBankAccounts
      parameters:
      - name: location_id
        in: path
        description: The ID of the location to list bank accounts for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V1BankAccount'
                x-content-type: application/json
      deprecated: true
      security:
      - oauth2:
        - BANK_ACCOUNTS_READ
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2020-02-26
        retirementDate: 2021-02-26
        replacedBy: ListBankAccounts
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-bankaccounts
  /v1/{location_id}/bank-accounts/{bank_account_id}:
    get:
      tags:
      - V1Transactions
      summary: RetrieveBankAccount
      description: Provides non-confidential details for a merchant's associated bank
        account. This endpoint does not provide full bank account numbers, and there
        is no way to obtain a full bank account number with the Connect API.
      operationId: RetrieveBankAccount
      parameters:
      - name: location_id
        in: path
        description: The ID of the bank account's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bank_account_id
        in: path
        description: The bank account's Square-issued ID. You obtain this value from
          Settlement objects returned.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1BankAccount'
      deprecated: true
      security:
      - oauth2:
        - BANK_ACCOUNTS_READ
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2020-02-26
        retirementDate: 2021-02-26
        replacedBy: GetBankAccount
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-bankaccounts
  /v1/{location_id}/cash-drawer-shifts:
    get:
      tags:
      - V1Employees
      summary: ListCashDrawerShifts
      description: Provides the details for all of a location's cash drawer shifts
        during a date range. The date range you specify cannot exceed 90 days.
      operationId: ListCashDrawerShifts
      parameters:
      - name: location_id
        in: path
        description: The ID of the location to list cash drawer shifts for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: order
        in: query
        description: 'The order in which cash drawer shifts are listed in the response,
          based on their created_at field. Default value: ASC'
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SortOrder'
      - name: begin_time
        in: query
        description: 'The beginning of the requested reporting period, in ISO 8601
          format. Default value: The current time minus 90 days.'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_time
        in: query
        description: 'The beginning of the requested reporting period, in ISO 8601
          format. Default value: The current time.'
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V1CashDrawerShift'
                x-content-type: application/json
      deprecated: true
      security:
      - oauth2:
        - PAYMENTS_READ
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2020-02-26
        retirementDate: 2021-02-26
        replacedBy: ListCashDrawerShifts
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-cashdrawershifts
  /v1/{location_id}/cash-drawer-shifts/{shift_id}:
    get:
      tags:
      - V1Employees
      summary: RetrieveCashDrawerShift
      description: Provides the details for a single cash drawer shift, including
        all events that occurred during the shift.
      operationId: RetrieveCashDrawerShift
      parameters:
      - name: location_id
        in: path
        description: The ID of the location to list cash drawer shifts for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: shift_id
        in: path
        description: The shift's ID.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1CashDrawerShift'
      deprecated: true
      security:
      - oauth2:
        - TIMECARDS_READ
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2020-02-26
        retirementDate: 2021-02-26
        replacedBy: RetrieveCashDrawerShift
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-cashdrawershifts
  /v1/{location_id}/categories:
    get:
      tags:
      - V1Items
      summary: ListCategories
      description: Lists all the item categories for a given location.
      operationId: ListCategories
      parameters:
      - name: location_id
        in: path
        description: The ID of the location to list categories for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V1Category'
                x-content-type: application/json
      deprecated: true
      security:
      - oauth2:
        - ITEMS_READ
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: ListCatalog
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
    post:
      tags:
      - V1Items
      summary: CreateCategory
      description: Creates an item category.
      operationId: CreateCategory
      parameters:
      - name: location_id
        in: path
        description: The ID of the location to create an item for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1Category'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Category'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: UpsertCatalogObject
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
  /v1/{location_id}/categories/{category_id}:
    put:
      tags:
      - V1Items
      summary: UpdateCategory
      description: Modifies the details of an existing item category.
      operationId: UpdateCategory
      parameters:
      - name: location_id
        in: path
        description: The ID of the category's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: category_id
        in: path
        description: The ID of the category to edit.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1Category'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Category'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: UpsertCatalogObject
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
    delete:
      tags:
      - V1Items
      summary: DeleteCategory
      description: |-
        Deletes an existing item category.


        __DeleteCategory__ returns nothing on success but Connect SDKs
        map the empty response to an empty `V1DeleteCategoryRequest` object
        as documented below.
      operationId: DeleteCategory
      parameters:
      - name: location_id
        in: path
        description: The ID of the item's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: category_id
        in: path
        description: The ID of the category to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Category'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: DeleteCatalogObject
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
  /v1/{location_id}/discounts:
    get:
      tags:
      - V1Items
      summary: ListDiscounts
      description: Lists all the discounts for a given location.
      operationId: ListDiscounts
      parameters:
      - name: location_id
        in: path
        description: The ID of the location to list categories for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V1Discount'
                x-content-type: application/json
      deprecated: true
      security:
      - oauth2:
        - ITEMS_READ
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: ListCatalog
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
    post:
      tags:
      - V1Items
      summary: CreateDiscount
      description: Creates a discount.
      operationId: CreateDiscount
      parameters:
      - name: location_id
        in: path
        description: The ID of the location to create an item for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1Discount'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Discount'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: UpsertCatalogObject
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
  /v1/{location_id}/discounts/{discount_id}:
    put:
      tags:
      - V1Items
      summary: UpdateDiscount
      description: Modifies the details of an existing discount.
      operationId: UpdateDiscount
      parameters:
      - name: location_id
        in: path
        description: The ID of the category's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: discount_id
        in: path
        description: The ID of the discount to edit.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1Discount'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Discount'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: UpsertCatalogObject
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
    delete:
      tags:
      - V1Items
      summary: DeleteDiscount
      description: |-
        Deletes an existing discount.


        __DeleteDiscount__ returns nothing on success but Connect SDKs
        map the empty response to an empty `V1DeleteDiscountRequest` object
        as documented below.
      operationId: DeleteDiscount
      parameters:
      - name: location_id
        in: path
        description: The ID of the item's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: discount_id
        in: path
        description: The ID of the discount to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Discount'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: DeleteCatalogObject
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
  /v1/{location_id}/fees:
    get:
      tags:
      - V1Items
      summary: ListFees
      description: Lists all the fees (taxes) for a given location.
      operationId: ListFees
      parameters:
      - name: location_id
        in: path
        description: The ID of the location to list fees for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V1Fee'
                x-content-type: application/json
      deprecated: true
      security:
      - oauth2:
        - ITEMS_READ
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: ListCatalog
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
    post:
      tags:
      - V1Items
      summary: CreateFee
      description: Creates a fee (tax).
      operationId: CreateFee
      parameters:
      - name: location_id
        in: path
        description: The ID of the location to create a fee for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1Fee'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Fee'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: UpsertCatalogObject
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
  /v1/{location_id}/fees/{fee_id}:
    put:
      tags:
      - V1Items
      summary: UpdateFee
      description: Modifies the details of an existing fee (tax).
      operationId: UpdateFee
      parameters:
      - name: location_id
        in: path
        description: The ID of the fee's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: fee_id
        in: path
        description: The ID of the fee to edit.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1Fee'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Fee'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: UpsertCatalogObject
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
    delete:
      tags:
      - V1Items
      summary: DeleteFee
      description: |-
        Deletes an existing fee (tax).


        __DeleteFee__ returns nothing on success but Connect SDKs
        map the empty response to an empty `V1DeleteFeeRequest` object
        as documented below.
      operationId: DeleteFee
      parameters:
      - name: location_id
        in: path
        description: The ID of the fee's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: fee_id
        in: path
        description: The ID of the fee to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Fee'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: DeleteCatalogObject
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
  /v1/{location_id}/inventory:
    get:
      tags:
      - V1Items
      summary: ListInventory
      description: |-
        Provides inventory information for all inventory-enabled item
        variations.
      operationId: ListInventory
      parameters:
      - name: location_id
        in: path
        description: The ID of the item's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of inventory entries to return in a single
          response. This value cannot exceed 1000.
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: batch_token
        in: query
        description: |-
          A pagination cursor to retrieve the next set of results for your
          original query to the endpoint.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V1InventoryEntry'
                x-content-type: application/json
      deprecated: true
      security:
      - oauth2:
        - ITEMS_READ
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: BatchRetrieveInventoryCounts
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
  /v1/{location_id}/inventory/{variation_id}:
    post:
      tags:
      - V1Items
      summary: AdjustInventory
      description: Adjusts the current available inventory of an item variation.
      operationId: AdjustInventory
      parameters:
      - name: location_id
        in: path
        description: The ID of the item's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: variation_id
        in: path
        description: The ID of the variation to adjust inventory information for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1AdjustInventoryRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1InventoryEntry'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: BatchChangeInventory
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
  /v1/{location_id}/items:
    get:
      tags:
      - V1Items
      summary: ListItems
      description: Provides summary information of all items for a given location.
      operationId: ListItems
      parameters:
      - name: batch_token
        in: query
        description: |-
          A pagination cursor to retrieve the next set of results for your
          original query to the endpoint.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: location_id
        in: path
        description: The ID of the location to list items for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V1Item'
                x-content-type: application/json
      deprecated: true
      security:
      - oauth2:
        - ITEMS_READ
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: ListCatalog
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
    post:
      tags:
      - V1Items
      summary: CreateItem
      description: |-
        Creates an item and at least one variation for it.



        Item-related entities include fields you can use to associate them with
        entities in a non-Square system.

        When you create an item-related entity, you can optionally specify `id`.
        This value must be unique among all IDs ever specified for the account,
        including those specified by other applications. You can never reuse an
        entity ID. If you do not specify an ID, Square generates one for the entity.

        Item variations have a `user_data` string that lets you associate arbitrary
        metadata with the variation. The string cannot exceed 255 characters.
      operationId: CreateItem
      parameters:
      - name: location_id
        in: path
        description: The ID of the location to create an item for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1Item'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Item'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: UpsertCatalogObject
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
  /v1/{location_id}/items/{item_id}:
    get:
      tags:
      - V1Items
      summary: RetrieveItem
      description: |-
        Provides the details for a single item, including associated modifier
        lists and fees.
      operationId: RetrieveItem
      parameters:
      - name: location_id
        in: path
        description: The ID of the item's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: item_id
        in: path
        description: The item's ID.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Item'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_READ
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: RetrieveCatalogObject
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
    put:
      tags:
      - V1Items
      summary: UpdateItem
      description: Modifies the core details of an existing item.
      operationId: UpdateItem
      parameters:
      - name: location_id
        in: path
        description: The ID of the item's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: item_id
        in: path
        description: The ID of the item to modify.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1Item'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Item'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: UpsertCatalogObject
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
    delete:
      tags:
      - V1Items
      summary: DeleteItem
      description: |-
        Deletes an existing item and all item variations associated with it.


        __DeleteItem__ returns nothing on success but Connect SDKs
        map the empty response to an empty `V1DeleteItemRequest` object
        as documented below.
      operationId: DeleteItem
      parameters:
      - name: location_id
        in: path
        description: The ID of the item's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: item_id
        in: path
        description: The ID of the item to modify.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Item'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: DeleteCatalogObject
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
  /v1/{location_id}/items/{item_id}/fees/{fee_id}:
    put:
      tags:
      - V1Items
      summary: ApplyFee
      description: |-
        Associates a fee with an item so the fee is automatically applied to
        the item in Square Point of Sale.
      operationId: ApplyFee
      parameters:
      - name: location_id
        in: path
        description: The ID of the fee's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: item_id
        in: path
        description: The ID of the item to add the fee to.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: fee_id
        in: path
        description: The ID of the fee to apply.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Item'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: UpdateItemTaxes
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
    delete:
      tags:
      - V1Items
      summary: RemoveFee
      description: |-
        Removes a fee assocation from an item so the fee is no longer
        automatically applied to the item in Square Point of Sale.
      operationId: RemoveFee
      parameters:
      - name: location_id
        in: path
        description: The ID of the fee's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: item_id
        in: path
        description: The ID of the item to add the fee to.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: fee_id
        in: path
        description: The ID of the fee to apply.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Item'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: UpdateItemTaxes
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
  /v1/{location_id}/items/{item_id}/image:
    post:
      tags:
      - V1Items
      summary: UploadItemImage
      description: |-
        Uploads a JPEG or PNG image and sets it as the master image for
        an item.


        If you upload an image for an item that already has a master image, the new
        image replaces the existing one.

        <aside class="important">
        Requests to this endpoint use the
        <code>Content-Type: multipart/form-data</code> header instead of
        <code>Content-Type: application/json</code>. Square recommends using an
        HTTP library (such as Requests for Python) that simplifies the process for
        sending <code>multipart/form-data</code> requests.
        </aside>

        The request body assumes the multipart boundary for the request is set to
        `BOUNDARY` in the `Content-Type header`, for example:
        ```
        Content-Type: multipart/form-data; boundary=BOUNDARY
        ```
        __Note__: some HTTP libraries will set the multipart boundary for you.
      operationId: UploadItemImage
      parameters:
      - name: location_id
        in: path
        description: The Square-issued location ID indicating where the item is available.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: item_id
        in: path
        description: The Square-issued ID of the item to modify.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1UploadItemImageRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1ItemImage'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: CreateCatalogImage
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
      x-visibility: DOC_ONLY
  /v1/{location_id}/items/{item_id}/modifier-lists/{modifier_list_id}:
    put:
      tags:
      - V1Items
      summary: ApplyModifierList
      description: |-
        Associates a modifier list with an item so the associated modifier
        options can be applied to the item.
      operationId: ApplyModifierList
      parameters:
      - name: location_id
        in: path
        description: The ID of the item's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: modifier_list_id
        in: path
        description: The ID of the modifier list to apply.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: item_id
        in: path
        description: The ID of the item to add the modifier list to.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Item'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: UpdateItemModifierLists
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
    delete:
      tags:
      - V1Items
      summary: RemoveModifierList
      description: |-
        Removes a modifier list association from an item so the modifier
        options from the list can no longer be applied to the item.
      operationId: RemoveModifierList
      parameters:
      - name: location_id
        in: path
        description: The ID of the item's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: modifier_list_id
        in: path
        description: The ID of the modifier list to remove.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: item_id
        in: path
        description: The ID of the item to remove the modifier list from.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Item'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: UpdateItemModifierLists
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
  /v1/{location_id}/items/{item_id}/variations:
    post:
      tags:
      - V1Items
      summary: CreateVariation
      description: Creates an item variation for an existing item.
      operationId: CreateVariation
      parameters:
      - name: location_id
        in: path
        description: The ID of the item's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: item_id
        in: path
        description: The item's ID.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1Variation'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Variation'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: UpsertCatalogObject
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
  /v1/{location_id}/items/{item_id}/variations/{variation_id}:
    put:
      tags:
      - V1Items
      summary: UpdateVariation
      description: Modifies the details of an existing item variation.
      operationId: UpdateVariation
      parameters:
      - name: location_id
        in: path
        description: The ID of the item's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: item_id
        in: path
        description: The ID of the item to modify.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: variation_id
        in: path
        description: The ID of the variation to modify.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1Variation'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Variation'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: UpsertCatalogObject
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
    delete:
      tags:
      - V1Items
      summary: DeleteVariation
      description: |-
        Deletes an existing item variation from an item.


        __DeleteVariation__ returns nothing on success but Connect SDKs
        map the empty response to an empty `V1DeleteVariationRequest` object
        as documented below.
      operationId: DeleteVariation
      parameters:
      - name: location_id
        in: path
        description: The ID of the item's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: item_id
        in: path
        description: The ID of the item to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: variation_id
        in: path
        description: The ID of the variation to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Variation'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: DeleteCatalogObject
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
  /v1/{location_id}/modifier-lists:
    get:
      tags:
      - V1Items
      summary: ListModifierLists
      description: Lists all the modifier lists for a given location.
      operationId: ListModifierLists
      parameters:
      - name: location_id
        in: path
        description: The ID of the location to list modifier lists for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V1ModifierList'
                x-content-type: application/json
      deprecated: true
      security:
      - oauth2:
        - ITEMS_READ
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: ListCatalog
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
    post:
      tags:
      - V1Items
      summary: CreateModifierList
      description: Creates an item modifier list and at least 1 modifier option for
        it.
      operationId: CreateModifierList
      parameters:
      - name: location_id
        in: path
        description: The ID of the location to create a modifier list for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1ModifierList'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1ModifierList'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: UpsertCatalogObject
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
  /v1/{location_id}/modifier-lists/{modifier_list_id}:
    get:
      tags:
      - V1Items
      summary: RetrieveModifierList
      description: Provides the details for a single modifier list.
      operationId: RetrieveModifierList
      parameters:
      - name: location_id
        in: path
        description: The ID of the item's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: modifier_list_id
        in: path
        description: The modifier list's ID.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1ModifierList'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_READ
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: RetrieveCatalogObject
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
    put:
      tags:
      - V1Items
      summary: UpdateModifierList
      description: Modifies the details of an existing item modifier list.
      operationId: UpdateModifierList
      parameters:
      - name: location_id
        in: path
        description: The ID of the item's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: modifier_list_id
        in: path
        description: The ID of the modifier list to edit.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1UpdateModifierListRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1ModifierList'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: UpsertCatalogObject
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
    delete:
      tags:
      - V1Items
      summary: DeleteModifierList
      description: |-
        Deletes an existing item modifier list and all modifier options
        associated with it.


        __DeleteModifierList__ returns nothing on success but Connect SDKs
        map the empty response to an empty `V1DeleteModifierListRequest` object
        as documented below.
      operationId: DeleteModifierList
      parameters:
      - name: location_id
        in: path
        description: The ID of the item's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: modifier_list_id
        in: path
        description: The ID of the modifier list to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1ModifierList'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: DeleteCatalogObject
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
  /v1/{location_id}/modifier-lists/{modifier_list_id}/modifier-options:
    post:
      tags:
      - V1Items
      summary: CreateModifierOption
      description: Creates an item modifier option and adds it to a modifier list.
      operationId: CreateModifierOption
      parameters:
      - name: location_id
        in: path
        description: The ID of the item's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: modifier_list_id
        in: path
        description: The ID of the modifier list to edit.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1ModifierOption'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1ModifierOption'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: UpsertCatalogObject
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
  /v1/{location_id}/modifier-lists/{modifier_list_id}/modifier-options/{modifier_option_id}:
    put:
      tags:
      - V1Items
      summary: UpdateModifierOption
      description: Modifies the details of an existing item modifier option.
      operationId: UpdateModifierOption
      parameters:
      - name: location_id
        in: path
        description: The ID of the item's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: modifier_list_id
        in: path
        description: The ID of the modifier list to edit.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: modifier_option_id
        in: path
        description: The ID of the modifier list to edit.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1ModifierOption'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1ModifierOption'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: UpsertCatalogObject
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
    delete:
      tags:
      - V1Items
      summary: DeleteModifierOption
      description: |-
        Deletes an existing item modifier option from a modifier list.


        __DeleteModifierOption__ returns nothing on success but Connect
        SDKs map the empty response to an empty `V1DeleteModifierOptionRequest`
        object.
      operationId: DeleteModifierOption
      parameters:
      - name: location_id
        in: path
        description: The ID of the item's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: modifier_list_id
        in: path
        description: The ID of the modifier list to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: modifier_option_id
        in: path
        description: The ID of the modifier list to edit.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1ModifierOption'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        replacedBy: DeleteCatalogObject
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
  /v1/{location_id}/pages:
    get:
      tags:
      - V1Items
      summary: ListPages
      description: |-
        Lists all Favorites pages (in Square Point of Sale) for a given
        location.
      operationId: ListPages
      parameters:
      - name: location_id
        in: path
        description: The ID of the location to list Favorites pages for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V1Page'
                x-content-type: application/json
      deprecated: true
      security:
      - oauth2:
        - ITEMS_READ
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
    post:
      tags:
      - V1Items
      summary: CreatePage
      description: Creates a Favorites page in Square Point of Sale.
      operationId: CreatePage
      parameters:
      - name: location_id
        in: path
        description: The ID of the location to create an item for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1Page'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Page'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
  /v1/{location_id}/pages/{page_id}:
    put:
      tags:
      - V1Items
      summary: UpdatePage
      description: Modifies the details of a Favorites page in Square Point of Sale.
      operationId: UpdatePage
      parameters:
      - name: location_id
        in: path
        description: The ID of the Favorites page's associated location
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page_id
        in: path
        description: The ID of the page to modify.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1Page'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Page'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
    delete:
      tags:
      - V1Items
      summary: DeletePage
      description: |-
        Deletes an existing Favorites page and all of its cells.


        __DeletePage__ returns nothing on success but Connect SDKs
        map the empty response to an empty `V1DeletePageRequest` object.
      operationId: DeletePage
      parameters:
      - name: location_id
        in: path
        description: The ID of the Favorites page's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page_id
        in: path
        description: The ID of the page to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Page'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
  /v1/{location_id}/pages/{page_id}/cells:
    put:
      tags:
      - V1Items
      summary: UpdatePageCell
      description: Modifies a cell of a Favorites page in Square Point of Sale.
      operationId: UpdatePageCell
      parameters:
      - name: location_id
        in: path
        description: The ID of the Favorites page's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page_id
        in: path
        description: The ID of the page the cell belongs to.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1PageCell'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Page'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
    delete:
      tags:
      - V1Items
      summary: DeletePageCell
      description: |-
        Deletes a cell from a Favorites page in Square Point of Sale.


        __DeletePageCell__ returns nothing on success but Connect SDKs
        map the empty response to an empty `V1DeletePageCellRequest` object
        as documented below.
      operationId: DeletePageCell
      parameters:
      - name: location_id
        in: path
        description: The ID of the Favorites page's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: row
        in: query
        description: The row of the cell to clear. Always an integer between 0 and
          4, inclusive. Row 0 is the top row.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page_id
        in: path
        description: The ID of the page to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: column
        in: query
        description: The column of the cell to clear. Always an integer between 0
          and 4, inclusive. Column 0 is the leftmost column.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Page'
      deprecated: true
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-11-20
        retirementDate: 2020-11-18
        guideUrl: https://developer.squareup.com/docs/migrate-from-v1/guides/v1-items
  /v1/{location_id}/payments:
    get:
      tags:
      - V1Transactions
      summary: ListPayments
      description: |-
        Provides summary information for all payments taken for a given
        Square account during a date range. Date ranges cannot exceed 1 year in
        length. See Date ranges for details of inclusive and exclusive dates.

        *Note**: Details for payments processed with Square Point of Sale while
        in offline mode may not be transmitted to Square for up to 72 hours.
        Offline payments have a `created_at` value that reflects the time the
        payment was originally processed, not the time it was subsequently
        transmitted to Square. Consequently, the ListPayments endpoint might
        list an offline payment chronologically between online payments that
        were seen in a previous request.
      operationId: ListPayments
      parameters:
      - name: location_id
        in: path
        description: The ID of the location to list payments for. If you specify me,
          this endpoint returns payments aggregated from all of the business's locations.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: order
        in: query
        description: The order in which payments are listed in the response.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SortOrder'
      - name: begin_time
        in: query
        description: 'The beginning of the requested reporting period, in ISO 8601
          format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z),
          this endpoint returns an error. Default value: The current time minus one
          year.'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_time
        in: query
        description: 'The end of the requested reporting period, in ISO 8601 format.
          If this value is more than one year greater than begin_time, this endpoint
          returns an error. Default value: The current time.'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of payments to return in a single response.
          This value cannot exceed 200.
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: batch_token
        in: query
        description: |-
          A pagination cursor to retrieve the next set of results for your
          original query to the endpoint.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: include_partial
        in: query
        description: Indicates whether or not to include partial payments in the response.
          Partial payments will have the tenders collected so far, but the itemizations
          will be empty until the payment is completed.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V1Payment'
                x-content-type: application/json
      security:
      - oauth2:
        - PAYMENTS_READ
      x-release-status: PUBLIC
  /v1/{location_id}/payments/{payment_id}:
    get:
      tags:
      - V1Transactions
      summary: RetrievePayment
      description: Provides comprehensive information for a single payment.
      operationId: RetrievePayment
      parameters:
      - name: location_id
        in: path
        description: The ID of the payment's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: payment_id
        in: path
        description: The Square-issued payment ID. payment_id comes from Payment objects
          returned by the List Payments endpoint, Settlement objects returned by the
          List Settlements endpoint, or Refund objects returned by the List Refunds
          endpoint.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Payment'
      security:
      - oauth2:
        - PAYMENTS_READ
      x-release-status: PUBLIC
  /v1/{location_id}/refunds:
    get:
      tags:
      - V1Transactions
      summary: ListRefunds
      description: Provides the details for all refunds initiated by a merchant or
        any of the merchant's mobile staff during a date range. Date ranges cannot
        exceed one year in length.
      operationId: ListRefunds
      parameters:
      - name: location_id
        in: path
        description: The ID of the location to list refunds for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: order
        in: query
        description: TThe order in which payments are listed in the response.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SortOrder'
      - name: begin_time
        in: query
        description: 'The beginning of the requested reporting period, in ISO 8601
          format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z),
          this endpoint returns an error. Default value: The current time minus one
          year.'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_time
        in: query
        description: 'The end of the requested reporting period, in ISO 8601 format.
          If this value is more than one year greater than begin_time, this endpoint
          returns an error. Default value: The current time.'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: 'The approximate number of refunds to return in a single response.
          Default: 100. Max: 200. Response may contain more results than the prescribed
          limit when refunds are made simultaneously to multiple tenders in a payment
          or when refunds are generated in an exchange to account for the value of
          returned goods.'
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: batch_token
        in: query
        description: |-
          A pagination cursor to retrieve the next set of results for your
          original query to the endpoint.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V1Refund'
                x-content-type: application/json
      security:
      - oauth2:
        - PAYMENTS_READ
      x-release-status: PUBLIC
    post:
      tags:
      - V1Transactions
      summary: CreateRefund
      description: |-
        Issues a refund for a previously processed payment. You must issue
        a refund within 60 days of the associated payment.

        You cannot issue a partial refund for a split tender payment. You must
        instead issue a full or partial refund for a particular tender, by
        providing the applicable tender id to the V1CreateRefund endpoint.
        Issuing a full refund for a split tender payment refunds all tenders
        associated with the payment.

        Issuing a refund for a card payment is not reversible. For development
        purposes, you can create fake cash payments in Square Point of Sale and
        refund them.
      operationId: CreateRefund
      parameters:
      - name: location_id
        in: path
        description: The ID of the original payment's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateRefundRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Refund'
      security:
      - oauth2:
        - PAYMENTS_WRITE
      x-release-status: PUBLIC
  /v1/{location_id}/settlements:
    get:
      tags:
      - V1Transactions
      summary: ListSettlements
      description: |-
        Provides summary information for all deposits and withdrawals
        initiated by Square to a linked bank account during a date range. Date
        ranges cannot exceed one year in length.

        *Note**: the ListSettlements endpoint does not provide entry
        information.
      operationId: ListSettlements
      parameters:
      - name: location_id
        in: path
        description: The ID of the location to list settlements for. If you specify
          me, this endpoint returns settlements aggregated from all of the business's
          locations.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: order
        in: query
        description: The order in which settlements are listed in the response.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SortOrder'
      - name: begin_time
        in: query
        description: 'The beginning of the requested reporting period, in ISO 8601
          format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z),
          this endpoint returns an error. Default value: The current time minus one
          year.'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_time
        in: query
        description: 'The end of the requested reporting period, in ISO 8601 format.
          If this value is more than one year greater than begin_time, this endpoint
          returns an error. Default value: The current time.'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of settlements to return in a single response.
          This value cannot exceed 200.
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: status
        in: query
        description: Provide this parameter to retrieve only settlements with a particular
          status (SENT or FAILED).
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/V1ListSettlementsRequestStatus'
      - name: batch_token
        in: query
        description: |-
          A pagination cursor to retrieve the next set of results for your
          original query to the endpoint.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V1Settlement'
                x-content-type: application/json
      security:
      - oauth2:
        - SETTLEMENTS_READ
      x-release-status: PUBLIC
  /v1/{location_id}/settlements/{settlement_id}:
    get:
      tags:
      - V1Transactions
      summary: RetrieveSettlement
      description: |-
        Provides comprehensive information for a single settlement.

        The returned `Settlement` objects include an `entries` field that lists
        the transactions that contribute to the settlement total. Most
        settlement entries correspond to a payment payout, but settlement
        entries are also generated for less common events, like refunds, manual
        adjustments, or chargeback holds.

        Square initiates its regular deposits as indicated in the
        [Deposit Options with Square](https://squareup.com/help/us/en/article/3807)
        help article. Details for a regular deposit are usually not available
        from Connect API endpoints before 10 p.m. PST the same day.

        Square does not know when an initiated settlement **completes**, only
        whether it has failed. A completed settlement is typically reflected in
        a bank account within 3 business days, but in exceptional cases it may
        take longer.
      operationId: RetrieveSettlement
      parameters:
      - name: location_id
        in: path
        description: The ID of the settlements's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: settlement_id
        in: path
        description: The settlement's Square-issued ID. You obtain this value from
          Settlement objects returned by the List Settlements endpoint.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Settlement'
      security:
      - oauth2:
        - SETTLEMENTS_READ
      x-release-status: PUBLIC
  /v1/{location_id}/webhooks:
    get:
      tags:
      - V1Webhooks
      summary: ListWebhooks
      description: |-
        Lists which types of events trigger webhook notifications for a particular location.
        See the [V1 Webhooks API guide](https://developer.squareup.com/docs/webhooks-api/what-it-does-v1) for more information.
      operationId: ListWebhooks
      parameters:
      - name: location_id
        in: path
        description: The ID of the location to list webhook notification types for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V1WebhooksEvents'
                x-content-type: application/json
      security:
      - oauth2:
        - TIMECARDS_READ
        - PAYMENTS_READ
        - ITEMS_READ
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    put:
      tags:
      - V1Webhooks
      summary: UpdateWebhooks
      description: |-
        Changes the webhook event subscriptions for a location.
        See the [V1 Webhooks API guide](https://developer.squareup.com/docs/webhooks-api/what-it-does-v1) for more information.
      operationId: UpdateWebhooks
      parameters:
      - name: location_id
        in: path
        description: The ID of the location to list webhook notification types for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V1WebhooksEvents'
                x-content-type: application/json
      security:
      - oauth2:
        - TIMECARDS_READ
        - PAYMENTS_READ
        - ITEMS_READ
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
  /v2/apple-pay/domains:
    post:
      tags:
      - ApplePay
      summary: RegisterDomain
      description: |-
        Activates a domain for use with Web Apple Pay and Square. A validation
        will be performed on this domain by Apple to ensure is it properly set up as
        an Apple Pay enabled domain.

        This endpoint provides an easy way for platform developers to bulk activate
        Web Apple Pay with Square for merchants using their platform.

        To learn more about Apple Pay on Web see the Apple Pay section in the
        [Square Payment Form Walkthrough](https://developer.squareup.com/docs/docs/payment-form/payment-form-walkthrough).
      operationId: RegisterDomain
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterDomainRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterDomainResponse'
      security:
      - oauth2: []
      x-release-status: PUBLIC
  /v2/bank-accounts:
    get:
      tags:
      - BankAccounts
      summary: ListBankAccounts
      description: "Returns a list of [BankAccount](#type-bankaccount) objects linked\
        \ to a Square account. \nFor more information, see \n[Bank Accounts API](https://developer.squareup.com/docs/docs/bank-accounts-api)."
      operationId: ListBankAccounts
      parameters:
      - name: cursor
        in: query
        description: "The pagination cursor returned by a previous call to this endpoint.\n\
          Use it in the next `ListBankAccounts` request to retrieve the next set \n\
          of results.\n\nSee the [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination)\
          \ guide for more information."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Upper limit on the number of bank accounts to return in the\
          \ response. \nCurrently, 1000 is the largest supported limit. You can specify\
          \ a limit \nof up to 1000 bank accounts. This is also the default limit."
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: location_id
        in: query
        description: "Location ID. You can specify this optional filter \nto retrieve\
          \ only the linked bank accounts belonging to a specific location."
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBankAccountsResponse'
      security:
      - oauth2:
        - BANK_ACCOUNTS_READ
      x-release-status: PUBLIC
  /v2/bank-accounts/by-v1-id/{v1_bank_account_id}:
    get:
      tags:
      - BankAccounts
      summary: GetBankAccountByV1Id
      description: "Returns details of a [BankAccount](#type-bankaccount) identified\
        \ by V1 bank account ID. \nFor more information, see \n[Retrieve a bank account\
        \ by using an ID issued by V1 Bank Accounts API](https://developer.squareup.com/docs/docs/bank-accounts-api#retrieve-a-bank-account-by-using-an-id-issued-by-the-v1-bank-accounts-api)."
      operationId: GetBankAccountByV1Id
      parameters:
      - name: v1_bank_account_id
        in: path
        description: "Connect V1 ID of the desired `BankAccount`. For more information,\
          \ see \n[Retrieve a bank account by using an ID issued by V1 Bank Accounts\
          \ API](https://developer.squareup.com/docs/docs/bank-accounts-api#retrieve-a-bank-account-by-using-an-id-issued-by-v1-bank-accounts-api)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBankAccountByV1IdResponse'
      security:
      - oauth2:
        - BANK_ACCOUNTS_READ
      x-release-status: PUBLIC
  /v2/bank-accounts/{bank_account_id}:
    get:
      tags:
      - BankAccounts
      summary: GetBankAccount
      description: "Returns details of a [BankAccount](#type-bankaccount) \nlinked\
        \ to a Square account. For more information, see \n[Bank Accounts API](https://developer.squareup.com/docs/docs/bank-accounts-api)."
      operationId: GetBankAccount
      parameters:
      - name: bank_account_id
        in: path
        description: Square-issued ID of the desired `BankAccount`.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBankAccountResponse'
      security:
      - oauth2:
        - BANK_ACCOUNTS_READ
      x-release-status: PUBLIC
  /v2/cash-drawers/shifts:
    get:
      tags:
      - CashDrawers
      summary: ListCashDrawerShifts
      description: |-
        Provides the details for all of the cash drawer shifts for a location
        in a date range.
      operationId: ListCashDrawerShifts
      parameters:
      - name: location_id
        in: query
        description: The ID of the location to query for a list of cash drawer shifts.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: sort_order
        in: query
        description: |-
          The order in which cash drawer shifts are listed in the response,
          based on their opened_at field. Default value: ASC
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SortOrder'
      - name: begin_time
        in: query
        description: The inclusive start time of the query on opened_at, in ISO 8601
          format.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_time
        in: query
        description: The exclusive end date of the query on opened_at, in ISO 8601
          format.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          Number of cash drawer shift events in a page of results (200 by
          default, 1000 max).
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: cursor
        in: query
        description: Opaque cursor for fetching the next page of results.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCashDrawerShiftsResponse'
      security:
      - oauth2:
        - CASH_DRAWER_READ
      x-release-status: PUBLIC
  /v2/cash-drawers/shifts/{shift_id}:
    get:
      tags:
      - CashDrawers
      summary: RetrieveCashDrawerShift
      description: |-
        Provides the summary details for a single cash drawer shift. See
        RetrieveCashDrawerShiftEvents for a list of cash drawer shift events.
      operationId: RetrieveCashDrawerShift
      parameters:
      - name: location_id
        in: query
        description: The ID of the location to retrieve cash drawer shifts from.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: shift_id
        in: path
        description: The shift ID.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveCashDrawerShiftResponse'
      security:
      - oauth2:
        - CASH_DRAWER_READ
      x-release-status: PUBLIC
  /v2/cash-drawers/shifts/{shift_id}/events:
    get:
      tags:
      - CashDrawers
      summary: ListCashDrawerShiftEvents
      description: Provides a paginated list of events for a single cash drawer shift.
      operationId: ListCashDrawerShiftEvents
      parameters:
      - name: location_id
        in: query
        description: The ID of the location to list cash drawer shifts for.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: shift_id
        in: path
        description: The shift ID.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          Number of resources to be returned in a page of results (200 by
          default, 1000 max).
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: cursor
        in: query
        description: Opaque cursor for fetching the next page of results.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCashDrawerShiftEventsResponse'
      security:
      - oauth2:
        - CASH_DRAWER_READ
      x-release-status: PUBLIC
  /v2/catalog/batch-delete:
    post:
      tags:
      - Catalog
      summary: BatchDeleteCatalogObjects
      description: |-
        Deletes a set of [CatalogItem](#type-catalogitem)s based on the
        provided list of target IDs and returns a set of successfully deleted IDs in
        the response. Deletion is a cascading event such that all children of the
        targeted object are also deleted. For example, deleting a CatalogItem will
        also delete all of its [CatalogItemVariation](#type-catalogitemvariation)
        children.

        `BatchDeleteCatalogObjects` succeeds even if only a portion of the targeted
        IDs can be deleted. The response will only include IDs that were
        actually deleted.
      operationId: BatchDeleteCatalogObjects
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDeleteCatalogObjectsRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDeleteCatalogObjectsResponse'
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: PUBLIC
      x-example-scenarios:
        scenarios:
        - name: Delete multiple catalog objects
          bodyParameters:
            object_ids:
            - W62UWFY35CWMYGVWK6TWJDNI
            - AA27W3M2GGTF3H6AVPNB77CK
          response:
            deleted_object_ids:
            - W62UWFY35CWMYGVWK6TWJDNI
            - AA27W3M2GGTF3H6AVPNB77CK
            deleted_at: 2016-11-16T22:25:24.878Z
  /v2/catalog/batch-retrieve:
    post:
      tags:
      - Catalog
      summary: BatchRetrieveCatalogObjects
      description: |-
        Returns a set of objects based on the provided ID.
        Each [CatalogItem](#type-catalogitem) returned in the set includes all of its
        child information including: all of its
        [CatalogItemVariation](#type-catalogitemvariation) objects, references to
        its [CatalogModifierList](#type-catalogmodifierlist) objects, and the ids of
        any [CatalogTax](#type-catalogtax) objects that apply to it.
      operationId: BatchRetrieveCatalogObjects
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRetrieveCatalogObjectsRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchRetrieveCatalogObjectsResponse'
      security:
      - oauth2:
        - ITEMS_READ
      x-release-status: PUBLIC
      x-example-scenarios:
        scenarios:
        - name: Retrieve multiple catalog objects
          request_body:
            object_ids:
            - W62UWFY35CWMYGVWK6TWJDNI
            - AA27W3M2GGTF3H6AVPNB77CK
            include_related_objects: true
          response:
            objects:
            - type: ITEM
              id: W62UWFY35CWMYGVWK6TWJDNI
              updated_at: 2016-11-16T22:25:24.878Z
              version: 1479335124878
              is_deleted: false
              present_at_all_locations: true
              item_data:
                name: Tea
                description: Hot Leaf Juice
                category_id: BJNQCF2FJ6S6UIDT65ABHLRX
                tax_ids:
                - HURXQOOAIC4IZSI2BEXQRYFY
                variations:
                - type: ITEM_VARIATION
                  id: 2TZFAOHWGG7PAK2QEXWYPZSP
                  updated_at: 2016-11-16T22:25:24.878Z
                  version: 1479335124878
                  is_deleted: false
                  present_at_all_locations: true
                  item_variation_data:
                    item_id: W62UWFY35CWMYGVWK6TWJDNI
                    name: Mug
                    ordinal: 0
                    pricing_type: FIXED_PRICING
                    price_money:
                      amount: 150
                      currency: USD
            - type: ITEM
              id: AA27W3M2GGTF3H6AVPNB77CK
              updated_at: 2016-11-16T22:25:24.878Z
              version: 1479335124878
              is_deleted: false
              present_at_all_locations: true
              item_data:
                name: Coffee
                description: Hot Bean Juice
                category_id: BJNQCF2FJ6S6UIDT65ABHLRX
                tax_ids:
                - HURXQOOAIC4IZSI2BEXQRYFY
                variations:
                - type: ITEM_VARIATION
                  id: LBTYIHNHU52WOIHWT7SNRIYH
                  updated_at: 2016-11-16T22:25:24.878Z
                  version: 1479335124878
                  is_deleted: false
                  present_at_all_locations: true
                  item_variation_data:
                    item_id: AA27W3M2GGTF3H6AVPNB77CK
                    name: Regular
                    ordinal: 0
                    pricing_type: FIXED_PRICING
                    price_money:
                      amount: 250
                      currency: USD
                - type: ITEM_VARIATION
                  id: PKYIC7HGGKW5CYVSCVDEIMHY
                  updated_at: 2016-11-16T22:25:24.878Z
                  version: 1479335124878
                  is_deleted: false
                  present_at_all_locations: true
                  item_variation_data:
                    item_id: AA27W3M2GGTF3H6AVPNB77CK
                    name: Large
                    ordinal: 1
                    pricing_type: FIXED_PRICING
                    price_money:
                      amount: 350
                      currency: USD
            related_objects:
            - type: CATEGORY
              id: BJNQCF2FJ6S6UIDT65ABHLRX
              updated_at: 2016-11-16T22:25:24.878Z
              version: 1479335124878
              is_deleted: false
              present_at_all_locations: true
              category_data:
                name: Beverages
            - type: TAX
              id: HURXQOOAIC4IZSI2BEXQRYFY
              updated_at: 2016-11-16T22:25:24.878Z
              version: 1479335124878
              is_deleted: false
              present_at_all_locations: true
              tax_data:
                name: Sales Tax
                calculation_phase: TAX_SUBTOTAL_PHASE
                inclusion_type: ADDITIVE
                percentage: "5.0"
                enabled: true
  /v2/catalog/batch-upsert:
    post:
      tags:
      - Catalog
      summary: BatchUpsertCatalogObjects
      description: |-
        Creates or updates up to 10,000 target objects based on the provided
        list of objects. The target objects are grouped into batches and each batch is
        inserted/updated in an all-or-nothing manner. If an object within a batch is
        malformed in some way, or violates a database constraint, the entire batch
        containing that item will be disregarded. However, other batches in the same
        request may still succeed. Each batch may contain up to 1,000 objects, and
        batches will be processed in order as long as the total object count for the
        request (items, variations, modifier lists, discounts, and taxes) is no more
        than 10,000.
      operationId: BatchUpsertCatalogObjects
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchUpsertCatalogObjectsRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUpsertCatalogObjectsResponse'
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: PUBLIC
      x-example-scenarios:
        scenarios:
        - name: Add a batch of objects to the catalog
          bodyParams:
            idempotency_key: 789ff020-f723-43a9-b4b5-43b5dc1fa3dc
            batches:
            - objects:
              - type: ITEM
                id: '#Tea'
                present_at_all_locations: true
                item_data:
                  name: Tea
                  description: Hot Leaf Juice
                  category_id: '#Beverages'
                  tax_ids:
                  - '#SalesTax'
                  variations:
                  - type: ITEM_VARIATION
                    id: '#Tea_Mug'
                    present_at_all_locations: true
                    item_variation_data:
                      item_id: '#Tea'
                      name: Mug
                      pricing_type: FIXED_PRICING
                      price_money:
                        amount: 150
                        currency: USD
              - type: ITEM
                id: '#Coffee'
                present_at_all_locations: true
                item_data:
                  name: Coffee
                  description: Hot Bean Juice
                  category_id: '#Beverages'
                  tax_ids:
                  - '#SalesTax'
                  variations:
                  - type: ITEM_VARIATION
                    id: '#Coffee_Regular'
                    present_at_all_locations: true
                    item_variation_data:
                      item_id: '#Coffee'
                      name: Regular
                      pricing_type: FIXED_PRICING
                      price_money:
                        amount: 250
                        currency: USD
                  - type: ITEM_VARIATION
                    id: '#Coffee_Large'
                    present_at_all_locations: true
                    item_variation_data:
                      item_id: '#Coffee'
                      name: Large
                      pricing_type: FIXED_PRICING
                      price_money:
                        amount: 350
                        currency: USD
              - type: CATEGORY
                id: '#Beverages'
                present_at_all_locations: true
                category_data:
                  name: Beverages
              - type: TAX
                id: '#SalesTax'
                present_at_all_locations: true
                tax_data:
                  name: Sales Tax
                  calculation_phase: TAX_SUBTOTAL_PHASE
                  inclusion_type: ADDITIVE
                  percentage: "5.0"
                  applies_to_custom_amounts: true
                  enabled: true
          response:
            objects:
            - type: ITEM
              id: ZSDZN34NAXDLC6D5ZQMNSOUM
              updated_at: 2017-05-10T18:48:39.798Z
              version: 1494442119798
              is_deleted: false
              present_at_all_locations: true
              item_data:
                name: Tea
                description: Hot Leaf Juice
                category_id: LYT72K3WGJFFCIMB63XARP3I
                tax_ids:
                - XHSHLHNWSI3HVI4BW5ZUZXI3
                variations:
                - type: ITEM_VARIATION
                  id: NAYHET5R52MIYCEF34ZMAHFM
                  updated_at: 2017-05-10T18:48:39.798Z
                  version: 1494442119798
                  is_deleted: false
                  present_at_all_locations: true
                  item_variation_data:
                    item_id: ZSDZN34NAXDLC6D5ZQMNSOUM
                    name: Mug
                    ordinal: 0
                    pricing_type: FIXED_PRICING
                    price_money:
                      amount: 150
                      currency: USD
            - type: ITEM
              id: PJMCEBHHUS3OKDB6PYUHLCPP
              updated_at: 2017-05-10T18:48:39.798Z
              version: 1494442119798
              is_deleted: false
              present_at_all_locations: true
              item_data:
                name: Coffee
                description: Hot Bean Juice
                category_id: LYT72K3WGJFFCIMB63XARP3I
                tax_ids:
                - XHSHLHNWSI3HVI4BW5ZUZXI3
                variations:
                - type: ITEM_VARIATION
                  id: OTYDX45SPG7LJQUVCBZI4INH
                  updated_at: 2017-05-10T18:48:39.798Z
                  version: 1494442119798
                  is_deleted: false
                  present_at_all_locations: true
                  item_variation_data:
                    item_id: PJMCEBHHUS3OKDB6PYUHLCPP
                    name: Regular
                    ordinal: 0
                    pricing_type: FIXED_PRICING
                    price_money:
                      amount: 250
                      currency: USD
                - type: ITEM_VARIATION
                  id: GZDA3JB37FYVOPI4AOEBOITI
                  updated_at: 2017-05-10T18:48:39.798Z
                  version: 1494442119798
                  is_deleted: false
                  present_at_all_locations: true
                  item_variation_data:
                    item_id: PJMCEBHHUS3OKDB6PYUHLCPP
                    name: Large
                    ordinal: 1
                    pricing_type: FIXED_PRICING
                    price_money:
                      amount: 350
                      currency: USD
            - type: CATEGORY
              id: LYT72K3WGJFFCIMB63XARP3I
              updated_at: 2017-05-10T18:48:39.798Z
              version: 1494442119798
              is_deleted: false
              present_at_all_locations: true
              category_data:
                name: Beverages
            - type: TAX
              id: XHSHLHNWSI3HVI4BW5ZUZXI3
              updated_at: 2017-05-10T18:48:39.798Z
              version: 1494442119798
              is_deleted: false
              present_at_all_locations: true
              tax_data:
                name: Sales Tax
                calculation_phase: TAX_SUBTOTAL_PHASE
                inclusion_type: ADDITIVE
                percentage: "5.0"
                applies_to_custom_amounts: true
                enabled: true
            id_mappings:
            - client_object_id: '#Tea'
              object_id: ZSDZN34NAXDLC6D5ZQMNSOUM
            - client_object_id: '#Coffee'
              object_id: PJMCEBHHUS3OKDB6PYUHLCPP
            - client_object_id: '#Beverages'
              object_id: LYT72K3WGJFFCIMB63XARP3I
            - client_object_id: '#SalesTax'
              object_id: XHSHLHNWSI3HVI4BW5ZUZXI3
            - client_object_id: '#Tea_Mug'
              object_id: NAYHET5R52MIYCEF34ZMAHFM
            - client_object_id: '#Coffee_Regular'
              object_id: OTYDX45SPG7LJQUVCBZI4INH
            - client_object_id: '#Coffee_Large'
              object_id: GZDA3JB37FYVOPI4AOEBOITI
  /v2/catalog/images:
    post:
      tags:
      - Catalog
      summary: CreateCatalogImage
      description: |-
        Uploads an image file to be represented by an [CatalogImage](#type-catalogimage) object linked to an existing
        [CatalogObject](#type-catalogobject) instance. A call to this endpoint can upload an image, link an image to
        a catalog object, or do both.

        This `CreateCatalogImage` endpoint accepts HTTP multipart/form-data requests with a JSON part and an image file part in
        JPEG, PJPEG, PNG, or GIF format. The maximum file size is 15MB.

        Additional information and an example cURL request can be found in the [Create a Catalog Image recipe](https://developer.squareup.com/docs/more-apis/catalog/cookbook/create-catalog-images).
      operationId: CreateCatalogImage
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/body'
            encoding:
              request:
                contentType: application/json; charset=utf-8
                style: form
              image_file:
                contentType: image/jpeg
                style: form
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCatalogImageResponse'
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: PUBLIC
      x-example-scenarios:
        scenarios:
        - name: Upload an image for a catalog object
          bodyParams:
            idempotency_key: 528dea59-7bfb-43c1-bd48-4a6bba7dd61f86
            object_id: ND6EA5AAJEO5WL3JNNIAQA32
            image:
              id: '#TEMP_ID'
              type: IMAGE
              image_data:
                caption: A picture of a cup of coffee
          response:
            image:
              type: IMAGE
              id: XVGTTXX6VIFDJVH6YGDJCEK4
              updated_at: 2020-08-12T01:49:50.295Z
              version: 1597196990295
              is_deleted: false
              present_at_all_locations: true
              image_data:
                name: ""
                url: https://square-catalog-sandbox.s3.amazonaws.com/files/febae45897bdab1234dc3db23a7c0e66ddea6001/original.png
                caption: A picture of a cup of coffee
  /v2/catalog/info:
    get:
      tags:
      - Catalog
      summary: CatalogInfo
      description: |-
        Retrieves information about the Square Catalog API, such as batch size
        limits that can be used by the `BatchUpsertCatalogObjects` endpoint.
      operationId: CatalogInfo
      parameters: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogInfoResponse'
      security:
      - oauth2:
        - ITEMS_READ
      x-release-status: PUBLIC
      x-example-scenarios:
        scenarios:
        - name: Get catalog API information
          response:
            limits:
              batch_upsert_max_objects_per_batch: 1000
              batch_upsert_max_total_objects: 10000
              batch_retrieve_max_object_ids: 1000
              search_max_page_limit: 1000
              batch_delete_max_object_ids: 200
              update_item_taxes_max_item_ids: 1000
              update_item_taxes_max_taxes_to_enable: 1000
              update_item_taxes_max_taxes_to_disable: 1000
              update_item_modifier_lists_max_item_ids: 1000
              update_item_modifier_lists_max_modifier_lists_to_enable: 1000
              update_item_modifier_lists_max_modifier_lists_to_disable: 1000
  /v2/catalog/list:
    get:
      tags:
      - Catalog
      summary: ListCatalog
      description: |-
        Returns a list of [CatalogObject](#type-catalogobject)s that includes
        all objects of a set of desired types (for example, all [CatalogItem](#type-catalogitem)
        and [CatalogTax](#type-catalogtax) objects) in the catalog. The `types` parameter
        is specified as a comma-separated list of valid [CatalogObject](#type-catalogobject) types:
        `ITEM`, `ITEM_VARIATION`, `MODIFIER`, `MODIFIER_LIST`, `CATEGORY`, `DISCOUNT`, `TAX`, `IMAGE`.

        __Important:__ ListCatalog does not return deleted catalog items. To retrieve
        deleted catalog items, use SearchCatalogObjects and set `include_deleted_objects`
        to `true`.
      operationId: ListCatalog
      parameters:
      - name: cursor
        in: query
        description: |-
          The pagination cursor returned in the previous response. Leave unset for an initial request.
          See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: types
        in: query
        description: |-
          An optional case-insensitive, comma-separated list of object types to retrieve, for example
          `ITEM,ITEM_VARIATION,CATEGORY,IMAGE`.

          The legal values are taken from the CatalogObjectType enum:
          `ITEM`, `ITEM_VARIATION`, `CATEGORY`, `DISCOUNT`, `TAX`,
          `MODIFIER`, `MODIFIER_LIST`, or `IMAGE`.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCatalogResponse'
      security:
      - oauth2:
        - ITEMS_READ
      x-release-status: PUBLIC
      x-example-scenarios:
        scenarios:
        - name: List catalog objects of a certain type
          requestParams:
            types: category,tax
          response:
            objects:
            - type: CATEGORY
              id: 5ZYQZZ2IECPVJ2IJ5KQPRDC3
              updated_at: 2017-02-21T14:50:26.495Z
              version: 1487688626495
              is_deleted: false
              present_at_all_locations: true
              category_data:
                name: Beverages
            - type: TAX
              id: L5R47DGBZOOVKCAFIXC56AEN
              updated_at: 2017-02-21T14:50:26.495Z
              version: 1487688626495
              is_deleted: false
              present_at_all_locations: true
              tax_data:
                name: Sales Tax
                calculation_phase: TAX_SUBTOTAL_PHASE
                inclusion_type: ADDITIVE
                percentage: "5.0"
                enabled: true
  /v2/catalog/object:
    post:
      tags:
      - Catalog
      summary: UpsertCatalogObject
      description: Creates or updates the target [CatalogObject](#type-catalogobject).
      operationId: UpsertCatalogObject
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertCatalogObjectRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertCatalogObjectResponse'
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: PUBLIC
      x-example-scenarios:
        scenarios:
        - name: Add an item
          bodyParameters:
            idempotency_key: af3d1afc-7212-4300-b463-0bfc5314a5ae
            object:
              type: ITEM
              id: '#Cocoa'
              item_data:
                name: Cocoa
                description: Hot chocolate
                abbreviation: Ch
          response:
            catalog_object:
              type: ITEM
              id: 7SB3ZQYJ5GDMVFL7JK46JCHT
              updated_at: 2016-11-16T22:32:42.996Z
              version: 1479335562996
              is_deleted: false
              item_data:
                name: Cocoa
                description: Hot chocolate
                abbreviation: Ch
            id_mappings:
            - client_object_id: '#Cocoa'
              object_id: 7SB3ZQYJ5GDMVFL7JK46JCHT
        - name: Add a category
          bodyParameters:
            idempotency_key: 4ef9a31f-b405-4df8-9c67-e6f964778fe8
            object:
              id: '#Beverages'
              type: CATEGORY
              category_data:
                name: Beverages
          response:
            catalog_object:
              type: CATEGORY
              id: FBBT5XUEA77WPZZQR7PVNJXW
              updated_at: 2020-08-11T22:52:08.059Z
              version: 1597186328059
              is_deleted: false
              present_at_all_locations: true
              category_data:
                name: Beverages
            id_mappings:
            - client_object_id: '#Beverages'
              object_id: FBBT5XUEA77WPZZQR7PVNJXW
  /v2/catalog/object/{object_id}:
    get:
      tags:
      - Catalog
      summary: RetrieveCatalogObject
      description: |-
        Returns a single [CatalogItem](#type-catalogitem) as a
        [CatalogObject](#type-catalogobject) based on the provided ID. The returned
        object includes all of the relevant [CatalogItem](#type-catalogitem)
        information including: [CatalogItemVariation](#type-catalogitemvariation)
        children, references to its
        [CatalogModifierList](#type-catalogmodifierlist) objects, and the ids of
        any [CatalogTax](#type-catalogtax) objects that apply to it.
      operationId: RetrieveCatalogObject
      parameters:
      - name: object_id
        in: path
        description: The object ID of any type of catalog objects to be retrieved.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: include_related_objects
        in: query
        description: |-
          If `true`, the response will include additional objects that are related to the
          requested object, as follows:

          If the `object` field of the response contains a CatalogItem,
          its associated CatalogCategory, CatalogTax objects,
          CatalogImages and CatalogModifierLists
          will be returned in the `related_objects` field of the response. If the `object`
          field of the response contains a CatalogItemVariation,
          its parent CatalogItem will be returned in the `related_objects` field of
          the response.

          Default value: `false`
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveCatalogObjectResponse'
      security:
      - oauth2:
        - ITEMS_READ
      x-release-status: PUBLIC
      x-example-scenarios:
        scenarios:
        - name: Retrieve catalog object
          pathParameters:
            object_id: W62UWFY35CWMYGVWK6TWJDNI
          response:
            object:
              type: ITEM
              id: W62UWFY35CWMYGVWK6TWJDNI
              updated_at: 2016-11-16T22:25:24.878Z
              version: 1479335124878
              is_deleted: false
              present_at_all_locations: true
              item_data:
                name: Tea
                description: Hot Leaf Juice
                category_id: BJNQCF2FJ6S6UIDT65ABHLRX
                tax_ids:
                - HURXQOOAIC4IZSI2BEXQRYFY
                variations:
                - type: ITEM_VARIATION
                  id: 2TZFAOHWGG7PAK2QEXWYPZSP
                  updated_at: 2016-11-16T22:25:24.878Z
                  version: 1479335124878
                  is_deleted: false
                  present_at_all_locations: true
                  item_variation_data:
                    item_id: W62UWFY35CWMYGVWK6TWJDNI
                    name: Mug
                    ordinal: 0
                    pricing_type: FIXED_PRICING
                    price_money:
                      amount: 150
                      currency: USD
        - name: Retrieve catalog object and include related objects
          pathParameters:
            object_id: W62UWFY35CWMYGVWK6TWJDNI
          queryParameters:
            include_related_objects: true
          response:
            object:
              type: ITEM
              id: W62UWFY35CWMYGVWK6TWJDNI
              updated_at: 2016-11-16T22:25:24.878Z
              version: 1479335124878
              is_deleted: false
              present_at_all_locations: true
              item_data:
                name: Tea
                description: Hot Leaf Juice
                category_id: BJNQCF2FJ6S6UIDT65ABHLRX
                tax_ids:
                - HURXQOOAIC4IZSI2BEXQRYFY
                variations:
                - type: ITEM_VARIATION
                  id: 2TZFAOHWGG7PAK2QEXWYPZSP
                  updated_at: 2016-11-16T22:25:24.878Z
                  version: 1479335124878
                  is_deleted: false
                  present_at_all_locations: true
                  item_variation_data:
                    item_id: W62UWFY35CWMYGVWK6TWJDNI
                    name: Mug
                    ordinal: 0
                    pricing_type: FIXED_PRICING
                    price_money:
                      amount: 150
                      currency: USD
            related_objects:
            - type: CATEGORY
              id: BJNQCF2FJ6S6UIDT65ABHLRX
              updated_at: 2016-11-16T22:25:24.878Z
              version: 1479335124878
              is_deleted: false
              present_at_all_locations: true
              category_data:
                name: Beverages
            - type: TAX
              id: HURXQOOAIC4IZSI2BEXQRYFY
              updated_at: 2016-11-16T22:25:24.878Z
              version: 1479335124878
              is_deleted: false
              present_at_all_locations: true
              tax_data:
                name: Sales Tax
                calculation_phase: TAX_SUBTOTAL_PHASE
                inclusion_type: ADDITIVE
                percentage: "5.0"
                enabled: true
    delete:
      tags:
      - Catalog
      summary: DeleteCatalogObject
      description: |-
        Deletes a single [CatalogObject](#type-catalogobject) based on the
        provided ID and returns the set of successfully deleted IDs in the response.
        Deletion is a cascading event such that all children of the targeted object
        are also deleted. For example, deleting a [CatalogItem](#type-catalogitem)
        will also delete all of its
        [CatalogItemVariation](#type-catalogitemvariation) children.
      operationId: DeleteCatalogObject
      parameters:
      - name: object_id
        in: path
        description: |-
          The ID of the catalog object to be deleted. When an object is deleted, other
          objects in the graph that depend on that object will be deleted as well (for example, deleting a
          catalog item will delete its catalog item variations).
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCatalogObjectResponse'
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: PUBLIC
      x-example-scenarios:
        scenarios:
        - name: Delete a catalog object
          pathParameters:
            object_id: 7SB3ZQYJ5GDMVFL7JK46JCHT
          response:
            deleted_object_ids:
            - 7SB3ZQYJ5GDMVFL7JK46JCHT
            - KQLFFHA6K6J3YQAQAWDQAL57
            deleted_at: 2016-11-16T22:25:24.878Z
  /v2/catalog/search:
    post:
      tags:
      - Catalog
      summary: SearchCatalogObjects
      description: "Searches for [CatalogObject](#type-CatalogObject) of any types\
        \ against supported search attribute values, \nexcluding custom attribute\
        \ values on items or item variations, against one or more of the specified\
        \ query expressions, \n\nThis (`SearchCatalogObjects`) endpoint differs from\
        \ the [SearchCatalogItems](#endpoint-Catalog-SearchCatalogItems)\nendpoint\
        \ in the following aspects:\n\n- `SearchCatalogItems` can only search for\
        \ items or item variations, whereas `SearchCatalogObjects` can search for\
        \ any type of catalog objects.\n- `SearchCatalogItems` supports the custom\
        \ attribute query filters to return items or item variations that contain\
        \ custom attribute values, where `SearchCatalogObjects` does not.\n- `SearchCatalogItems`\
        \ does not support the `include_deleted_objects` filter to search for deleted\
        \ items or item variations, whereas `SearchCatalogObjects` does.\n- The both\
        \ endpoints have different call conventions, including the query filter formats."
      operationId: SearchCatalogObjects
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchCatalogObjectsRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCatalogObjectsResponse'
      security:
      - oauth2:
        - ITEMS_READ
      x-release-status: PUBLIC
      x-example-scenarios:
        scenarios:
        - name: Search for catalog objects by name
          bodyParameters:
            object_types:
            - ITEM
            query:
              prefix_query:
                attribute_name: name
                attribute_prefix: tea
            limit: 100
          response:
            objects:
            - type: ITEM
              id: X5DZ5NWWAQ44CKBLKIFQGOWK
              updated_at: 2017-10-26T15:41:32.337Z
              version: 1509032492337
              is_deleted: false
              present_at_all_locations: true
              item_data:
                name: Tea - Black
                description: A delicious blend of black tea.
                category_id: E7CLE5RZZ744BHWVQQEAHI2C
                product_type: REGULAR
                tax_ids:
                - ZXITPM6RWHZ7GZ7EIP3YKECM
                variations:
                - type: ITEM_VARIATION
                  id: 5GSZPX6EU7MM75S57OONG3V5
                  updated_at: 2017-10-26T15:27:31.626Z
                  version: 1509031651626
                  is_deleted: false
                  present_at_all_locations: true
                  item_variation_data:
                    item_id: X5DZ5NWWAQ44CKBLKIFQGOWK
                    name: Regular
                    ordinal: 1
                    price_money:
                      amount: 150
                      currency: USD
                    pricing_type: FIXED_PRICING
                - type: ITEM_VARIATION
                  id: XVLBN7DU6JTWHJTG5F265B43
                  updated_at: 2017-10-26T15:27:31.626Z
                  version: 1509031651626
                  is_deleted: false
                  present_at_all_locations: true
                  item_variation_data:
                    item_id: X5DZ5NWWAQ44CKBLKIFQGOWK
                    name: Large
                    ordinal: 2
                    price_money:
                      amount: 225
                      currency: USD
                    pricing_type: FIXED_PRICING
                visibility: PRIVATE
            - type: ITEM
              id: NNNEM3LA656Q46NXLWCNI7S5
              updated_at: 2017-10-26T15:41:23.232Z
              version: 1509032483232
              is_deleted: false
              present_at_all_locations: true
              item_data:
                name: Tea - Green
                description: Relaxing green herbal tea.
                category_id: E7CLE5RZZ744BHWVQQEAHI2C
                product_type: REGULAR
                tax_ids:
                - ZXITPM6RWHZ7GZ7EIP3YKECM
                variations:
                - type: ITEM_VARIATION
                  id: FHYBVIA6NVBCSOVETA62WEA4
                  updated_at: 2017-10-26T15:29:00.524Z
                  version: 1509031740524
                  is_deleted: false
                  present_at_all_locations: true
                  item_variation_data:
                    item_id: NNNEM3LA656Q46NXLWCNI7S5
                    name: Regular
                    ordinal: 1
                    price_money:
                      amount: 150
                      currency: USD
                    pricing_type: FIXED_PRICING
                visibility: PRIVATE
  /v2/catalog/search-catalog-items:
    post:
      tags:
      - Catalog
      summary: SearchCatalogItems
      description: "Searches for catalog items or item variations by matching supported\
        \ search attribute values, including\ncustom attribute values, against one\
        \ or more of the specified query expressions, \n\nThis (`SearchCatalogItems`)\
        \ endpoint differs from the [SearchCatalogObjects](#endpoint-Catalog-SearchCatalogObjects)\n\
        endpoint in the following aspects:\n\n- `SearchCatalogItems` can only search\
        \ for items or item variations, whereas `SearchCatalogObjects` can search\
        \ for any type of catalog objects.\n- `SearchCatalogItems` supports the custom\
        \ attribute query filters to return items or item variations that contain\
        \ custom attribute values, where `SearchCatalogObjects` does not.\n- `SearchCatalogItems`\
        \ does not support the `include_deleted_objects` filter to search for deleted\
        \ items or item variations, whereas `SearchCatalogObjects` does.\n- The both\
        \ endpoints use different call conventions, including the query filter formats."
      operationId: SearchCatalogItems
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchCatalogItemsRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCatalogItemsResponse'
      security:
      - oauth2:
        - ITEMS_READ
      x-release-status: BETA
      x-example-scenarios:
        scenarios:
        - name: Search for a catalog item using filters
          bodyParams:
            sort_order: ASC
            product_types:
            - REGULAR
            category_ids:
            - WINE_CATEGORY_ID
            enabled_location_ids:
            - ATL_LOCATION_ID
            text_filter: red
            custom_attribute_filters:
            - custom_attribute_definition_id: VEGAN_DEFINITION_ID
              bool_filter: true
            - custom_attribute_definition_id: BRAND_DEFINITION_ID
              string_filter: Dark Horse
            - key: VINTAGE
              number_filter:
                min: 2017
                max: 2018
            - custom_attribute_definition_id: VARIETAL_DEFINITION_ID
              selection_ids_filter: MERLOT_SELECTION_ID
            stock_levels:
            - OUT
            - LOW
            limit: 100
          response:
            items:
            - type: ITEM
              id: GPOKJPTV2KDLVKCADJ7I77EZ
              updated_at: 2020-06-18T17:55:56.646Z
              version: 1592502956646
              is_deleted: false
              present_at_all_locations: true
              custom_attribute_values:
                VINTAGE:
                  name: Vintage
                  custom_attribute_definition_id: EI7IJQDUKYSHULREPIPH6HNU
                  type: NUMBER
                  number_value: 2018
                  key: VINTAGE
                VARIETAL:
                  name: Varietal
                  custom_attribute_definition_id: VARIETAL_DEFINITION_ID
                  type: SELECTION
                  selection_uid_values:
                  - MERLOT_SELECTION_ID
                  key: VARIETAL
                BRAND:
                  name: Brand
                  custom_attribute_definition_id: BRAND_DEFINITION_ID
                  type: STRING
                  string_value: Dark Horse
                  key: BRAND
              item_data:
                name: Dark Horse Merlot 2018
                product_type: REGULAR
                description: A nice red wine
                variations:
                - type: ITEM_VARIATION
                  id: VBJNPHCOKDFECR6VU25WRJUD
                  updated_at: 2020-06-18T17:55:56.646Z
                  version: 1592502956646
                  is_deleted: false
                  present_at_all_locations: true
                  item_variation_data:
                    item_id: GPOKJPTV2KDLVKCADJ7I77EZ
                    name: 750 mL
                    ordinal: 0
                    pricing_type: FIXED_PRICING
                    price_money:
                      amount: 1000
                      currency: USD
            matched_variation_ids:
            - VBJNPHCOKDFECR6VU25WRJUD
  /v2/catalog/update-item-modifier-lists:
    post:
      tags:
      - Catalog
      summary: UpdateItemModifierLists
      description: |-
        Updates the [CatalogModifierList](#type-catalogmodifierlist) objects
        that apply to the targeted [CatalogItem](#type-catalogitem) without having
        to perform an upsert on the entire item.
      operationId: UpdateItemModifierLists
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateItemModifierListsRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateItemModifierListsResponse'
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: PUBLIC
      x-example-scenarios:
        scenarios:
        - name: Update modifier lists for a list of items
          bodyParameters:
            item_ids:
            - H42BRLUJ5KTZTTMPVSLFAACQ
            - 2JXOBJIHCWBQ4NZ3RIXQGJA6
            modifier_lists_to_enable:
            - H42BRLUJ5KTZTTMPVSLFAACQ
            - 2JXOBJIHCWBQ4NZ3RIXQGJA6
            modifier_lists_to_disable:
            - 7WRC16CJZDVLSNDQ35PP6YAD
          response:
            updated_at: 2016-11-16T22:25:24.878Z
  /v2/catalog/update-item-taxes:
    post:
      tags:
      - Catalog
      summary: UpdateItemTaxes
      description: |-
        Updates the [CatalogTax](#type-catalogtax) objects that apply to the
        targeted [CatalogItem](#type-catalogitem) without having to perform an
        upsert on the entire item.
      operationId: UpdateItemTaxes
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateItemTaxesRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateItemTaxesResponse'
      security:
      - oauth2:
        - ITEMS_WRITE
      x-release-status: PUBLIC
      x-example-scenarios:
        scenarios:
        - name: Update taxes for a list of items
          bodyParameters:
            item_ids:
            - H42BRLUJ5KTZTTMPVSLFAACQ
            - 2JXOBJIHCWBQ4NZ3RIXQGJA6
            taxes_to_enable:
            - 4WRCNHCJZDVLSNDQ35PP6YAD
            taxes_to_disable:
            - AQCEGCEBBQONINDOHRGZISEX
          response:
            updated_at: 2016-11-16T22:25:24.878Z
  /v2/customers:
    get:
      tags:
      - Customers
      summary: ListCustomers
      description: "Lists customer profiles associated with a Square account.\n\n\
        Under normal operating conditions, newly created or updated customer profiles\
        \ become available \nfor the listing operation in well under 30 seconds. Occasionally,\
        \ propagation of the new or updated \nprofiles can take closer to one minute\
        \ or longer, espeically during network incidents and outages."
      operationId: ListCustomers
      parameters:
      - name: cursor
        in: query
        description: |-
          A pagination cursor returned by a previous call to this endpoint.
          Provide this to retrieve the next set of results for your original query.

          See the [Pagination guide](https://developer.squareup.com/docs/working-with-apis/pagination) for more information.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sort_field
        in: query
        description: |-
          Indicates how Customers should be sorted.

          Default: `DEFAULT`.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/CustomerSortField'
      - name: sort_order
        in: query
        description: |-
          Indicates whether Customers should be sorted in ascending (`ASC`) or
          descending (`DESC`) order.

          Default: `ASC`.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SortOrder'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCustomersResponse'
      security:
      - oauth2:
        - CUSTOMERS_READ
      x-release-status: PUBLIC
    post:
      tags:
      - Customers
      summary: CreateCustomer
      description: |-
        Creates a new customer for a business, which can have associated cards on file.

        You must provide __at least one__ of the following values in your request to this
        endpoint:

        - `given_name`
        - `family_name`
        - `company_name`
        - `email_address`
        - `phone_number`
      operationId: CreateCustomer
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCustomerResponse'
      security:
      - oauth2:
        - CUSTOMERS_WRITE
      x-release-status: PUBLIC
  /v2/customers/groups:
    get:
      tags:
      - CustomerGroups
      summary: ListCustomerGroups
      description: Retrieves the list of customer groups of a business.
      operationId: ListCustomerGroups
      parameters:
      - name: cursor
        in: query
        description: |-
          A pagination cursor returned by a previous call to this endpoint.
          Provide this to retrieve the next set of results for your original query.

          See the [Pagination guide](https://developer.squareup.com/docs/working-with-apis/pagination) for more information.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCustomerGroupsResponse'
      security:
      - oauth2:
        - CUSTOMERS_READ
      x-release-status: BETA
    post:
      tags:
      - CustomerGroups
      summary: CreateCustomerGroup
      description: "Creates a new customer group for a business. \n\nThe request must\
        \ include the `name` value of the group."
      operationId: CreateCustomerGroup
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerGroupRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCustomerGroupResponse'
      security:
      - oauth2:
        - CUSTOMERS_WRITE
      x-release-status: BETA
  /v2/customers/groups/{group_id}:
    get:
      tags:
      - CustomerGroups
      summary: RetrieveCustomerGroup
      description: Retrieves a specific customer group as identified by the `group_id`
        value.
      operationId: RetrieveCustomerGroup
      parameters:
      - name: group_id
        in: path
        description: The ID of the customer group to retrieve.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveCustomerGroupResponse'
      security:
      - oauth2:
        - CUSTOMERS_READ
      x-release-status: BETA
    put:
      tags:
      - CustomerGroups
      summary: UpdateCustomerGroup
      description: Updates a customer group as identified by the `group_id` value.
      operationId: UpdateCustomerGroup
      parameters:
      - name: group_id
        in: path
        description: The ID of the customer group to update.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerGroupRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCustomerGroupResponse'
      security:
      - oauth2:
        - CUSTOMERS_WRITE
        - CUSTOMERS_READ
      x-release-status: BETA
    delete:
      tags:
      - CustomerGroups
      summary: DeleteCustomerGroup
      description: Deletes a customer group as identified by the `group_id` value.
      operationId: DeleteCustomerGroup
      parameters:
      - name: group_id
        in: path
        description: The ID of the customer group to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCustomerGroupResponse'
      security:
      - oauth2:
        - CUSTOMERS_WRITE
      x-release-status: BETA
  /v2/customers/search:
    post:
      tags:
      - Customers
      summary: SearchCustomers
      description: "Searches the customer profiles associated with a Square account\
        \ using \none or more supported query filters. \n\nCalling `SearchCustomers`\
        \ without any explicit query filter returns all\ncustomer profiles ordered\
        \ alphabetically based on `given_name` and\n`family_name`.\n\nUnder normal\
        \ operating conditions, newly created or updated customer profiles become\
        \ available \nfor the search operation in well under 30 seconds. Occasionally,\
        \ propagation of the new or updated \nprofiles can take closer to one minute\
        \ or longer, espeically during network incidents and outages."
      operationId: SearchCustomers
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchCustomersRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCustomersResponse'
      security:
      - oauth2:
        - CUSTOMERS_READ
      x-release-status: PUBLIC
  /v2/customers/segments:
    get:
      tags:
      - CustomerSegments
      summary: ListCustomerSegments
      description: Retrieves the list of customer segments of a business.
      operationId: ListCustomerSegments
      parameters:
      - name: cursor
        in: query
        description: |-
          A pagination cursor returned by previous calls to __ListCustomerSegments__.
          Used to retrieve the next set of query results.

          See the [Pagination guide](https://developer.squareup.com/docs/docs/working-with-apis/pagination) for more information.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCustomerSegmentsResponse'
      security:
      - oauth2:
        - CUSTOMERS_READ
      x-release-status: BETA
  /v2/customers/segments/{segment_id}:
    get:
      tags:
      - CustomerSegments
      summary: RetrieveCustomerSegment
      description: Retrieves a specific customer segment as identified by the `segment_id`
        value.
      operationId: RetrieveCustomerSegment
      parameters:
      - name: segment_id
        in: path
        description: The Square-issued ID of the customer segment.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveCustomerSegmentResponse'
      security:
      - oauth2:
        - CUSTOMERS_READ
      x-release-status: BETA
  /v2/customers/{customer_id}:
    get:
      tags:
      - Customers
      summary: RetrieveCustomer
      description: Returns details for a single customer.
      operationId: RetrieveCustomer
      parameters:
      - name: customer_id
        in: path
        description: The ID of the customer to retrieve.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveCustomerResponse'
      security:
      - oauth2:
        - CUSTOMERS_READ
      x-release-status: PUBLIC
    put:
      tags:
      - Customers
      summary: UpdateCustomer
      description: |-
        Updates the details of an existing customer. When two profiles are merged
        into a single profile, that profile is assigned a new `customer_id`. You must use
        the new `customer_id` to update merged profiles.

        You cannot edit a customer's cards on file with this endpoint. To make changes
        to a card on file, you must delete the existing card on file with the
        [DeleteCustomerCard](#endpoint-deletecustomercard) endpoint, then create a new one with the
        [CreateCustomerCard](#endpoint-createcustomercard) endpoint.
      operationId: UpdateCustomer
      parameters:
      - name: customer_id
        in: path
        description: The ID of the customer to update.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCustomerResponse'
      security:
      - oauth2:
        - CUSTOMERS_WRITE
      x-release-status: PUBLIC
    delete:
      tags:
      - Customers
      summary: DeleteCustomer
      description: |-
        Deletes a customer from a business, along with any linked cards on file. When two profiles
        are merged into a single profile, that profile is assigned a new `customer_id`. You must use the
        new `customer_id` to delete merged profiles.
      operationId: DeleteCustomer
      parameters:
      - name: customer_id
        in: path
        description: The ID of the customer to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCustomerResponse'
      security:
      - oauth2:
        - CUSTOMERS_WRITE
      x-release-status: PUBLIC
  /v2/customers/{customer_id}/cards:
    post:
      tags:
      - Customers
      summary: CreateCustomerCard
      description: |-
        Adds a card on file to an existing customer.

        As with charges, calls to `CreateCustomerCard` are idempotent. Multiple
        calls with the same card nonce return the same card record that was created
        with the provided nonce during the _first_ call.
      operationId: CreateCustomerCard
      parameters:
      - name: customer_id
        in: path
        description: The Square ID of the customer profile the card is linked to.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerCardRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCustomerCardResponse'
      security:
      - oauth2:
        - CUSTOMERS_WRITE
      x-release-status: PUBLIC
      x-endpoint-errors:
      - error-code: CARD_EXPIRED
      - error-code: CARD_PROCESSING_NOT_ENABLED
      - error-code: CARD_TOKEN_EXPIRED
      - error-code: CARD_TOKEN_USED
      - error-code: INVALID_CARD
      - error-code: INVALID_CARD_DATA
      - error-code: INVALID_EXPIRATION
      - error-code: UNSUPPORTED_ENTRY_METHOD
      - error-code: VERIFY_AVS_FAILURE
      - error-code: VERIFY_CVV_FAILURE
  /v2/customers/{customer_id}/cards/{card_id}:
    delete:
      tags:
      - Customers
      summary: DeleteCustomerCard
      description: Removes a card on file from a customer.
      operationId: DeleteCustomerCard
      parameters:
      - name: customer_id
        in: path
        description: The ID of the customer that the card on file belongs to.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: card_id
        in: path
        description: The ID of the card on file to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCustomerCardResponse'
      security:
      - oauth2:
        - CUSTOMERS_WRITE
      x-release-status: PUBLIC
  /v2/customers/{customer_id}/groups/{group_id}:
    put:
      tags:
      - Customers
      summary: AddGroupToCustomer
      description: "Adds a group membership to a customer. \n\nThe customer is identified\
        \ by the `customer_id` value \nand the customer group is identified by the\
        \ `group_id` value."
      operationId: AddGroupToCustomer
      parameters:
      - name: customer_id
        in: path
        description: The ID of the customer to add to a group.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: group_id
        in: path
        description: The ID of the customer group to add the customer to.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddGroupToCustomerResponse'
      security:
      - oauth2:
        - CUSTOMERS_WRITE
      x-release-status: BETA
    delete:
      tags:
      - Customers
      summary: RemoveGroupFromCustomer
      description: "Removes a group membership from a customer. \n\nThe customer is\
        \ identified by the `customer_id` value \nand the customer group is identified\
        \ by the `group_id` value."
      operationId: RemoveGroupFromCustomer
      parameters:
      - name: customer_id
        in: path
        description: The ID of the customer to remove from the group.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: group_id
        in: path
        description: The ID of the customer group to remove the customer from.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveGroupFromCustomerResponse'
      security:
      - oauth2:
        - CUSTOMERS_WRITE
      x-release-status: BETA
  /v2/devices/codes:
    get:
      tags:
      - Devices
      summary: ListDeviceCodes
      description: Lists all DeviceCodes associated with the merchant.
      operationId: ListDeviceCodes
      parameters:
      - name: cursor
        in: query
        description: |-
          A pagination cursor returned by a previous call to this endpoint.
          Provide this to retrieve the next set of results for your original query.

          See [Paginating results](#paginatingresults) for more information.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: location_id
        in: query
        description: |-
          If specified, only returns DeviceCodes of the specified location.
          Returns DeviceCodes of all locations if empty.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: product_type
        in: query
        description: |-
          If specified, only returns DeviceCodes targeting the specified product type.
          Returns DeviceCodes of all product types if empty.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ProductType'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeviceCodesResponse'
      security:
      - oauth2:
        - DEVICE_CREDENTIAL_MANAGEMENT
      x-release-status: BETA
      x-endpoint-errors:
      - error-code: INVALID_CURSOR
      - error-code: BAD_REQUEST
    post:
      tags:
      - Devices
      summary: CreateDeviceCode
      description: |-
        Creates a DeviceCode that can be used to login to a Square Terminal device to enter the connected
        terminal mode.
      operationId: CreateDeviceCode
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeviceCodeRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDeviceCodeResponse'
      security:
      - oauth2:
        - DEVICE_CREDENTIAL_MANAGEMENT
      x-release-status: BETA
      x-endpoint-errors:
      - error-code: BAD_REQUEST
      - error-code: IDEMPOTENCY_KEY_REUSED
      - error-code: INVALID_VALUE
      - error-code: UNAUTHORIZED
  /v2/devices/codes/{id}:
    get:
      tags:
      - Devices
      summary: GetDeviceCode
      description: Retrieves DeviceCode with the associated ID.
      operationId: GetDeviceCode
      parameters:
      - name: id
        in: path
        description: The unique identifier for the device code.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeviceCodeResponse'
      security:
      - oauth2:
        - DEVICE_CREDENTIAL_MANAGEMENT
      x-release-status: BETA
      x-endpoint-errors:
      - error-code: BAD_REQUEST
      - error-code: NOT_FOUND
      - error-code: UNAUTHORIZED
  /v2/disputes:
    get:
      tags:
      - Disputes
      summary: ListDisputes
      description: |-
        Returns a list of disputes associated
        with a particular account.
      externalDocs:
        description: Access dispute information
        url: https://developer.squareup.com/docs/disputes-api/process-disputes#access-dispute-information
      operationId: ListDisputes
      parameters:
      - name: cursor
        in: query
        description: |-
          A pagination cursor returned by a previous call to this endpoint.
          Provide this to retrieve the next set of results for the original query.
          For more information, see [Paginating](https://developer.squareup.com/docs/basics/api101/pagination).
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: states
        in: query
        description: |-
          The dispute states to filter the result.
          If not specified, the endpoint
          returns all open disputes (dispute status is not
          `INQUIRY_CLOSED`, `WON`, or `LOST`).
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/DisputeState'
      - name: location_id
        in: query
        description: "The ID of the location for which to return \na list of disputes.\
          \ If not specified,\nthe endpoint returns all open disputes\n(dispute status\
          \ is not `INQUIRY_CLOSED`, `WON`, or \n`LOST`) associated with all locations."
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDisputesResponse'
      security:
      - oauth2:
        - PAYMENTS_READ
      x-release-status: BETA
  /v2/disputes/{dispute_id}:
    get:
      tags:
      - Disputes
      summary: RetrieveDispute
      description: Returns details of a specific dispute.
      operationId: RetrieveDispute
      parameters:
      - name: dispute_id
        in: path
        description: The ID of the dispute you want more details about.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveDisputeResponse'
      security:
      - oauth2:
        - PAYMENTS_READ
      x-release-status: BETA
  /v2/disputes/{dispute_id}/accept:
    post:
      tags:
      - Disputes
      summary: AcceptDispute
      description: |-
        Accepts loss on a dispute. Square returns
        the disputed amount to the cardholder and updates the
        dispute state to ACCEPTED.

        Square debits the disputed amount from the seller’s Square
        account. If the Square account balance does not have
        sufficient funds, Square debits the associated bank account.
      externalDocs:
        description: Accept a dispute
        url: https://developer.squareup.com/docs/disputes-api/process-disputes#accept-a-dispute
      operationId: AcceptDispute
      parameters:
      - name: dispute_id
        in: path
        description: ID of the dispute you want to accept.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptDisputeResponse'
      security:
      - oauth2:
        - PAYMENTS_WRITE
      x-release-status: BETA
  /v2/disputes/{dispute_id}/evidence:
    get:
      tags:
      - Disputes
      summary: ListDisputeEvidence
      description: Returns a list of evidence associated with a dispute.
      operationId: ListDisputeEvidence
      parameters:
      - name: dispute_id
        in: path
        description: The ID of the dispute.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDisputeEvidenceResponse'
      security:
      - oauth2:
        - PAYMENTS_READ
      x-release-status: BETA
  /v2/disputes/{dispute_id}/evidence/{evidence_id}:
    get:
      tags:
      - Disputes
      summary: RetrieveDisputeEvidence
      description: |-
        Returns the specific evidence metadata associated with a specific dispute.

        You must maintain a copy of the evidence you upload if you want to
        reference it later. You cannot download the evidence
        after you upload it.
      operationId: RetrieveDisputeEvidence
      parameters:
      - name: dispute_id
        in: path
        description: The ID of the dispute that you want to retrieve evidence from.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: evidence_id
        in: path
        description: The ID of the evidence to retrieve.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveDisputeEvidenceResponse'
      security:
      - oauth2:
        - PAYMENTS_READ
      x-release-status: BETA
    delete:
      tags:
      - Disputes
      summary: RemoveDisputeEvidence
      description: |-
        Removes specified evidence from a dispute.

        Square does not send the bank any evidence that
        is removed. Also, you cannot remove evidence after
        submitting it to the bank using [SubmitEvidence](https://developer.squareup.com/docs/reference/square/disputes-api/submit-evidence).
      operationId: RemoveDisputeEvidence
      parameters:
      - name: dispute_id
        in: path
        description: The ID of the dispute you want to remove evidence from.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: evidence_id
        in: path
        description: The ID of the evidence you want to remove.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveDisputeEvidenceResponse'
      security:
      - oauth2:
        - PAYMENTS_WRITE
      x-release-status: BETA
  /v2/disputes/{dispute_id}/evidence_file:
    post:
      tags:
      - Disputes
      summary: CreateDisputeEvidenceFile
      description: |-
        Uploads a file to use as evidence in a dispute challenge. The endpoint accepts
        HTTP multipart/form-data file uploads in HEIC, HEIF, JPEG, PDF, PNG,
        and TIFF formats.
      externalDocs:
        description: Challenge a dispute
        url: https://developer.squareup.com/docs/disputes-api/process-disputes#challenge-a-dispute
      operationId: CreateDisputeEvidenceFile
      parameters:
      - name: dispute_id
        in: path
        description: ID of the dispute you want to upload evidence for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/body_1'
            encoding:
              request:
                contentType: application/json; charset=utf-8
                style: form
              image_file:
                contentType: image/jpeg
                style: form
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDisputeEvidenceFileResponse'
      security:
      - oauth2:
        - PAYMENTS_WRITE
      x-release-status: BETA
  /v2/disputes/{dispute_id}/evidence_text:
    post:
      tags:
      - Disputes
      summary: CreateDisputeEvidenceText
      description: Uploads text to use as evidence for a dispute challenge.
      externalDocs:
        description: Challenge a dispute
        url: https://developer.squareup.com/docs/disputes-api/process-disputes#challenge-a-dispute
      operationId: CreateDisputeEvidenceText
      parameters:
      - name: dispute_id
        in: path
        description: The ID of the dispute you want to upload evidence for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDisputeEvidenceTextRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDisputeEvidenceTextResponse'
      security:
      - oauth2:
        - PAYMENTS_WRITE
      x-release-status: BETA
  /v2/disputes/{dispute_id}/submit-evidence:
    post:
      tags:
      - Disputes
      summary: SubmitEvidence
      description: |-
        Submits evidence to the cardholder's bank.

        Before submitting evidence, Square compiles all available evidence. This includes
        evidence uploaded using the
        [CreateDisputeEvidenceFile](https://developer.squareup.com/docs/reference/square/disputes-api/create-dispute-evidence-file) and
        [CreateDisputeEvidenceText](https://developer.squareup.com/docs/reference/square/disputes-api/create-dispute-evidence-text) endpoints,
        and evidence automatically provided by Square, when
        available.
      externalDocs:
        description: Challenge a dispute
        url: https://developer.squareup.com/docs/disputes-api/process-disputes#challenge-a-dispute
      operationId: SubmitEvidence
      parameters:
      - name: dispute_id
        in: path
        description: The ID of the dispute you want to submit evidence for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitEvidenceResponse'
      security:
      - oauth2:
        - PAYMENTS_WRITE
      x-release-status: BETA
  /v2/employees:
    get:
      tags:
      - Employees
      summary: ListEmployees
      operationId: ListEmployees
      parameters:
      - name: location_id
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: Specifies the EmployeeStatus to filter the employee by.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/EmployeeStatus'
      - name: limit
        in: query
        description: The number of employees to be returned on each page.
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: cursor
        in: query
        description: The token required to retrieve the specified page of results.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEmployeesResponse'
      deprecated: true
      security:
      - oauth2:
        - EMPLOYEES_READ
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2020-08-26
        retirementDate: 2021-08-26
        replacedBy: SearchTeamMembers
        guideUrl: https://developer.squareup.com/docs/team/migrate-from-v2-employees
  /v2/employees/{id}:
    get:
      tags:
      - Employees
      summary: RetrieveEmployee
      operationId: RetrieveEmployee
      parameters:
      - name: id
        in: path
        description: UUID for the employee that was requested.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveEmployeeResponse'
      deprecated: true
      security:
      - oauth2:
        - EMPLOYEES_READ
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2020-08-26
        retirementDate: 2021-08-26
        replacedBy: RetrieveTeamMember
        guideUrl: https://developer.squareup.com/docs/team/migrate-from-v2-employees
  /v2/inventory/adjustment/{adjustment_id}:
    get:
      tags:
      - Inventory
      summary: RetrieveInventoryAdjustment
      description: |-
        Returns the [InventoryAdjustment](#type-inventoryadjustment) object
        with the provided `adjustment_id`.
      operationId: RetrieveInventoryAdjustment
      parameters:
      - name: adjustment_id
        in: path
        description: ID of the [InventoryAdjustment](#type-inventoryadjustment) to
          retrieve.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveInventoryAdjustmentResponse'
      security:
      - oauth2:
        - INVENTORY_READ
      x-release-status: PUBLIC
  /v2/inventory/batch-change:
    post:
      tags:
      - Inventory
      summary: BatchChangeInventory
      description: |-
        Applies adjustments and counts to the provided item quantities.

        On success: returns the current calculated counts for all objects
        referenced in the request.
        On failure: returns a list of related errors.
      operationId: BatchChangeInventory
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchChangeInventoryRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchChangeInventoryResponse'
      security:
      - oauth2:
        - INVENTORY_WRITE
      x-release-status: PUBLIC
  /v2/inventory/batch-retrieve-changes:
    post:
      tags:
      - Inventory
      summary: BatchRetrieveInventoryChanges
      description: |-
        Returns historical physical counts and adjustments based on the
        provided filter criteria.

        Results are paginated and sorted in ascending order according their
        `occurred_at` timestamp (oldest first).

        BatchRetrieveInventoryChanges is a catch-all query endpoint for queries
        that cannot be handled by other, simpler endpoints.
      operationId: BatchRetrieveInventoryChanges
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRetrieveInventoryChangesRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchRetrieveInventoryChangesResponse'
      security:
      - oauth2:
        - INVENTORY_READ
      x-release-status: PUBLIC
  /v2/inventory/batch-retrieve-counts:
    post:
      tags:
      - Inventory
      summary: BatchRetrieveInventoryCounts
      description: |-
        Returns current counts for the provided
        [CatalogObject](#type-catalogobject)s at the requested
        [Location](#type-location)s.

        Results are paginated and sorted in descending order according to their
        `calculated_at` timestamp (newest first).

        When `updated_after` is specified, only counts that have changed since that
        time (based on the server timestamp for the most recent change) are
        returned. This allows clients to perform a "sync" operation, for example
        in response to receiving a Webhook notification.
      operationId: BatchRetrieveInventoryCounts
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRetrieveInventoryCountsRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchRetrieveInventoryCountsResponse'
      security:
      - oauth2:
        - INVENTORY_READ
      x-release-status: PUBLIC
  /v2/inventory/physical-count/{physical_count_id}:
    get:
      tags:
      - Inventory
      summary: RetrieveInventoryPhysicalCount
      description: |-
        Returns the [InventoryPhysicalCount](#type-inventoryphysicalcount)
        object with the provided `physical_count_id`.
      operationId: RetrieveInventoryPhysicalCount
      parameters:
      - name: physical_count_id
        in: path
        description: |-
          ID of the
          [InventoryPhysicalCount](#type-inventoryphysicalcount) to retrieve.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveInventoryPhysicalCountResponse'
      security:
      - oauth2:
        - INVENTORY_READ
      x-release-status: PUBLIC
  /v2/inventory/{catalog_object_id}:
    get:
      tags:
      - Inventory
      summary: RetrieveInventoryCount
      description: |-
        Retrieves the current calculated stock count for a given
        [CatalogObject](#type-catalogobject) at a given set of
        [Location](#type-location)s. Responses are paginated and unsorted.
        For more sophisticated queries, use a batch endpoint.
      operationId: RetrieveInventoryCount
      parameters:
      - name: catalog_object_id
        in: path
        description: ID of the [CatalogObject](#type-catalogobject) to retrieve.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: location_ids
        in: query
        description: |-
          The [Location](#type-location) IDs to look up as a comma-separated
          list. An empty list queries all locations.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: cursor
        in: query
        description: |-
          A pagination cursor returned by a previous call to this endpoint.
          Provide this to retrieve the next set of results for the original query.

          See the [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination) guide for more information.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveInventoryCountResponse'
      security:
      - oauth2:
        - INVENTORY_READ
      x-release-status: PUBLIC
  /v2/inventory/{catalog_object_id}/changes:
    get:
      tags:
      - Inventory
      summary: RetrieveInventoryChanges
      description: "Returns a set of physical counts and inventory adjustments for\
        \ the\nprovided [CatalogObject](#type-catalogobject) at the requested\n[Location](#type-location)s.\n\
        \nResults are paginated and sorted in descending order according to their\n\
        `occurred_at` timestamp (newest first).\n\nThere are no limits on how far\
        \ back the caller can page. This endpoint can be \nused to display recent\
        \ changes for a specific item. For more\nsophisticated queries, use a batch\
        \ endpoint."
      operationId: RetrieveInventoryChanges
      parameters:
      - name: catalog_object_id
        in: path
        description: ID of the [CatalogObject](#type-catalogobject) to retrieve.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: location_ids
        in: query
        description: |-
          The [Location](#type-location) IDs to look up as a comma-separated
          list. An empty list queries all locations.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: cursor
        in: query
        description: |-
          A pagination cursor returned by a previous call to this endpoint.
          Provide this to retrieve the next set of results for the original query.

          See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveInventoryChangesResponse'
      security:
      - oauth2:
        - INVENTORY_READ
      x-release-status: PUBLIC
  /v2/invoices:
    get:
      tags:
      - Invoices
      summary: ListInvoices
      description: "Returns a list of invoices for a given location. The response\
        \ \nis paginated. If truncated, the response includes a `cursor` that you\
        \    \nuse in a subsequent request to fetch the next set of invoices."
      externalDocs:
        description: Retrieve an invoice
        url: https://developer.squareup.com/docs/invoices-api/overview#retrieve-an-invoice
      operationId: ListInvoices
      parameters:
      - name: location_id
        in: query
        description: The ID of the location for which to list invoices.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: cursor
        in: query
        description: "A pagination cursor returned by a previous call to this endpoint.\
          \ \nProvide this cursor to retrieve the next set of results for your original\
          \ query.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination)."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "The maximum number of invoices to return (200 is the maximum\
          \ `limit`). \nIf not provided, the server \nuses a default limit of 100\
          \ invoices."
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInvoicesResponse'
      security:
      - oauth2:
        - INVOICES_READ
      x-release-status: BETA
    post:
      tags:
      - Invoices
      summary: CreateInvoice
      description: "Creates a draft [invoice](#type-invoice) \nfor an order created\
        \ using the Orders API.\n\nA draft invoice remains in your account and no\
        \ action is taken. \nYou must publish the invoice before Square can process\
        \ it (send it to the customer's email address or charge the customer’s card\
        \ on file)."
      externalDocs:
        description: Create and publish an invoice
        url: https://developer.squareup.com/docs/invoices-api/overview#create-and-publish-an-invoice
      operationId: CreateInvoice
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInvoiceRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInvoiceResponse'
      security:
      - oauth2:
        - ORDERS_WRITE
        - INVOICES_WRITE
      x-release-status: BETA
  /v2/invoices/search:
    post:
      tags:
      - Invoices
      summary: SearchInvoices
      description: "Searches for invoices from a location specified in \nthe filter.\
        \ You can optionally specify customers in the filter for whom to \nretrieve\
        \ invoices. In the current implementation, you can only specify one location\
        \ and \noptionally one customer.\n\nThe response is paginated. If truncated,\
        \ the response includes a `cursor` \nthat you use in a subsequent request\
        \ to fetch the next set of invoices."
      externalDocs:
        description: Retrieve an invoice
        url: https://developer.squareup.com/docs/invoices-api/overview#retrieve-an-invoice
      operationId: SearchInvoices
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchInvoicesRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchInvoicesResponse'
      security:
      - oauth2:
        - INVOICES_READ
      x-release-status: BETA
  /v2/invoices/{invoice_id}:
    get:
      tags:
      - Invoices
      summary: GetInvoice
      description: Retrieves an invoice by invoice ID.
      externalDocs:
        description: Retrieve an invoice
        url: https://developer.squareup.com/docs/invoices-api/overview#retrieve-an-invoice
      operationId: GetInvoice
      parameters:
      - name: invoice_id
        in: path
        description: The id of the invoice to retrieve.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInvoiceResponse'
      security:
      - oauth2:
        - INVOICES_READ
      x-release-status: BETA
    put:
      tags:
      - Invoices
      summary: UpdateInvoice
      description: "Updates an invoice by modifying field values, clearing field values,\
        \ or both \nas specified in the request. \nThere are no restrictions to updating\
        \ an invoice in a draft state. \nHowever, there are guidelines for updating\
        \ a published invoice."
      externalDocs:
        description: Update an invoice
        url: https://developer.squareup.com/docs/invoices-api/overview#update-an-invoice
      operationId: UpdateInvoice
      parameters:
      - name: invoice_id
        in: path
        description: The id of the invoice to update.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInvoiceRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateInvoiceResponse'
      security:
      - oauth2:
        - ORDERS_WRITE
        - INVOICES_WRITE
      x-release-status: BETA
    delete:
      tags:
      - Invoices
      summary: DeleteInvoice
      description: "Deletes the specified invoice. When an invoice is deleted, the\
        \ \nassociated Order status changes to CANCELED. You can only delete a draft\
        \ \ninvoice (you cannot delete an invoice scheduled for publication, or a\
        \ \npublished invoice)."
      externalDocs:
        description: Delete an invoice
        url: https://developer.squareup.com/docs/invoices-api/overview#delete-an-invoice
      operationId: DeleteInvoice
      parameters:
      - name: invoice_id
        in: path
        description: The ID of the invoice to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: query
        description: "The version of the [invoice](#type-invoice) to delete.\nIf you\
          \ do not know the version, you can call [GetInvoice](#endpoint-Invoices-GetInvoice)\
          \ or \n[ListInvoices](#endpoint-Invoices-ListInvoices)."
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteInvoiceResponse'
      security:
      - oauth2:
        - ORDERS_WRITE
        - INVOICES_WRITE
      x-release-status: BETA
  /v2/invoices/{invoice_id}/cancel:
    post:
      tags:
      - Invoices
      summary: CancelInvoice
      description: "Cancels an invoice. The seller cannot collect payments for \n\
        the canceled invoice.\n\nYou cannot cancel an invoice in a terminal state:\
        \ `PAID`, `REFUNDED`, `CANCELED`, or `FAILED`."
      externalDocs:
        description: Cancel an invoice
        url: https://developer.squareup.com/docs/invoices-api/overview#cancel-an-invoice
      operationId: CancelInvoice
      parameters:
      - name: invoice_id
        in: path
        description: The ID of the [invoice](#type-invoice) to cancel.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelInvoiceRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelInvoiceResponse'
      security:
      - oauth2:
        - ORDERS_WRITE
        - INVOICES_WRITE
      x-release-status: BETA
  /v2/invoices/{invoice_id}/publish:
    post:
      tags:
      - Invoices
      summary: PublishInvoice
      description: "Publishes the specified draft invoice. \n\nAfter an invoice is\
        \ published, Square \nfollows up based on the invoice configuration. For example,\
        \ Square \nsends the invoice to the customer's email address, charges the\
        \ customer's card on file, or does \nnothing. Square also makes the invoice\
        \ available on a Square-hosted invoice page. \n\nThe invoice `status` also\
        \ changes from `DRAFT` to a status \nbased on the invoice configuration. For\
        \ example, the status changes to `UNPAID` if \nSquare emails the invoice or\
        \ `PARTIALLY_PAID` if Square charge a card on file for a portion of the \n\
        invoice amount)."
      externalDocs:
        description: Create and publish an invoice
        url: https://developer.squareup.com/docs/invoices-api/overview#create-and-publish-an-invoice
      operationId: PublishInvoice
      parameters:
      - name: invoice_id
        in: path
        description: The id of the invoice to publish.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishInvoiceRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishInvoiceResponse'
      security:
      - oauth2:
        - ORDERS_WRITE
        - INVOICES_WRITE
      x-release-status: BETA
      x-endpoint-errors:
      - error-code: CARD_DECLINED
      - error-code: INVALID_CARD
  /v2/labor/break-types:
    get:
      tags:
      - Labor
      summary: ListBreakTypes
      description: Returns a paginated list of `BreakType` instances for a business.
      operationId: ListBreakTypes
      parameters:
      - name: location_id
        in: query
        description: |-
          Filter Break Types returned to only those that are associated with the
          specified location.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          Maximum number of Break Types to return per page. Can range between 1
          and 200. The default is the maximum at 200.
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: cursor
        in: query
        description: Pointer to the next page of Break Type results to fetch.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBreakTypesResponse'
      security:
      - oauth2:
        - TIMECARDS_SETTINGS_READ
      x-release-status: PUBLIC
    post:
      tags:
      - Labor
      summary: CreateBreakType
      description: |-
        Creates a new `BreakType`.

        A `BreakType` is a template for creating `Break` objects.
        You must provide the following values in your request to this
        endpoint:

        - `location_id`
        - `break_name`
        - `expected_duration`
        - `is_paid`

        You can only have 3 `BreakType` instances per location. If you attempt to add a 4th
        `BreakType` for a location, an `INVALID_REQUEST_ERROR` "Exceeded limit of 3 breaks per location."
        is returned.
      operationId: CreateBreakType
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBreakTypeRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBreakTypeResponse'
      security:
      - oauth2:
        - TIMECARDS_SETTINGS_WRITE
      x-release-status: PUBLIC
  /v2/labor/break-types/{id}:
    get:
      tags:
      - Labor
      summary: GetBreakType
      description: Returns a single `BreakType` specified by id.
      operationId: GetBreakType
      parameters:
      - name: id
        in: path
        description: UUID for the `BreakType` being retrieved.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBreakTypeResponse'
      security:
      - oauth2:
        - TIMECARDS_SETTINGS_READ
      x-release-status: PUBLIC
    put:
      tags:
      - Labor
      summary: UpdateBreakType
      description: Updates an existing `BreakType`.
      operationId: UpdateBreakType
      parameters:
      - name: id
        in: path
        description: UUID for the `BreakType` being updated.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBreakTypeRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBreakTypeResponse'
      security:
      - oauth2:
        - TIMECARDS_SETTINGS_WRITE
        - TIMECARDS_SETTINGS_READ
      x-release-status: PUBLIC
    delete:
      tags:
      - Labor
      summary: DeleteBreakType
      description: |-
        Deletes an existing `BreakType`.

        A `BreakType` can be deleted even if it is referenced from a `Shift`.
      operationId: DeleteBreakType
      parameters:
      - name: id
        in: path
        description: UUID for the `BreakType` being deleted.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBreakTypeResponse'
      security:
      - oauth2:
        - TIMECARDS_SETTINGS_WRITE
      x-release-status: PUBLIC
  /v2/labor/employee-wages:
    get:
      tags:
      - Labor
      summary: ListEmployeeWages
      description: Returns a paginated list of `EmployeeWage` instances for a business.
      operationId: ListEmployeeWages
      parameters:
      - name: employee_id
        in: query
        description: Filter wages returned to only those that are associated with
          the specified employee.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          Maximum number of Employee Wages to return per page. Can range between
          1 and 200. The default is the maximum at 200.
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: cursor
        in: query
        description: Pointer to the next page of Employee Wage results to fetch.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEmployeeWagesResponse'
      deprecated: true
      security:
      - oauth2:
        - EMPLOYEES_READ
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2020-08-26
        retirementDate: 2021-08-26
        replacedBy: ListTeamMemberWages
        guideUrl: https://developer.squareup.com/docs/labor-api/migrate-to-teams
  /v2/labor/employee-wages/{id}:
    get:
      tags:
      - Labor
      summary: GetEmployeeWage
      description: Returns a single `EmployeeWage` specified by id.
      operationId: GetEmployeeWage
      parameters:
      - name: id
        in: path
        description: UUID for the `EmployeeWage` being retrieved.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEmployeeWageResponse'
      deprecated: true
      security:
      - oauth2:
        - EMPLOYEES_READ
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2020-08-26
        retirementDate: 2021-08-26
        replacedBy: GetTeamMemberWage
        guideUrl: https://developer.squareup.com/docs/labor-api/migrate-to-teams
  /v2/labor/shifts:
    post:
      tags:
      - Labor
      summary: CreateShift
      description: |-
        Creates a new `Shift`.

        A `Shift` represents a complete work day for a single employee.
        You must provide the following values in your request to this
        endpoint:

        - `location_id`
        - `employee_id`
        - `start_at`

        An attempt to create a new `Shift` can result in a `BAD_REQUEST` error when:
        - The `status` of the new `Shift` is `OPEN` and the employee has another
        shift with an `OPEN` status.
        - The `start_at` date is in the future
        - the `start_at` or `end_at` overlaps another shift for the same employee
        - If `Break`s are set in the request, a break `start_at`
        must not be before the `Shift.start_at`. A break `end_at` must not be after
        the `Shift.end_at`
      operationId: CreateShift
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateShiftRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateShiftResponse'
      security:
      - oauth2:
        - TIMECARDS_WRITE
      x-release-status: PUBLIC
  /v2/labor/shifts/search:
    post:
      tags:
      - Labor
      summary: SearchShifts
      description: |-
        Returns a paginated list of `Shift` records for a business.
        The list to be returned can be filtered by:
        - Location IDs **and**
        - employee IDs **and**
        - shift status (`OPEN`, `CLOSED`) **and**
        - shift start **and**
        - shift end **and**
        - work day details

        The list can be sorted by:
        - `start_at`
        - `end_at`
        - `created_at`
        - `updated_at`
      operationId: SearchShifts
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchShiftsRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchShiftsResponse'
      security:
      - oauth2:
        - TIMECARDS_READ
      x-release-status: PUBLIC
  /v2/labor/shifts/{id}:
    get:
      tags:
      - Labor
      summary: GetShift
      description: Returns a single `Shift` specified by id.
      operationId: GetShift
      parameters:
      - name: id
        in: path
        description: UUID for the `Shift` being retrieved.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetShiftResponse'
      security:
      - oauth2:
        - TIMECARDS_READ
      x-release-status: PUBLIC
    put:
      tags:
      - Labor
      summary: UpdateShift
      description: |-
        Updates an existing `Shift`.

        When adding a `Break` to a `Shift`, any earlier `Breaks` in the `Shift` have
        the `end_at` property set to a valid RFC-3339 datetime string.

        When closing a `Shift`, all `Break` instances in the shift must be complete with `end_at`
        set on each `Break`.
      operationId: UpdateShift
      parameters:
      - name: id
        in: path
        description: ID of the object being updated.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateShiftRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateShiftResponse'
      security:
      - oauth2:
        - TIMECARDS_WRITE
        - TIMECARDS_READ
      x-release-status: PUBLIC
    delete:
      tags:
      - Labor
      summary: DeleteShift
      description: Deletes a `Shift`.
      operationId: DeleteShift
      parameters:
      - name: id
        in: path
        description: UUID for the `Shift` being deleted.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteShiftResponse'
      security:
      - oauth2:
        - TIMECARDS_WRITE
      x-release-status: PUBLIC
  /v2/labor/team-member-wages:
    get:
      tags:
      - Labor
      summary: ListTeamMemberWages
      description: Returns a paginated list of `TeamMemberWage` instances for a business.
      operationId: ListTeamMemberWages
      parameters:
      - name: team_member_id
        in: query
        description: |-
          Filter wages returned to only those that are associated with the
          specified team member.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          Maximum number of Team Member Wages to return per page. Can range between
          1 and 200. The default is the maximum at 200.
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: cursor
        in: query
        description: Pointer to the next page of Employee Wage results to fetch.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTeamMemberWagesResponse'
      security:
      - oauth2:
        - EMPLOYEES_READ
      x-release-status: PUBLIC
  /v2/labor/team-member-wages/{id}:
    get:
      tags:
      - Labor
      summary: GetTeamMemberWage
      description: Returns a single `TeamMemberWage` specified by id.
      operationId: GetTeamMemberWage
      parameters:
      - name: id
        in: path
        description: UUID for the `TeamMemberWage` being retrieved.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTeamMemberWageResponse'
      security:
      - oauth2:
        - EMPLOYEES_READ
      x-release-status: PUBLIC
  /v2/labor/workweek-configs:
    get:
      tags:
      - Labor
      summary: ListWorkweekConfigs
      description: Returns a list of `WorkweekConfig` instances for a business.
      operationId: ListWorkweekConfigs
      parameters:
      - name: limit
        in: query
        description: Maximum number of Workweek Configs to return per page.
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: cursor
        in: query
        description: Pointer to the next page of Workweek Config results to fetch.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkweekConfigsResponse'
      security:
      - oauth2:
        - TIMECARDS_SETTINGS_READ
      x-release-status: PUBLIC
  /v2/labor/workweek-configs/{id}:
    put:
      tags:
      - Labor
      summary: UpdateWorkweekConfig
      description: Updates a `WorkweekConfig`.
      operationId: UpdateWorkweekConfig
      parameters:
      - name: id
        in: path
        description: UUID for the `WorkweekConfig` object being updated.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkweekConfigRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWorkweekConfigResponse'
      security:
      - oauth2:
        - TIMECARDS_SETTINGS_WRITE
        - TIMECARDS_SETTINGS_READ
      x-release-status: PUBLIC
  /v2/locations:
    get:
      tags:
      - Locations
      summary: ListLocations
      description: |-
        Provides information of all locations of a business.

        Most other Connect API endpoints have a required `location_id` path parameter.
        The `id` field of the [`Location`](#type-location) objects returned by this
        endpoint correspond to that `location_id` parameter.
      operationId: ListLocations
      parameters: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      security:
      - oauth2:
        - MERCHANT_PROFILE_READ
      x-release-status: PUBLIC
      x-unitTests:
      - request:
          method: GET
          uri: /v2/locations
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: "200"
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: ListLocations
    post:
      tags:
      - Locations
      summary: CreateLocation
      description: |-
        Creates a location.
        For more information about locations, see [Locations API Overview](https://developer.squareup.com/docs/locations-api).
      operationId: CreateLocation
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLocationRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLocationResponse'
      security:
      - oauth2:
        - MERCHANT_PROFILE_WRITE
      x-release-status: BETA
      x-endpoint-errors:
      - error-code: BAD_REQUEST
  /v2/locations/{location_id}:
    get:
      tags:
      - Locations
      summary: RetrieveLocation
      description: "Retrieves details of a location. You can specify \"main\" \nas\
        \ the location ID to retrieve details of the \nmain location. For more information,\
        \ \nsee [Locations API Overview](https://developer.squareup.com/docs/docs/locations-api)."
      operationId: RetrieveLocation
      parameters:
      - name: location_id
        in: path
        description: |-
          The ID of the location to retrieve. If you specify the string "main",
          then the endpoint returns the main location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveLocationResponse'
      security:
      - oauth2:
        - MERCHANT_PROFILE_READ
      x-release-status: PUBLIC
      x-endpoint-errors:
      - error-code: NOT_FOUND
    put:
      tags:
      - Locations
      summary: UpdateLocation
      description: Updates a location.
      operationId: UpdateLocation
      parameters:
      - name: location_id
        in: path
        description: The ID of the location to update.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLocationRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLocationResponse'
      security:
      - oauth2:
        - MERCHANT_PROFILE_WRITE
      x-release-status: BETA
      x-endpoint-errors:
      - error-code: BAD_REQUEST
  /v2/locations/{location_id}/additional-recipient-receivable-refunds:
    get:
      tags:
      - Reporting
      summary: ListAdditionalRecipientReceivableRefunds
      description: |-
        Returns a list of refunded transactions (across all possible originating locations) relating to monies
        credited to the provided location ID by another Square account using the `additional_recipients` field in a transaction.

        Max results per [page](#paginatingresults): 50
      operationId: ListAdditionalRecipientReceivableRefunds
      parameters:
      - name: location_id
        in: path
        description: The ID of the location to list AdditionalRecipientReceivableRefunds
          for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: begin_time
        in: query
        description: |-
          The beginning of the requested reporting period, in RFC 3339 format.

          See [Date ranges](#dateranges) for details on date inclusivity/exclusivity.

          Default value: The current time minus one year.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_time
        in: query
        description: |-
          The end of the requested reporting period, in RFC 3339 format.

          See [Date ranges](#dateranges) for details on date inclusivity/exclusivity.

          Default value: The current time.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sort_order
        in: query
        description: |-
          The order in which results are listed in the response (`ASC` for
          oldest first, `DESC` for newest first).

          Default value: `DESC`
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SortOrder'
      - name: cursor
        in: query
        description: |-
          A pagination cursor returned by a previous call to this endpoint.
          Provide this to retrieve the next set of results for your original query.

          See [Paginating results](#paginatingresults) for more information.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAdditionalRecipientReceivableRefundsResponse'
      security:
      - oauth2:
        - PAYMENTS_READ
      x-release-status: RETIRED
  /v2/locations/{location_id}/additional-recipient-receivables:
    get:
      tags:
      - Reporting
      summary: ListAdditionalRecipientReceivables
      description: |-
        Returns a list of receivables (across all possible sending locations) representing monies credited
        to the provided location ID by another Square account using the `additional_recipients` field in a transaction.

        Max results per [page](#paginatingresults): 50
      operationId: ListAdditionalRecipientReceivables
      parameters:
      - name: location_id
        in: path
        description: The ID of the location to list AdditionalRecipientReceivables
          for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: begin_time
        in: query
        description: |-
          The beginning of the requested reporting period, in RFC 3339 format.

          See [Date ranges](#dateranges) for details on date inclusivity/exclusivity.

          Default value: The current time minus one year.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_time
        in: query
        description: |-
          The end of the requested reporting period, in RFC 3339 format.

          See [Date ranges](#dateranges) for details on date inclusivity/exclusivity.

          Default value: The current time.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sort_order
        in: query
        description: |-
          The order in which results are listed in the response (`ASC` for
          oldest first, `DESC` for newest first).

          Default value: `DESC`
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SortOrder'
      - name: cursor
        in: query
        description: |-
          A pagination cursor returned by a previous call to this endpoint.
          Provide this to retrieve the next set of results for your original query.

          See [Paginating results](#paginatingresults) for more information.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAdditionalRecipientReceivablesResponse'
      security:
      - oauth2:
        - PAYMENTS_READ
      x-release-status: RETIRED
  /v2/locations/{location_id}/checkouts:
    post:
      tags:
      - Checkout
      summary: CreateCheckout
      description: |-
        Links a `checkoutId` to a `checkout_page_url` that customers will
        be directed to in order to provide their payment information using a
        payment processing workflow hosted on connect.squareup.com.
      operationId: CreateCheckout
      parameters:
      - name: location_id
        in: path
        description: The ID of the business location to associate the checkout with.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCheckoutRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCheckoutResponse'
      security:
      - oauth2:
        - PAYMENTS_WRITE
        - ORDERS_WRITE
      x-release-status: PUBLIC
      x-endpoint-errors:
      - error-code: AMOUNT_TOO_HIGH
      - error-code: CARD_PROCESSING_NOT_ENABLED
      - error-code: ORDER_EXPIRED
  /v2/locations/{location_id}/refunds:
    get:
      tags:
      - Transactions
      summary: ListRefunds
      description: |-
        Lists refunds for one of a business's locations.

        In addition to full or partial tender refunds processed through Square APIs,
        refunds may result from itemized returns or exchanges through Square's
        Point of Sale applications.

        Refunds with a `status` of `PENDING` are not currently included in this
        endpoint's response.

        Max results per [page](#paginatingresults): 50
      operationId: ListRefunds
      parameters:
      - name: location_id
        in: path
        description: The ID of the location to list refunds for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: begin_time
        in: query
        description: |-
          The beginning of the requested reporting period, in RFC 3339 format.

          See [Date ranges](#dateranges) for details on date inclusivity/exclusivity.

          Default value: The current time minus one year.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_time
        in: query
        description: |-
          The end of the requested reporting period, in RFC 3339 format.

          See [Date ranges](#dateranges) for details on date inclusivity/exclusivity.

          Default value: The current time.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sort_order
        in: query
        description: |-
          The order in which results are listed in the response (`ASC` for
          oldest first, `DESC` for newest first).

          Default value: `DESC`
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SortOrder'
      - name: cursor
        in: query
        description: |-
          A pagination cursor returned by a previous call to this endpoint.
          Provide this to retrieve the next set of results for your original query.

          See [Paginating results](#paginatingresults) for more information.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRefundsResponse'
      deprecated: true
      security:
      - oauth2:
        - PAYMENTS_READ
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-08-15
        retirementDate: 2021-09-01
        replacedBy: SearchOrders
        guideUrl: https://developer.squareup.com/docs/payments-api/migrate-from-transactions-api
  /v2/locations/{location_id}/transactions:
    get:
      tags:
      - Transactions
      summary: ListTransactions
      description: |-
        Lists transactions for a particular location.

        Transactions include payment information from sales and exchanges and refund
        information from returns and exchanges.

        Max results per [page](#paginatingresults): 50
      operationId: ListTransactions
      parameters:
      - name: location_id
        in: path
        description: The ID of the location to list transactions for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: begin_time
        in: query
        description: |-
          The beginning of the requested reporting period, in RFC 3339 format.

          See [Date ranges](#dateranges) for details on date inclusivity/exclusivity.

          Default value: The current time minus one year.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_time
        in: query
        description: |-
          The end of the requested reporting period, in RFC 3339 format.

          See [Date ranges](#dateranges) for details on date inclusivity/exclusivity.

          Default value: The current time.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sort_order
        in: query
        description: |-
          The order in which results are listed in the response (`ASC` for
          oldest first, `DESC` for newest first).

          Default value: `DESC`
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SortOrder'
      - name: cursor
        in: query
        description: |-
          A pagination cursor returned by a previous call to this endpoint.
          Provide this to retrieve the next set of results for your original query.

          See [Paginating results](#paginatingresults) for more information.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTransactionsResponse'
      deprecated: true
      security:
      - oauth2:
        - PAYMENTS_READ
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-08-15
        retirementDate: 2021-09-01
        replacedBy: SearchOrders
        guideUrl: https://developer.squareup.com/docs/payments-api/migrate-from-transactions-api
    post:
      tags:
      - Transactions
      summary: Charge
      description: |-
        Charges a card represented by a card nonce or a customer's card on file.

        Your request to this endpoint must include _either_:

        - A value for the `card_nonce` parameter (to charge a card nonce generated
        with the `SqPaymentForm`)
        - Values for the `customer_card_id` and `customer_id` parameters (to charge
        a customer's card on file)

        In order for an eCommerce payment to potentially qualify for
        [Square chargeback protection](https://squareup.com/help/article/5394), you
        _must_ provide values for the following parameters in your request:

        - `buyer_email_address`
        - At least one of `billing_address` or `shipping_address`

        When this response is returned, the amount of Square's processing fee might not yet be
        calculated. To obtain the processing fee, wait about ten seconds and call
        [RetrieveTransaction](#endpoint-retrievetransaction). See the `processing_fee_money`
        field of each [Tender included](#type-tender) in the transaction.
      operationId: Charge
      parameters:
      - name: location_id
        in: path
        description: The ID of the location to associate the created transaction with.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChargeRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargeResponse'
      deprecated: true
      security:
      - oauth2:
        - PAYMENTS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-08-15
        retirementDate: 2021-09-01
        replacedBy: CreatePayment
        guideUrl: https://developer.squareup.com/docs/payments-api/migrate-from-transactions-api
      x-endpoint-errors:
      - error-code: AMOUNT_TOO_HIGH
      - error-code: CARD_DECLINED
      - error-code: CARD_DECLINED_CALL_ISSUER
      - error-code: CARD_EXPIRED
      - error-code: CARD_PROCESSING_NOT_ENABLED
      - error-code: CARD_TOKEN_EXPIRED
      - error-code: CARD_TOKEN_USED
      - error-code: INVALID_CARD
      - error-code: INVALID_CARD_DATA
      - error-code: INVALID_EXPIRATION
      - error-code: ONE_INSTRUMENT_EXPECTED
      - error-code: ORDER_ALREADY_USED
      - error-code: ORDER_EXPIRED
      - error-code: VERIFY_AVS_FAILURE
      - error-code: VERIFY_CVV_FAILURE
  /v2/locations/{location_id}/transactions/{transaction_id}:
    get:
      tags:
      - Transactions
      summary: RetrieveTransaction
      description: Retrieves details for a single transaction.
      operationId: RetrieveTransaction
      parameters:
      - name: location_id
        in: path
        description: The ID of the transaction's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: transaction_id
        in: path
        description: The ID of the transaction to retrieve.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveTransactionResponse'
      deprecated: true
      security:
      - oauth2:
        - PAYMENTS_READ
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-08-15
        retirementDate: 2021-09-01
        replacedBy: BatchRetrieveOrders
        guideUrl: https://developer.squareup.com/docs/payments-api/migrate-from-transactions-api
  /v2/locations/{location_id}/transactions/{transaction_id}/capture:
    post:
      tags:
      - Transactions
      summary: CaptureTransaction
      description: |-
        Captures a transaction that was created with the [Charge](#endpoint-charge)
        endpoint with a `delay_capture` value of `true`.


        See [Delayed capture transactions](https://developer.squareup.com/docs/payments/transactions/overview#delayed-capture)
        for more information.
      operationId: CaptureTransaction
      parameters:
      - name: location_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: transaction_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaptureTransactionResponse'
      deprecated: true
      security:
      - oauth2:
        - PAYMENTS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-08-15
        retirementDate: 2021-09-01
        replacedBy: CompletePayment
        guideUrl: https://developer.squareup.com/docs/payments-api/migrate-from-transactions-api
      x-endpoint-errors:
      - error-code: DELAYED_TRANSACTION_CANCELED
      - error-code: DELAYED_TRANSACTION_EXPIRED
  /v2/locations/{location_id}/transactions/{transaction_id}/refund:
    post:
      tags:
      - Transactions
      summary: CreateRefund
      description: |-
        Initiates a refund for a previously charged tender.

        You must issue a refund within 120 days of the associated payment. See
        [this article](https://squareup.com/help/us/en/article/5060) for more information
        on refund behavior.

        NOTE: Card-present transactions with Interac credit cards **cannot be
        refunded using the Connect API**. Interac transactions must refunded
        in-person (e.g., dipping the card using POS app).
      operationId: CreateRefund
      parameters:
      - name: location_id
        in: path
        description: The ID of the original transaction's associated location.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: transaction_id
        in: path
        description: The ID of the original transaction that includes the tender to
          refund.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRefundRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRefundResponse'
      deprecated: true
      security:
      - oauth2:
        - PAYMENTS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-08-15
        retirementDate: 2021-09-01
        replacedBy: RefundPayment
        guideUrl: https://developer.squareup.com/docs/payments-api/migrate-from-transactions-api
      x-endpoint-errors:
      - error-code: PAYMENT_NOT_REFUNDABLE
      - error-code: REFUND_AMOUNT_INVALID
  /v2/locations/{location_id}/transactions/{transaction_id}/void:
    post:
      tags:
      - Transactions
      summary: VoidTransaction
      description: |-
        Cancels a transaction that was created with the [Charge](#endpoint-charge)
        endpoint with a `delay_capture` value of `true`.


        See [Delayed capture transactions](https://developer.squareup.com/docs/payments/transactions/overview#delayed-capture)
        for more information.
      operationId: VoidTransaction
      parameters:
      - name: location_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: transaction_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoidTransactionResponse'
      deprecated: true
      security:
      - oauth2:
        - PAYMENTS_WRITE
      x-release-status: DEPRECATED
      x-deprecation:
        deprecationDate: 2019-08-15
        retirementDate: 2021-09-01
        replacedBy: CancelPayment
        guideUrl: https://developer.squareup.com/docs/payments-api/migrate-from-transactions-api
      x-endpoint-errors:
      - error-code: DELAYED_TRANSACTION_CAPTURED
      - error-code: DELAYED_TRANSACTION_EXPIRED
  /v2/loyalty/accounts:
    post:
      tags:
      - Loyalty
      summary: CreateLoyaltyAccount
      description: "Creates a loyalty account. For more information, see \n[Create\
        \ a loyalty account](https://developer.squareup.com/docs/docs/loyalty-api/overview/#loyalty-overview-create-account)."
      operationId: CreateLoyaltyAccount
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLoyaltyAccountRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLoyaltyAccountResponse'
      security:
      - oauth2:
        - LOYALTY_WRITE
      x-release-status: BETA
      x-endpoint-errors:
      - error-code: INVALID_PHONE_NUMBER
  /v2/loyalty/accounts/search:
    post:
      tags:
      - Loyalty
      summary: SearchLoyaltyAccounts
      description: "Searches for loyalty accounts. \nIn the current implementation,\
        \ you can search for a loyalty account using the phone number associated with\
        \ the account. \nIf no phone number is provided, all loyalty accounts are\
        \ returned."
      operationId: SearchLoyaltyAccounts
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchLoyaltyAccountsRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchLoyaltyAccountsResponse'
      security:
      - oauth2:
        - LOYALTY_READ
      x-release-status: BETA
  /v2/loyalty/accounts/{account_id}:
    get:
      tags:
      - Loyalty
      summary: RetrieveLoyaltyAccount
      description: Retrieves a loyalty account.
      operationId: RetrieveLoyaltyAccount
      parameters:
      - name: account_id
        in: path
        description: The ID of the [loyalty account](#type-LoyaltyAccount) to retrieve.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveLoyaltyAccountResponse'
      security:
      - oauth2:
        - LOYALTY_READ
      x-release-status: BETA
  /v2/loyalty/accounts/{account_id}/accumulate:
    post:
      tags:
      - Loyalty
      summary: AccumulateLoyaltyPoints
      description: "Adds points to a loyalty account.\n\n- If you are using the Orders\
        \ API to manage orders, you only provide the `order_id`. \nThe endpoint reads\
        \ the order to compute points to add to the buyer's account.\n- If you are\
        \ not using the Orders API to manage orders, \nyou first perform a client-side\
        \ computation to compute the points.  \nFor spend-based and visit-based programs,\
        \ you can call \n`CalculateLoyaltyPoints` to compute the points. For more\
        \ information, \nsee [Loyalty Program Overview](https://developer.squareup.com/docs/docs/loyalty/overview).\
        \ \nYou then provide the points in a request to this endpoint. \n\nFor more\
        \ information, see [Accumulate points](https://developer.squareup.com/docs/docs/loyalty-api/overview/#accumulate-points)."
      operationId: AccumulateLoyaltyPoints
      parameters:
      - name: account_id
        in: path
        description: The [loyalty account](#type-LoyaltyAccount) ID to which to add
          the points.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccumulateLoyaltyPointsRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccumulateLoyaltyPointsResponse'
      security:
      - oauth2:
        - LOYALTY_WRITE
      x-release-status: BETA
  /v2/loyalty/accounts/{account_id}/adjust:
    post:
      tags:
      - Loyalty
      summary: AdjustLoyaltyPoints
      description: "Adds points to or subtracts points from a buyer's account. \n\n\
        Use this endpoint only when you need to manually adjust points. Otherwise,\
        \ in your application flow, you call \n[AccumulateLoyaltyPoints](https://developer.squareup.com/docs/reference/square/loyalty-api/accumulate-loyalty-points)\
        \ \nto add points when a buyer pays for the purchase."
      operationId: AdjustLoyaltyPoints
      parameters:
      - name: account_id
        in: path
        description: The ID of the [loyalty account](#type-LoyaltyAccount) in which
          to adjust the points.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdjustLoyaltyPointsRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdjustLoyaltyPointsResponse'
      security:
      - oauth2:
        - LOYALTY_WRITE
      x-release-status: BETA
  /v2/loyalty/events/search:
    post:
      tags:
      - Loyalty
      summary: SearchLoyaltyEvents
      description: "Searches for loyalty events.\n\nA Square loyalty program maintains\
        \ a ledger of events that occur during the lifetime of a \nbuyer's loyalty\
        \ account. Each change in the point balance \n(for example, points earned,\
        \ points redeemed, and points expired) is \nrecorded in the ledger. Using\
        \ this endpoint, you can search the ledger for events. \nFor more information,\
        \ see \n[Loyalty events](https://developer.squareup.com/docs/docs/loyalty-api/overview/#loyalty-events)."
      operationId: SearchLoyaltyEvents
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchLoyaltyEventsRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchLoyaltyEventsResponse'
      security:
      - oauth2:
        - LOYALTY_READ
      x-release-status: BETA
  /v2/loyalty/programs:
    get:
      tags:
      - Loyalty
      summary: ListLoyaltyPrograms
      description: "Returns a list of loyalty programs in the seller's account.\n\
        Currently, a seller can only have one loyalty program. For more information,\
        \ see \n[Loyalty Overview](https://developer.squareup.com/docs/docs/loyalty/overview).\n\
        ."
      operationId: ListLoyaltyPrograms
      parameters: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLoyaltyProgramsResponse'
      security:
      - oauth2:
        - LOYALTY_READ
      x-release-status: BETA
  /v2/loyalty/programs/{program_id}/calculate:
    post:
      tags:
      - Loyalty
      summary: CalculateLoyaltyPoints
      description: "Calculates the points a purchase earns.\n\n- If you are using\
        \ the Orders API to manage orders, you provide `order_id` in the request.\
        \ The \nendpoint calculates the points by reading the order.\n- If you are\
        \ not using the Orders API to manage orders, you provide the purchase amount\
        \ in \nthe request for the endpoint to calculate the points.\n\nAn application\
        \ might call this endpoint to show the points that a buyer can earn with the\
        \ \nspecific purchase."
      operationId: CalculateLoyaltyPoints
      parameters:
      - name: program_id
        in: path
        description: The [loyalty program](#type-LoyaltyProgram) ID, which defines
          the rules for accruing points.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculateLoyaltyPointsRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculateLoyaltyPointsResponse'
      security:
      - oauth2:
        - LOYALTY_READ
      x-release-status: BETA
  /v2/loyalty/rewards:
    post:
      tags:
      - Loyalty
      summary: CreateLoyaltyReward
      description: "Creates a loyalty reward. In the process, the endpoint does following:\n\
        \n- Uses the `reward_tier_id` in the request to determine the number of points\
        \ \nto lock for this reward. \n- If the request includes `order_id`, it adds\
        \ the reward and related discount to the order. \n\nAfter a reward is created,\
        \ the points are locked and \nnot available for the buyer to redeem another\
        \ reward. \nFor more information, see \n[Loyalty rewards](https://developer.squareup.com/docs/docs/loyalty-api/overview/#loyalty-overview-loyalty-rewards)."
      operationId: CreateLoyaltyReward
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLoyaltyRewardRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLoyaltyRewardResponse'
      security:
      - oauth2:
        - LOYALTY_WRITE
      x-release-status: BETA
  /v2/loyalty/rewards/search:
    post:
      tags:
      - Loyalty
      summary: SearchLoyaltyRewards
      description: "Searches for loyalty rewards in a loyalty account. \n\nIn the\
        \ current implementation, the endpoint supports search by the reward `status`.\n\
        \nIf you know a reward ID, use the \n[RetrieveLoyaltyReward](https://developer.squareup.com/docs/reference/square/loyalty-api/retrieve-loyalty-reward)\
        \ endpoint.\n\nFor more information about loyalty rewards, see \n[Loyalty\
        \ Rewards](https://developer.squareup.com/docs/docs/loyalty-api/overview/#loyalty-rewards)."
      operationId: SearchLoyaltyRewards
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchLoyaltyRewardsRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchLoyaltyRewardsResponse'
      security:
      - oauth2:
        - LOYALTY_READ
      x-release-status: BETA
  /v2/loyalty/rewards/{reward_id}:
    get:
      tags:
      - Loyalty
      summary: RetrieveLoyaltyReward
      description: Retrieves a loyalty reward.
      operationId: RetrieveLoyaltyReward
      parameters:
      - name: reward_id
        in: path
        description: The ID of the [loyalty reward](#type-LoyaltyReward) to retrieve.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveLoyaltyRewardResponse'
      security:
      - oauth2:
        - LOYALTY_READ
      x-release-status: BETA
    delete:
      tags:
      - Loyalty
      summary: DeleteLoyaltyReward
      description: "Deletes a loyalty reward by doing the following:\n\n- Returns\
        \ the loyalty points back to the loyalty account.\n- If an order ID was specified\
        \ when the reward was created \n(see [CreateLoyaltyReward](https://developer.squareup.com/docs/reference/square/loyalty-api/create-loyalty-reward)),\
        \ \nit updates the order by removing the reward and related \ndiscounts.\n\
        \nYou cannot delete a reward that has reached the terminal state (REDEEMED).\
        \ \nFor more information, see \n[Loyalty rewards](https://developer.squareup.com/docs/docs/loyalty-api/overview/#loyalty-overview-loyalty-rewards)."
      operationId: DeleteLoyaltyReward
      parameters:
      - name: reward_id
        in: path
        description: The ID of the [loyalty reward](#type-LoyaltyReward) to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLoyaltyRewardResponse'
      security:
      - oauth2:
        - LOYALTY_WRITE
      x-release-status: BETA
  /v2/loyalty/rewards/{reward_id}/redeem:
    post:
      tags:
      - Loyalty
      summary: RedeemLoyaltyReward
      description: "Redeems a loyalty reward.\n\nThe endpoint sets the reward to the\
        \ terminal state (`REDEEMED`). \n\nIf you are using your own order processing\
        \ system (not using the \nOrders API), you call this endpoint after the buyer\
        \ paid for the \npurchase.\n\nAfter the reward reaches the terminal state,\
        \ it cannot be deleted. \nIn other words, points used for the reward cannot\
        \ be returned \nto the account.\n\nFor more information, see \n[Loyalty rewards](https://developer.squareup.com/docs/docs/loyalty-api/overview/#loyalty-overview-loyalty-rewards)."
      operationId: RedeemLoyaltyReward
      parameters:
      - name: reward_id
        in: path
        description: The ID of the [loyalty reward](#type-LoyaltyReward) to redeem.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedeemLoyaltyRewardRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedeemLoyaltyRewardResponse'
      security:
      - oauth2:
        - LOYALTY_WRITE
      x-release-status: BETA
  /v2/merchants:
    get:
      tags:
      - Merchants
      summary: ListMerchants
      description: |-
        Returns `Merchant` information for a given access token.

        If you don't know a `Merchant` ID, you can use this endpoint to retrieve the merchant ID for an access token.
        You can specify your personal access token to get your own merchant information or specify an OAuth token
        to get the information for the  merchant that granted you access.

        If you know the merchant ID, you can also use the [RetrieveMerchant](#endpoint-merchants-retrievemerchant)
        endpoint to get the merchant information.
      operationId: ListMerchants
      parameters:
      - name: cursor
        in: query
        description: The cursor generated by the previous response.
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMerchantsResponse'
      security:
      - oauth2:
        - MERCHANT_PROFILE_READ
      x-release-status: PUBLIC
  /v2/merchants/{merchant_id}:
    get:
      tags:
      - Merchants
      summary: RetrieveMerchant
      description: Retrieve a `Merchant` object for the given `merchant_id`.
      operationId: RetrieveMerchant
      parameters:
      - name: merchant_id
        in: path
        description: |-
          The ID of the merchant to retrieve. If the string "me" is supplied as the ID,
          then retrieve the merchant that is currently accessible to this call.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveMerchantResponse'
      security:
      - oauth2:
        - MERCHANT_PROFILE_READ
      x-release-status: PUBLIC
  /v2/orders:
    post:
      tags:
      - Orders
      summary: CreateOrder
      description: |-
        Creates a new [Order](#type-order) which can include information on products for
        purchase and settings to apply to the purchase.

        To pay for a created order, please refer to the [Pay for Orders](https://developer.squareup.com/docs/orders-api/pay-for-orders)
        guide.

        You can modify open orders using the [UpdateOrder](#endpoint-orders-updateorder) endpoint.
      externalDocs:
        description: Create Orders
        url: https://developer.squareup.com/docs/orders-api/create-orders
      operationId: CreateOrder
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrderResponse'
      security:
      - oauth2:
        - ORDERS_WRITE
      x-release-status: PUBLIC
  /v2/orders/batch-retrieve:
    post:
      tags:
      - Orders
      summary: BatchRetrieveOrders
      description: |-
        Retrieves a set of [Order](#type-order)s by their IDs.

        If a given Order ID does not exist, the ID is ignored instead of generating an error.
      externalDocs:
        description: Retrieve orders
        url: https://developer.squareup.com/docs/orders-api/manage-orders#retrieve-orders
      operationId: BatchRetrieveOrders
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRetrieveOrdersRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchRetrieveOrdersResponse'
      security:
      - oauth2:
        - ORDERS_READ
      x-release-status: PUBLIC
  /v2/orders/calculate:
    post:
      tags:
      - Orders
      summary: CalculateOrder
      description: Calculates an [Order](#type-order).
      operationId: CalculateOrder
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculateOrderRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculateOrderResponse'
      security:
      - oauth2: []
      x-release-status: BETA
  /v2/orders/search:
    post:
      tags:
      - Orders
      summary: SearchOrders
      description: |-
        Search all orders for one or more locations. Orders include all sales,
        returns, and exchanges regardless of how or when they entered the Square
        Ecosystem (e.g. Point of Sale, Invoices, Connect APIs, etc).

        SearchOrders requests need to specify which locations to search and define a
        [`SearchOrdersQuery`](#type-searchordersquery) object which controls
        how to sort or filter the results. Your SearchOrdersQuery can:

          Set filter criteria.
          Set sort order.
          Determine whether to return results as complete Order objects, or as
        [OrderEntry](#type-orderentry) objects.

        Note that details for orders processed with Square Point of Sale while in
        offline mode may not be transmitted to Square for up to 72 hours. Offline
        orders have a `created_at` value that reflects the time the order was created,
        not the time it was subsequently transmitted to Square.
      externalDocs:
        description: Search orders
        url: https://developer.squareup.com/docs/orders-api/manage-orders#search-orders
      operationId: SearchOrders
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchOrdersRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchOrdersResponse'
      security:
      - oauth2:
        - ORDERS_READ
      x-release-status: PUBLIC
  /v2/orders/{order_id}:
    put:
      tags:
      - Orders
      summary: UpdateOrder
      description: |-
        Updates an open [Order](#type-order) by adding, replacing, or deleting
        fields. Orders with a `COMPLETED` or `CANCELED` state cannot be updated.

        An UpdateOrder request requires the following:

        - The `order_id` in the endpoint path, identifying the order to update.
        - The latest `version` of the order to update.
        - The [sparse order](https://developer.squareup.com/docs/orders-api/manage-orders#sparse-order-objects)
        containing only the fields to update and the version the update is
        being applied to.
        - If deleting fields, the [dot notation paths](https://developer.squareup.com/docs/orders-api/manage-orders#on-dot-notation)
        identifying fields to clear.

        To pay for an order, please refer to the [Pay for Orders](https://developer.squareup.com/docs/orders-api/pay-for-orders) guide.
      externalDocs:
        description: Update orders
        url: https://developer.squareup.com/docs/orders-api/manage-orders#update-orders
      operationId: UpdateOrder
      parameters:
      - name: order_id
        in: path
        description: The ID of the order to update.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOrderResponse'
      security:
      - oauth2:
        - ORDERS_WRITE
      x-release-status: BETA
  /v2/orders/{order_id}/pay:
    post:
      tags:
      - Orders
      summary: PayOrder
      description: |-
        Pay for an [order](#type-order) using one or more approved [payments](#type-payment),
        or settle an order with a total of `0`.

        The total of the `payment_ids` listed in the request must be equal to the order
        total. Orders with a total amount of `0` can be marked as paid by specifying an empty
        array of `payment_ids` in the request.

        To be used with PayOrder, a payment must:

        - Reference the order by specifying the `order_id` when [creating the payment](#endpoint-payments-createpayment).
        Any approved payments that reference the same `order_id` not specified in the
        `payment_ids` will be canceled.
        - Be approved with [delayed capture](https://developer.squareup.com/docs/payments-api/take-payments#delayed-capture).
        Using a delayed capture payment with PayOrder will complete the approved payment.
      externalDocs:
        description: Pay for Orders
        url: https://developer.squareup.com/docs/orders-api/pay-for-orders
      operationId: PayOrder
      parameters:
      - name: order_id
        in: path
        description: The ID of the order being paid.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayOrderRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayOrderResponse'
      security:
      - oauth2:
        - PAYMENTS_WRITE
        - ORDERS_WRITE
      x-release-status: BETA
  /v2/payments:
    get:
      tags:
      - Payments
      summary: ListPayments
      description: |-
        Retrieves a list of payments taken by the account making the request.

        Max results per page: 100
      operationId: ListPayments
      parameters:
      - name: begin_time
        in: query
        description: |-
          Timestamp for the beginning of the reporting period, in RFC 3339 format.
          Inclusive. Default: The current time minus one year.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_time
        in: query
        description: |-
          Timestamp for the end of the requested reporting period, in RFC 3339 format.

          Default: The current time.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sort_order
        in: query
        description: |-
          The order in which results are listed.
          - `ASC` - oldest to newest
          - `DESC` - newest to oldest (default).
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: cursor
        in: query
        description: |-
          A pagination cursor returned by a previous call to this endpoint.
          Provide this to retrieve the next set of results for the original query.

          See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: location_id
        in: query
        description: |-
          Limit results to the location supplied. By default, results are returned
          for the default (main) location associated with the merchant.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: total
        in: query
        description: The exact amount in the total_money for a `Payment`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: last_4
        in: query
        description: The last 4 digits of `Payment` card.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: card_brand
        in: query
        description: The brand of `Payment` card. For example, `VISA`
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          Maximum number of results to be returned in a single page.
          It is possible to receive fewer results than the specified limit on a given page.

          If the supplied value is greater than 100, at most 100 results will be returned.

          Default: `100`
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPaymentsResponse'
      security:
      - oauth2:
        - PAYMENTS_READ
      x-release-status: PUBLIC
    post:
      tags:
      - Payments
      summary: CreatePayment
      description: "Charges a payment source, for example, a card \nrepresented by\
        \ customer's card on file or a card nonce. In addition \nto the payment source,\
        \ the request must also include the \namount to accept for the payment.\n\n\
        There are several optional parameters that you can include in the request.\
        \ \nFor example, tip money, whether to autocomplete the payment, or a reference\
        \ ID\nto correlate this payment with another system. \n\nThe `PAYMENTS_WRITE_ADDITIONAL_RECIPIENTS`\
        \ OAuth permission is required\nto enable application fees."
      externalDocs:
        description: Take Payments
        url: https://developer.squareup.com/docs/payments-api/take-payments
      operationId: CreatePayment
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePaymentResponse'
      security:
      - oauth2:
        - PAYMENTS_WRITE
      x-release-status: PUBLIC
      x-endpoint-errors:
      - error-code: ADDRESS_VERIFICATION_FAILURE
      - error-code: ALLOWABLE_PIN_TRIES_EXCEEDED
      - error-code: BAD_EXPIRATION
      - error-code: CARDHOLDER_INSUFFICIENT_PERMISSIONS
      - error-code: CARD_EXPIRED
      - error-code: CARD_PROCESSING_NOT_ENABLED
      - error-code: CARD_NOT_SUPPORTED
      - error-code: CARD_TOKEN_EXPIRED
      - error-code: CARD_TOKEN_USED
      - error-code: CHIP_INSERTION_REQUIRED
      - error-code: CVV_FAILURE
      - error-code: EXPIRATION_FAILURE
      - error-code: GENERIC_DECLINE
      - error-code: GIFT_CARD_AVAILABLE_AMOUNT
      - error-code: INSUFFICIENT_FUNDS
      - error-code: INSUFFICIENT_PERMISSIONS
      - error-code: INVALID_ACCOUNT
      - error-code: INVALID_CARD_DATA
      - error-code: INVALID_EMAIL_ADDRESS
      - error-code: INVALID_EXPIRATION
      - error-code: INVALID_FEES
      - error-code: INVALID_LOCATION
      - error-code: INVALID_PIN
      - error-code: INVALID_POSTAL_CODE
      - error-code: MANUALLY_ENTERED_PAYMENT_NOT_SUPPORTED
      - error-code: PAN_FAILURE
      - error-code: PAYMENT_LIMIT_EXCEEDED
      - error-code: TEMPORARY_ERROR
      - error-code: TRANSACTION_LIMIT
      - error-code: VOICE_FAILURE
  /v2/payments/cancel:
    post:
      tags:
      - Payments
      summary: CancelPaymentByIdempotencyKey
      description: |-
        Cancels (voids) a payment identified by the idempotency key that is specified in the
        request.

        Use this method when status of a CreatePayment request is unknown. For example, after you send a
        CreatePayment request a network error occurs and you don't get a response. In this case, you can
        direct Square to cancel the payment using this endpoint. In the request, you provide the same
        idempotency key that you provided in your CreatePayment request you want  to cancel. After
        cancelling the payment, you can submit your CreatePayment request again.

        Note that if no payment with the specified idempotency key is found, no action is taken, the end
        point returns successfully.
      operationId: CancelPaymentByIdempotencyKey
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelPaymentByIdempotencyKeyRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelPaymentByIdempotencyKeyResponse'
      security:
      - oauth2:
        - PAYMENTS_WRITE
      x-release-status: PUBLIC
  /v2/payments/{payment_id}:
    get:
      tags:
      - Payments
      summary: GetPayment
      description: Retrieves details for a specific Payment.
      operationId: GetPayment
      parameters:
      - name: payment_id
        in: path
        description: Unique ID for the desired `Payment`.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPaymentResponse'
      security:
      - oauth2:
        - PAYMENTS_READ
      x-release-status: PUBLIC
  /v2/payments/{payment_id}/cancel:
    post:
      tags:
      - Payments
      summary: CancelPayment
      description: "Cancels (voids) a payment. If you set `autocomplete` to false\
        \ when creating a payment, \nyou can cancel the payment using this endpoint."
      externalDocs:
        description: Delayed capture
        url: https://developer.squareup.com/docs/payments-api/take-payments#delayed-payments
      operationId: CancelPayment
      parameters:
      - name: payment_id
        in: path
        description: '`payment_id` identifying the payment to be canceled.'
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelPaymentResponse'
      security:
      - oauth2:
        - PAYMENTS_WRITE
      x-release-status: PUBLIC
  /v2/payments/{payment_id}/complete:
    post:
      tags:
      - Payments
      summary: CompletePayment
      description: "Completes (captures) a payment.\n\nBy default, payments are set\
        \ to complete immediately after they are created. \nIf you set autocomplete\
        \ to false when creating a payment, you can complete (capture) \nthe payment\
        \ using this endpoint."
      externalDocs:
        description: Delayed capture
        url: https://developer.squareup.com/docs/payments-api/take-payments#delayed-payments
      operationId: CompletePayment
      parameters:
      - name: payment_id
        in: path
        description: Unique ID identifying the payment to be completed.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompletePaymentResponse'
      security:
      - oauth2:
        - PAYMENTS_WRITE
      x-release-status: PUBLIC
  /v2/refunds:
    get:
      tags:
      - Refunds
      summary: ListPaymentRefunds
      description: |-
        Retrieves a list of refunds for the account making the request.

        Max results per page: 100
      operationId: ListPaymentRefunds
      parameters:
      - name: begin_time
        in: query
        description: |-
          Timestamp for the beginning of the requested reporting period, in RFC 3339 format.

          Default: The current time minus one year.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_time
        in: query
        description: |-
          Timestamp for the end of the requested reporting period, in RFC 3339 format.

          Default: The current time.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sort_order
        in: query
        description: |-
          The order in which results are listed.
          - `ASC` - oldest to newest
          - `DESC` - newest to oldest (default).
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: cursor
        in: query
        description: |-
          A pagination cursor returned by a previous call to this endpoint.
          Provide this to retrieve the next set of results for the original query.

          See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: location_id
        in: query
        description: |-
          Limit results to the location supplied. By default, results are returned
          for all locations associated with the merchant.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: |-
          If provided, only refunds with the given status are returned.
          For a list of refund status values, see [PaymentRefund](#type-paymentrefund).

          Default: If omitted refunds are returned regardless of status.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: source_type
        in: query
        description: |-
          If provided, only refunds with the given source type are returned.
          - `CARD` - List refunds only for payments where card was specified as payment
          source.

          Default: If omitted refunds are returned regardless of source type.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          Maximum number of results to be returned in a single page.
          It is possible to receive fewer results than the specified limit on a given page.

          If the supplied value is greater than 100, at most 100 results will be returned.

          Default: `100`
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPaymentRefundsResponse'
      security:
      - oauth2:
        - PAYMENTS_READ
      x-release-status: PUBLIC
    post:
      tags:
      - Refunds
      summary: RefundPayment
      description: "Refunds a payment. You can refund the entire payment amount or\
        \ a \nportion of it."
      externalDocs:
        description: Refund a payment
        url: https://developer.squareup.com/docs/payments-api/refund-payments#refund-a-payment
      operationId: RefundPayment
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundPaymentRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundPaymentResponse'
      security:
      - oauth2:
        - PAYMENTS_WRITE
      x-release-status: PUBLIC
      x-endpoint-errors:
      - error-code: AMOUNT_TOO_HIGH
      - error-code: REFUND_DECLINED
  /v2/refunds/{refund_id}:
    get:
      tags:
      - Refunds
      summary: GetPaymentRefund
      description: Retrieves a specific `Refund` using the `refund_id`.
      externalDocs:
        description: Retrieve refund information
        url: https://developer.squareup.com/docs/payments-api/refund-payments#retrieve-refund-information
      operationId: GetPaymentRefund
      parameters:
      - name: refund_id
        in: path
        description: Unique ID for the desired `PaymentRefund`.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPaymentRefundResponse'
      security:
      - oauth2:
        - PAYMENTS_READ
      x-release-status: PUBLIC
  /v2/subscriptions:
    post:
      tags:
      - Subscriptions
      summary: CreateSubscription
      description: "Creates a subscription for a customer to a subscription plan.\n\
        \nIf you provide a card on file in the request, Square charges the card for\
        \ \nthe subscription. Otherwise, Square bills an invoice to the customer's\
        \ email \naddress. The subscription starts immediately, unless the request\
        \ includes \nthe optional `start_date`. Each individual subscription is associated\
        \ with a particular location."
      externalDocs:
        description: Subscriptions Guide
        url: https://developer.squareup.com/docs/subscriptions-api/overview#create-subscriptions
      operationId: CreateSubscription
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSubscriptionResponse'
      security:
      - oauth2:
        - CUSTOMERS_READ
        - PAYMENTS_WRITE
        - SUBSCRIPTIONS_WRITE
        - ITEMS_READ
        - ORDERS_WRITE
        - INVOICES_WRITE
      x-release-status: BETA
  /v2/subscriptions/search:
    post:
      tags:
      - Subscriptions
      summary: SearchSubscriptions
      description: "Searches for subscriptions. \nResults are ordered chronologically\
        \ by subscription creation date. If\nthe request specifies more than one location\
        \ ID, \nthe endpoint orders the result \nby location ID, and then by creation\
        \ date within each location. If no locations are given\nin the query, all\
        \ locations are searched.\n\nYou can also optionally specify `customer_ids`\
        \ to search by customer. \nIf left unset, all customers \nassociated with\
        \ the specified locations are returned. \nIf the request specifies customer\
        \ IDs, the endpoint orders results \nfirst by location, within location by\
        \ customer ID, and within \ncustomer by subscription creation date.\n\nFor\
        \ more information, see \n[Retrieve subscriptions](https://developer.squareup.com/docs/docs/subscriptions-api/overview#retrieve-subscriptions)."
      externalDocs:
        description: Subscriptions Guide
        url: https://developer.squareup.com/docs/subscriptions-api/overview#retrieve-subscriptions
      operationId: SearchSubscriptions
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSubscriptionsRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSubscriptionsResponse'
      security:
      - oauth2:
        - SUBSCRIPTIONS_READ
      x-release-status: BETA
  /v2/subscriptions/{subscription_id}:
    get:
      tags:
      - Subscriptions
      summary: RetrieveSubscription
      description: Retrieves a subscription.
      externalDocs:
        description: Subscriptions Guide
        url: https://developer.squareup.com/docs/subscriptions-api/overview#retrieve-subscriptions
      operationId: RetrieveSubscription
      parameters:
      - name: subscription_id
        in: path
        description: The ID of the subscription to retrieve.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveSubscriptionResponse'
      security:
      - oauth2:
        - SUBSCRIPTIONS_READ
      x-release-status: BETA
    put:
      tags:
      - Subscriptions
      summary: UpdateSubscription
      description: "Updates a subscription. You can set, modify, and clear the \n\
        `subscription` field values."
      externalDocs:
        description: Subscriptions Guide
        url: https://developer.squareup.com/docs/subscriptions-api/overview#update-subscriptions
      operationId: UpdateSubscription
      parameters:
      - name: subscription_id
        in: path
        description: The ID for the subscription to update.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSubscriptionResponse'
      security:
      - oauth2:
        - CUSTOMERS_READ
        - PAYMENTS_WRITE
        - SUBSCRIPTIONS_WRITE
        - ITEMS_READ
        - ORDERS_WRITE
        - INVOICES_WRITE
      x-release-status: BETA
  /v2/subscriptions/{subscription_id}/cancel:
    post:
      tags:
      - Subscriptions
      summary: CancelSubscription
      description: |-
        Sets the `canceled_date` field to the end of the active billing period.
        After this date, the status changes from ACTIVE to CANCELED.
      externalDocs:
        description: Subscriptions Guide
        url: https://developer.squareup.com/docs/subscriptions-api/overview#cancel-subscriptions
      operationId: CancelSubscription
      parameters:
      - name: subscription_id
        in: path
        description: The ID of the subscription to cancel.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelSubscriptionResponse'
      security:
      - oauth2:
        - SUBSCRIPTIONS_WRITE
      x-release-status: BETA
  /v2/subscriptions/{subscription_id}/events:
    get:
      tags:
      - Subscriptions
      summary: ListSubscriptionEvents
      description: |-
        Lists all events for a specific subscription.
        In the current implementation, only `START_SUBSCRIPTION` and `STOP_SUBSCRIPTION` (when the subscription was canceled) events are returned.
      externalDocs:
        description: Subscriptions Guide
        url: https://developer.squareup.com/docs/subscriptions-api/overview#subscription-events
      operationId: ListSubscriptionEvents
      parameters:
      - name: subscription_id
        in: path
        description: The ID of the subscription to retrieve the events for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cursor
        in: query
        description: |-
          A pagination cursor returned by a previous call to this endpoint.
          Provide this to retrieve the next set of results for the original query.

          For more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination).
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "The upper limit on the number of subscription events to return\
          \ \nin the response. \n\nDefault: `200`"
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSubscriptionEventsResponse'
      security:
      - oauth2:
        - SUBSCRIPTIONS_READ
      x-release-status: BETA
  /v2/team-members:
    post:
      tags:
      - Team
      summary: CreateTeamMember
      description: |-
        Creates a single `TeamMember` object. The `TeamMember` will be returned on successful creates.
        You must provide the following values in your request to this endpoint:
        - `first_name`
        - `last_name`
        Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/docs/team/troubleshooting#createteammember).
      operationId: CreateTeamMember
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTeamMemberRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTeamMemberResponse'
      security:
      - oauth2:
        - EMPLOYEES_WRITE
      x-release-status: PUBLIC
  /v2/team-members/bulk-create:
    post:
      tags:
      - Team
      summary: BulkCreateTeamMembers
      description: |-
        Creates multiple `TeamMember` objects. The created `TeamMember` objects will be returned on successful creates.
        This process is non-transactional and will process as much of the request as is possible. If one of the creates in
        the request cannot be successfully processed, the request will NOT be marked as failed, but the body of the response
        will contain explicit error information for this particular create.

        Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/docs/team/troubleshooting#bulkcreateteammembers).
      operationId: BulkCreateTeamMembers
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkCreateTeamMembersRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkCreateTeamMembersResponse'
      security:
      - oauth2:
        - EMPLOYEES_WRITE
      x-release-status: PUBLIC
  /v2/team-members/bulk-update:
    post:
      tags:
      - Team
      summary: BulkUpdateTeamMembers
      description: |-
        Updates multiple `TeamMember` objects. The updated `TeamMember` objects will be returned on successful updates.
        This process is non-transactional and will process as much of the request as is possible. If one of the updates in
        the request cannot be successfully processed, the request will NOT be marked as failed, but the body of the response
        will contain explicit error information for this particular update.
        Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/docs/team/troubleshooting#bulkupdateteammembers).
      operationId: BulkUpdateTeamMembers
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkUpdateTeamMembersRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkUpdateTeamMembersResponse'
      security:
      - oauth2:
        - EMPLOYEES_WRITE
      x-release-status: PUBLIC
  /v2/team-members/search:
    post:
      tags:
      - Team
      summary: SearchTeamMembers
      description: |-
        Returns a paginated list of `TeamMember` objects for a business.
        The list to be returned can be filtered by:
        - location IDs **and**
        - `is_active`
      operationId: SearchTeamMembers
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchTeamMembersRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchTeamMembersResponse'
      security:
      - oauth2:
        - EMPLOYEES_READ
      x-release-status: PUBLIC
  /v2/team-members/{team_member_id}:
    get:
      tags:
      - Team
      summary: RetrieveTeamMember
      description: |-
        Retrieve a `TeamMember` object for the given `TeamMember.id`
        Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/docs/team/troubleshooting#retrieveteammember).
      operationId: RetrieveTeamMember
      parameters:
      - name: team_member_id
        in: path
        description: The ID of the team member to retrieve.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveTeamMemberResponse'
      security:
      - oauth2:
        - EMPLOYEES_READ
      x-release-status: PUBLIC
    put:
      tags:
      - Team
      summary: UpdateTeamMember
      description: |-
        Updates a single `TeamMember` object. The `TeamMember` will be returned on successful updates.
        Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/docs/team/troubleshooting#updateteammember).
      operationId: UpdateTeamMember
      parameters:
      - name: team_member_id
        in: path
        description: The ID of the team member to update.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTeamMemberRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTeamMemberResponse'
      security:
      - oauth2:
        - EMPLOYEES_WRITE
      x-release-status: PUBLIC
  /v2/team-members/{team_member_id}/wage-setting:
    get:
      tags:
      - Team
      summary: RetrieveWageSetting
      description: |-
        Retrieve a `WageSetting` object for a team member specified
        by `TeamMember.id`.
        Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/docs/team/troubleshooting#retrievewagesetting).
      operationId: RetrieveWageSetting
      parameters:
      - name: team_member_id
        in: path
        description: The ID of the team member to retrieve wage setting for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveWageSettingResponse'
      security:
      - oauth2:
        - EMPLOYEES_READ
      x-release-status: PUBLIC
    put:
      tags:
      - Team
      summary: UpdateWageSetting
      description: |-
        Creates or updates a `WageSetting` object. The object is created if a
        `WageSetting` with the specified `team_member_id` does not exist. Otherwise,
        it fully replaces the `WageSetting` object for the team member.
        The `WageSetting` will be returned upon successful update.
        Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/docs/team/troubleshooting#updatewagesetting).
      operationId: UpdateWageSetting
      parameters:
      - name: team_member_id
        in: path
        description: The ID of the team member to update the `WageSetting` object
          for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWageSettingRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWageSettingResponse'
      security:
      - oauth2:
        - EMPLOYEES_WRITE
      x-release-status: PUBLIC
  /v2/terminals/checkouts:
    post:
      tags:
      - Terminal
      summary: CreateTerminalCheckout
      description: Creates a new Terminal checkout request and sends it to the specified
        device to take a payment for the requested amount.
      operationId: CreateTerminalCheckout
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTerminalCheckoutRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTerminalCheckoutResponse'
      security:
      - oauth2:
        - PAYMENTS_WRITE
      x-release-status: BETA
      x-endpoint-errors:
      - error-code: BAD_REQUEST
      - error-code: IDEMPOTENCY_KEY_REUSED
      - error-code: INVALID_VALUE
      - error-code: UNAUTHORIZED
  /v2/terminals/checkouts/search:
    post:
      tags:
      - Terminal
      summary: SearchTerminalCheckouts
      description: Retrieves a filtered list of Terminal checkout requests created
        by the account making the request.
      operationId: SearchTerminalCheckouts
      parameters: []
      requestBody:
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchTerminalCheckoutsRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchTerminalCheckoutsResponse'
      security:
      - oauth2:
        - PAYMENTS_READ
      x-release-status: BETA
      x-endpoint-errors:
      - error-code: BAD_REQUEST
      - error-code: INVALID_CURSOR
      - error-code: UNKNOWN_QUERY_PARAMETER
  /v2/terminals/checkouts/{checkout_id}:
    get:
      tags:
      - Terminal
      summary: GetTerminalCheckout
      description: Retrieves a Terminal checkout request by checkout_id.
      operationId: GetTerminalCheckout
      parameters:
      - name: checkout_id
        in: path
        description: Unique ID for the desired `TerminalCheckout`
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTerminalCheckoutResponse'
      security:
      - oauth2:
        - PAYMENTS_READ
      x-release-status: BETA
      x-endpoint-errors:
      - error-code: BAD_REQUEST
      - error-code: NOT_FOUND
  /v2/terminals/checkouts/{checkout_id}/cancel:
    post:
      tags:
      - Terminal
      summary: CancelTerminalCheckout
      description: Cancels a Terminal checkout request, if the status of the request
        permits it.
      operationId: CancelTerminalCheckout
      parameters:
      - name: checkout_id
        in: path
        description: Unique ID for the desired `TerminalCheckout`
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelTerminalCheckoutResponse'
      security:
      - oauth2:
        - PAYMENTS_WRITE
      x-release-status: BETA
      x-endpoint-errors:
      - error-code: BAD_REQUEST
      - error-code: NOT_FOUND
components:
  schemas:
    ActionCancelReason:
      type: string
      enum:
      - BUYER_CANCELED
      - SELLER_CANCELED
      - TIMED_OUT
      x-enum-elements:
      - name: BUYER_CANCELED
        description: A person canceled the `TerminalCheckout` from a Square device.
      - name: SELLER_CANCELED
        description: A client canceled the `TerminalCheckout` using the API.
      - name: TIMED_OUT
        description: The `TerminalCheckout` timed out (see `deadline_duration` on
          the `TerminalCheckout`).
      x-release-status: BETA
    BankAccountStatus:
      type: string
      description: Indicates the current verification status of a `BankAccount` object.
      enum:
      - VERIFICATION_IN_PROGRESS
      - VERIFIED
      - DISABLED
      x-enum-elements:
      - name: VERIFICATION_IN_PROGRESS
        description: |-
          Indicates that the verification process has started. Some features
          (for example, creditable or debitable) may be provisionally enabled on the bank
          account.
      - name: VERIFIED
        description: Indicates that the bank account was successfully verified.
      - name: DISABLED
        description: |-
          Indicates that the bank account is disabled and is permanently unusable
          for funds transfer. A bank account can be disabled because of a failed verification
          attempt or a failed deposit attempt.
      x-release-status: PUBLIC
    BankAccountType:
      type: string
      description: Indicates the financial purpose of the bank account.
      enum:
      - CHECKING
      - SAVINGS
      - INVESTMENT
      - OTHER
      - BUSINESS_CHECKING
      x-enum-elements:
      - name: CHECKING
        description: |-
          An account at a financial institution against which checks can be
          drawn by the account depositor.
      - name: SAVINGS
        description: |-
          An account at a financial institution that pays interest but cannot be
          used directly as money in the narrow sense of a medium of exchange.
      - name: INVESTMENT
        description: |-
          An account at a financial institution that contains a deposit of funds
          and/or securities.
      - name: OTHER
        description: |-
          An account at a financial institution which cannot be described by the
          other types.
      - name: BUSINESS_CHECKING
        description: |-
          An account at a financial institution against which checks can be
          drawn specifically for business purposes (non-personal use).
      x-release-status: PUBLIC
    BatchRequestHttpMethod:
      type: string
      description: Indicates the applicable HTTP method.
      enum:
      - GET
      - POST
      - PUT
      - DELETE
      x-enum-elements:
      - name: GET
        description: ""
      - name: POST
        description: ""
      - name: PUT
        description: ""
      - name: DELETE
        description: ""
      x-release-status: DEPRECATED
      x-visibility: DOC_ONLY
    CardBrand:
      type: string
      description: Indicates a card's brand, such as `VISA` or `MASTERCARD`.
      enum:
      - OTHER_BRAND
      - VISA
      - MASTERCARD
      - AMERICAN_EXPRESS
      - DISCOVER
      - DISCOVER_DINERS
      - JCB
      - CHINA_UNIONPAY
      - SQUARE_GIFT_CARD
      - SQUARE_CAPITAL_CARD
      - INTERAC
      - EFTPOS
      - FELICA
      x-enum-elements:
      - name: OTHER_BRAND
        description: ""
      - name: VISA
        description: ""
      - name: MASTERCARD
        description: ""
      - name: AMERICAN_EXPRESS
        description: ""
      - name: DISCOVER
        description: ""
      - name: DISCOVER_DINERS
        description: ""
      - name: JCB
        description: ""
      - name: CHINA_UNIONPAY
        description: ""
      - name: SQUARE_GIFT_CARD
        description: ""
      - name: SQUARE_CAPITAL_CARD
        description: ""
      - name: INTERAC
        description: ""
      - name: EFTPOS
        description: ""
      - name: FELICA
        description: ""
      x-release-status: PUBLIC
    CardPrepaidType:
      type: string
      description: Indicates a card's prepaid type, such as `NOT_PREPAID` or `PREPAID`.
      enum:
      - UNKNOWN_PREPAID_TYPE
      - NOT_PREPAID
      - PREPAID
      x-enum-elements:
      - name: UNKNOWN_PREPAID_TYPE
        description: ""
      - name: NOT_PREPAID
        description: ""
      - name: PREPAID
        description: ""
      x-release-status: BETA
    CardSquareProduct:
      type: string
      enum:
      - UNKNOWN_SQUARE_PRODUCT
      - CONNECT_API
      - DASHBOARD
      - REGISTER_CLIENT
      - BUYER_DASHBOARD
      - WEB
      - INVOICES
      - GIFT_CARD
      - VIRTUAL_TERMINAL
      - READER_SDK
      x-enum-elements:
      - name: UNKNOWN_SQUARE_PRODUCT
        description: ""
      - name: CONNECT_API
        description: ""
      - name: DASHBOARD
        description: ""
      - name: REGISTER_CLIENT
        description: ""
      - name: BUYER_DASHBOARD
        description: ""
      - name: WEB
        description: ""
      - name: INVOICES
        description: ""
      - name: GIFT_CARD
        description: ""
      - name: VIRTUAL_TERMINAL
        description: ""
      - name: READER_SDK
        description: ""
      x-release-status: PUBLIC
    CardType:
      type: string
      description: Indicates a card's type, such as `CREDIT` or `DEBIT`.
      enum:
      - UNKNOWN_CARD_TYPE
      - CREDIT
      - DEBIT
      x-enum-elements:
      - name: UNKNOWN_CARD_TYPE
        description: ""
      - name: CREDIT
        description: ""
      - name: DEBIT
        description: ""
      x-release-status: BETA
    CashDrawerEventType:
      type: string
      description: |-
        The types of events on a CashDrawerShift.
        Each event type represents an employee action on the actual cash drawer
        represented by a CashDrawerShift.
      enum:
      - NO_SALE
      - CASH_TENDER_PAYMENT
      - OTHER_TENDER_PAYMENT
      - CASH_TENDER_CANCELLED_PAYMENT
      - OTHER_TENDER_CANCELLED_PAYMENT
      - CASH_TENDER_REFUND
      - OTHER_TENDER_REFUND
      - PAID_IN
      - PAID_OUT
      x-enum-elements:
      - name: NO_SALE
        description: |-
          Triggered when a no sale occurs on a cash drawer.
          A CashDrawerEvent of this type must have a zero money amount.
      - name: CASH_TENDER_PAYMENT
        description: |-
          Triggered when a cash tender payment occurs on a cash drawer.
          A CashDrawerEvent of this type can must not have a negative amount.
      - name: OTHER_TENDER_PAYMENT
        description: |-
          Triggered when a check, gift card, or other non-cash payment occurs
          on a cash drawer.
          A CashDrawerEvent of this type must have a zero money amount.
      - name: CASH_TENDER_CANCELLED_PAYMENT
        description: |-
          Triggered when a split tender bill is cancelled after cash has been
          tendered.
          A CASH_TENDER_CANCELLED_PAYMENT should have a corresponding CASH_TENDER_PAYMENT.
          A CashDrawerEvent of this type must not have a negative amount.
      - name: OTHER_TENDER_CANCELLED_PAYMENT
        description: |-
          Triggered when a split tender bill is cancelled after a non-cash tender
          has been tendered. An OTHER_TENDER_CANCELLED_PAYMENT should have a corresponding
          OTHER_TENDER_PAYMENT. A CashDrawerEvent of this type must have a zero money
          amount.
      - name: CASH_TENDER_REFUND
        description: |-
          Triggered when a cash tender refund occurs.
          A CashDrawerEvent of this type must not have a negative amount.
      - name: OTHER_TENDER_REFUND
        description: |-
          Triggered when an other tender refund occurs.
          A CashDrawerEvent of this type must have a zero money amount.
      - name: PAID_IN
        description: |-
          Triggered when money unrelated to a payment is added to the cash drawer.
          For example, an employee adds coins to the drawer.
          A CashDrawerEvent of this type must not have a negative amount.
      - name: PAID_OUT
        description: |-
          Triggered when money is removed from the drawer for other reasons
          than making change.
          For example, an employee pays a delivery person with cash from the cash drawer.
          A CashDrawerEvent of this type must not have a negative amount.
      x-release-status: PUBLIC
    CashDrawerShiftState:
      type: string
      description: The current state of a cash drawer shift.
      enum:
      - OPEN
      - ENDED
      - CLOSED
      x-enum-elements:
      - name: OPEN
        description: An open cash drawer shift.
      - name: ENDED
        description: A cash drawer shift that is ended but has not yet had an employee
          content audit.
      - name: CLOSED
        description: |-
          An ended cash drawer shift that is closed with a completed employee
          content audit and recorded result.
      x-release-status: PUBLIC
    CatalogCustomAttributeDefinitionAppVisibility:
      type: string
      description: |-
        Defines the visibility of a custom attribute to applications other than their
        creating application.
      enum:
      - APP_VISIBILITY_HIDDEN
      - APP_VISIBILITY_READ_ONLY
      - APP_VISIBILITY_READ_WRITE_VALUES
      x-enum-elements:
      - name: APP_VISIBILITY_HIDDEN
        description: Other applications cannot read this custom attribute.
      - name: APP_VISIBILITY_READ_ONLY
        description: |-
          Other applications can read this custom attribute definition and
          values.
      - name: APP_VISIBILITY_READ_WRITE_VALUES
        description: |-
          Other applications can read and write custom attribute values on objects.
          They can read but cannot edit the custom attribute definition.
      x-release-status: BETA
    CatalogCustomAttributeDefinitionSellerVisibility:
      type: string
      description: |-
        Defines the visibility of a custom attribute to sellers in Square
        client applications, Square APIs or in Square UIs (including Square Point
        of Sale applications and Square Dashboard).
      enum:
      - SELLER_VISIBILITY_HIDDEN
      - SELLER_VISIBILITY_READ_WRITE_VALUES
      x-enum-elements:
      - name: SELLER_VISIBILITY_HIDDEN
        description: |-
          Sellers cannot read this custom attribute in Square client
          applications or Square APIs.
      - name: SELLER_VISIBILITY_READ_WRITE_VALUES
        description: |-
          Sellers can read and write this custom attribute value in catalog objects,
          but cannot edit the custom attribute definition.
      x-release-status: BETA
    CatalogCustomAttributeDefinitionType:
      type: string
      description: Defines the possible types for a custom attribute.
      enum:
      - STRING
      - BOOLEAN
      - NUMBER
      - SELECTION
      x-enum-elements:
      - name: STRING
        description: A free-form string containing up to 255 characters.
      - name: BOOLEAN
        description: A `true` or `false` value.
      - name: NUMBER
        description: A decimal string representation of a number. Can support up to
          5 digits after the decimal point.
      - name: SELECTION
        description: One or more choices from `allowed_selections`.
      x-release-status: BETA
    CatalogDiscountModifyTaxBasis:
      type: string
      enum:
      - MODIFY_TAX_BASIS
      - DO_NOT_MODIFY_TAX_BASIS
      x-enum-elements:
      - name: MODIFY_TAX_BASIS
        description: Application of the discount will modify the tax basis.
      - name: DO_NOT_MODIFY_TAX_BASIS
        description: Application of the discount will not modify the tax basis.
      x-release-status: PUBLIC
    CatalogDiscountType:
      type: string
      description: How to apply a CatalogDiscount to a CatalogItem.
      enum:
      - FIXED_PERCENTAGE
      - FIXED_AMOUNT
      - VARIABLE_PERCENTAGE
      - VARIABLE_AMOUNT
      x-enum-elements:
      - name: FIXED_PERCENTAGE
        description: Apply the discount as a fixed percentage (e.g., 5%) off the item
          price.
      - name: FIXED_AMOUNT
        description: Apply the discount as a fixed amount (e.g., $1.00) off the item
          price.
      - name: VARIABLE_PERCENTAGE
        description: Apply the discount as a variable percentage off the item price.
          The percentage will be specified at the time of sale.
      - name: VARIABLE_AMOUNT
        description: Apply the discount as a variable amount off the item price. The
          amount will be specified at the time of sale.
      x-release-status: PUBLIC
    CatalogItemProductType:
      type: string
      description: The type of a CatalogItem. Connect V2 only allows the creation
        of `REGULAR` or `APPOINTMENTS_SERVICE` items.
      enum:
      - REGULAR
      - GIFT_CARD
      - APPOINTMENTS_SERVICE
      x-enum-elements:
      - name: REGULAR
        description: An ordinary item.
      - name: GIFT_CARD
        description: A Square gift card.
      - name: APPOINTMENTS_SERVICE
        description: A service that can be booked using the Square Appointments app.
      x-release-status: PUBLIC
    CatalogModifierListSelectionType:
      type: string
      description: Indicates whether a CatalogModifierList supports multiple selections.
      enum:
      - SINGLE
      - MULTIPLE
      x-enum-elements:
      - name: SINGLE
        description: |-
          Indicates that a CatalogModifierList allows only a
          single CatalogModifier to be selected.
      - name: MULTIPLE
        description: |-
          Indicates that a CatalogModifierList allows multiple
          CatalogModifier to be selected.
      x-release-status: PUBLIC
    CatalogObjectType:
      type: string
      description: |-
        Possible types of CatalogObjects returned from the Catalog, each
        containing type-specific properties in the `*_data` field corresponding to the object type.
      enum:
      - ITEM
      - IMAGE
      - CATEGORY
      - ITEM_VARIATION
      - TAX
      - DISCOUNT
      - MODIFIER_LIST
      - MODIFIER
      - PRICING_RULE
      - PRODUCT_SET
      - TIME_PERIOD
      - MEASUREMENT_UNIT
      - SUBSCRIPTION_PLAN
      - ITEM_OPTION
      - ITEM_OPTION_VAL
      - CUSTOM_ATTRIBUTE_DEFINITION
      - QUICK_AMOUNTS_SETTINGS
      x-enum-elements:
      - name: ITEM
        description: |-
          An item, corresponding to `CatalogItem`. The item-specific data
          will be stored in the `item_data` field.
      - name: IMAGE
        description: |-
          An image, corresponding to `CatalogImage`. The image-specific data
          will be stored in the `image_data` field.
      - name: CATEGORY
        description: |-
          A category, corresponding to `CatalogCategory`. The category-specific data
          will be stored in the `category_data` field.
      - name: ITEM_VARIATION
        description: |-
          An item variation, corresponding to `CatalogItemVariation`. The
          item variation-specific data will be stored in the `item_variation_data` field.
      - name: TAX
        description: |-
          A tax, corresponding to `CatalogTax`. The tax-specific data
          will be stored in the `tax_data` field.
      - name: DISCOUNT
        description: |-
          A discount, corresponding to `CatalogDiscount`. The discount-specific data
          will be stored in the `discount_data` field.
      - name: MODIFIER_LIST
        description: |-
          A modifier list, corresponding to `CatalogModifierList`.
          The modifier list-specific data will be stored in the `modifier_list_data` field.
      - name: MODIFIER
        description: |-
          A modifier, corresponding to `CatalogModifier`. The modifier-specific data
          will be stored in the `modifier_data` field.
      - name: PRICING_RULE
        description: |-
          A pricing rule, corresponding to `CatalogPricingRule`. The pricing-rule-specific data
          will be stored in the `pricing_rule_data` field.
      - name: PRODUCT_SET
        description: |-
          A product set, corresponding to `CatalogProductSet`.
          The product-set-specific data will be stored in the `product_set_data` field.
      - name: TIME_PERIOD
        description: |-
          A time period, corresponding to `CatalogTimePeriod`.
          The time-period-specific data will be stored in the `time_period_data` field.
      - name: MEASUREMENT_UNIT
        description: |-
          A measurement unit, corresponding to `CatalogMeasurementUnit`. The unit of
          measure and precision in which an item variation should be sold.
      - name: SUBSCRIPTION_PLAN
        description: "A subscription plan, corresponding to \n[CatalogSubscriptionPlan](#type-CatalogSubscriptionPlan).\n\
          \nThe subscription plan data is stored in the `subscription_plan_data` field\
          \ of the \n[CatalogObject](#type-CatalogObject)."
      - name: ITEM_OPTION
        description: |-
          Represents a list of item option values that can be assigned to item
          variations. For example, a color option or size option for a t-shirt.
      - name: ITEM_OPTION_VAL
        description: |-
          Represents an option value associated with one or more item options.
          For example, an item option of "Size" may have item option values such as
          “Small" or "Medium".
      - name: CUSTOM_ATTRIBUTE_DEFINITION
        description: Represents the definition of a custom attribute
      - name: QUICK_AMOUNTS_SETTINGS
        description: |-
          Represents a set of Quick Amounts and their settings at each location.
          For example, a location may have a list of both AUTO and MANUAL quick amounts that are set to DISABLED.
      x-release-status: PUBLIC
    CatalogPricingType:
      type: string
      description: Indicates whether the price of a CatalogItemVariation should be
        entered manually at the time of sale.
      enum:
      - FIXED_PRICING
      - VARIABLE_PRICING
      x-enum-elements:
      - name: FIXED_PRICING
        description: The catalog item variation's price is fixed.
      - name: VARIABLE_PRICING
        description: The catalog item variation's price is entered at the time of
          sale.
      x-release-status: PUBLIC
    CatalogQuickAmountType:
      type: string
      description: Determines the type of a specific Quick Amount.
      enum:
      - QUICK_AMOUNT_TYPE_MANUAL
      - QUICK_AMOUNT_TYPE_AUTO
      x-enum-elements:
      - name: QUICK_AMOUNT_TYPE_MANUAL
        description: Quick Amount is created manually by the seller.
      - name: QUICK_AMOUNT_TYPE_AUTO
        description: Quick Amount is generated automatically by machine learning algorithms.
      x-release-status: BETA
    CatalogQuickAmountsSettingsOption:
      type: string
      description: Determines a seller's option on Quick Amounts feature.
      enum:
      - DISABLED
      - MANUAL
      - AUTO
      x-enum-elements:
      - name: DISABLED
        description: Option for seller to disable Quick Amounts.
      - name: MANUAL
        description: Option for seller to choose manually created Quick Amounts.
      - name: AUTO
        description: Option for seller to choose automatically created Quick Amounts.
      x-release-status: BETA
    Country:
      type: string
      description: |-
        Indicates the country associated with another entity, such as a business.
        Values are in [ISO 3166-1-alpha-2 format](http://www.iso.org/iso/home/standards/country_codes.htm).
      enum:
      - ZZ
      - AD
      - AE
      - AF
      - AG
      - AI
      - AL
      - AM
      - AO
      - AQ
      - AR
      - AS
      - AT
      - AU
      - AW
      - AX
      - AZ
      - BA
      - BB
      - BD
      - BE
      - BF
      - BG
      - BH
      - BI
      - BJ
      - BL
      - BM
      - BN
      - BO
      - BQ
      - BR
      - BS
      - BT
      - BV
      - BW
      - BY
      - BZ
      - CA
      - CC
      - CD
      - CF
      - CG
      - CH
      - CI
      - CK
      - CL
      - CM
      - CN
      - CO
      - CR
      - CU
      - CV
      - CW
      - CX
      - CY
      - CZ
      - DE
      - DJ
      - DK
      - DM
      - DO
      - DZ
      - EC
      - EE
      - EG
      - EH
      - ER
      - ES
      - ET
      - FI
      - FJ
      - FK
      - FM
      - FO
      - FR
      - GA
      - GB
      - GD
      - GE
      - GF
      - GG
      - GH
      - GI
      - GL
      - GM
      - GN
      - GP
      - GQ
      - GR
      - GS
      - GT
      - GU
      - GW
      - GY
      - HK
      - HM
      - HN
      - HR
      - HT
      - HU
      - ID
      - IE
      - IL
      - IM
      - IN
      - IO
      - IQ
      - IR
      - IS
      - IT
      - JE
      - JM
      - JO
      - JP
      - KE
      - KG
      - KH
      - KI
      - KM
      - KN
      - KP
      - KR
      - KW
      - KY
      - KZ
      - LA
      - LB
      - LC
      - LI
      - LK
      - LR
      - LS
      - LT
      - LU
      - LV
      - LY
      - MA
      - MC
      - MD
      - ME
      - MF
      - MG
      - MH
      - MK
      - ML
      - MM
      - MN
      - MO
      - MP
      - MQ
      - MR
      - MS
      - MT
      - MU
      - MV
      - MW
      - MX
      - MY
      - MZ
      - NA
      - NC
      - NE
      - NF
      - NG
      - NI
      - NL
      - "NO"
      - NP
      - NR
      - NU
      - NZ
      - OM
      - PA
      - PE
      - PF
      - PG
      - PH
      - PK
      - PL
      - PM
      - PN
      - PR
      - PS
      - PT
      - PW
      - PY
      - QA
      - RE
      - RO
      - RS
      - RU
      - RW
      - SA
      - SB
      - SC
      - SD
      - SE
      - SG
      - SH
      - SI
      - SJ
      - SK
      - SL
      - SM
      - SN
      - SO
      - SR
      - SS
      - ST
      - SV
      - SX
      - SY
      - SZ
      - TC
      - TD
      - TF
      - TG
      - TH
      - TJ
      - TK
      - TL
      - TM
      - TN
      - TO
      - TR
      - TT
      - TV
      - TW
      - TZ
      - UA
      - UG
      - UM
      - US
      - UY
      - UZ
      - VA
      - VC
      - VE
      - VG
      - VI
      - VN
      - VU
      - WF
      - WS
      - YE
      - YT
      - ZA
      - ZM
      - ZW
      x-enum-elements:
      - name: ZZ
        description: Unknown
      - name: AD
        description: Andorra
      - name: AE
        description: United Arab Emirates
      - name: AF
        description: Afghanistan
      - name: AG
        description: Antigua and Barbuda
      - name: AI
        description: Anguilla
      - name: AL
        description: Albania
      - name: AM
        description: Armenia
      - name: AO
        description: Angola
      - name: AQ
        description: Antartica
      - name: AR
        description: Argentina
      - name: AS
        description: American Samoa
      - name: AT
        description: Austria
      - name: AU
        description: Australia
      - name: AW
        description: Aruba
      - name: AX
        description: Åland Islands
      - name: AZ
        description: Azerbaijan
      - name: BA
        description: Bosnia and Herzegovina
      - name: BB
        description: Barbados
      - name: BD
        description: Bangladesh
      - name: BE
        description: Belgium
      - name: BF
        description: Burkina Faso
      - name: BG
        description: Bulgaria
      - name: BH
        description: Bahrain
      - name: BI
        description: Burundi
      - name: BJ
        description: Benin
      - name: BL
        description: Saint Barthélemy
      - name: BM
        description: Bermuda
      - name: BN
        description: Brunei
      - name: BO
        description: Bolivia
      - name: BQ
        description: Bonaire
      - name: BR
        description: Brazil
      - name: BS
        description: Bahamas
      - name: BT
        description: Bhutan
      - name: BV
        description: Bouvet Island
      - name: BW
        description: Botswana
      - name: BY
        description: Belarus
      - name: BZ
        description: Belize
      - name: CA
        description: Canada
      - name: CC
        description: Cocos Islands
      - name: CD
        description: Democratic Republic of the Congo
      - name: CF
        description: Central African Republic
      - name: CG
        description: Congo
      - name: CH
        description: Switzerland
      - name: CI
        description: Ivory Coast
      - name: CK
        description: Cook Islands
      - name: CL
        description: Chile
      - name: CM
        description: Cameroon
      - name: CN
        description: China
      - name: CO
        description: Colombia
      - name: CR
        description: Costa Rica
      - name: CU
        description: Cuba
      - name: CV
        description: Cabo Verde
      - name: CW
        description: Curaçao
      - name: CX
        description: Christmas Island
      - name: CY
        description: Cyprus
      - name: CZ
        description: Czechia
      - name: DE
        description: Germany
      - name: DJ
        description: Djibouti
      - name: DK
        description: Denmark
      - name: DM
        description: Dominica
      - name: DO
        description: Dominican Republic
      - name: DZ
        description: Algeria
      - name: EC
        description: Ecuador
      - name: EE
        description: Estonia
      - name: EG
        description: Egypt
      - name: EH
        description: Western Sahara
      - name: ER
        description: Eritrea
      - name: ES
        description: Spain
      - name: ET
        description: Ethiopia
      - name: FI
        description: Finland
      - name: FJ
        description: Fiji
      - name: FK
        description: Falkland Islands
      - name: FM
        description: Federated States of Micronesia
      - name: FO
        description: Faroe Islands
      - name: FR
        description: France
      - name: GA
        description: Gabon
      - name: GB
        description: United Kingdom
      - name: GD
        description: Grenada
      - name: GE
        description: Georgia
      - name: GF
        description: French Guiana
      - name: GG
        description: Guernsey
      - name: GH
        description: Ghana
      - name: GI
        description: Gibraltar
      - name: GL
        description: Greenland
      - name: GM
        description: Gambia
      - name: GN
        description: Guinea
      - name: GP
        description: Guadeloupe
      - name: GQ
        description: Equatorial Guinea
      - name: GR
        description: Greece
      - name: GS
        description: South Georgia and the South Sandwich Islands
      - name: GT
        description: Guatemala
      - name: GU
        description: Guam
      - name: GW
        description: Guinea-Bissau
      - name: GY
        description: Guyana
      - name: HK
        description: Hong Kong
      - name: HM
        description: Heard Island and McDonald Islands
      - name: HN
        description: Honduras
      - name: HR
        description: Croatia
      - name: HT
        description: Haiti
      - name: HU
        description: Hungary
      - name: ID
        description: Indonesia
      - name: IE
        description: Ireland
      - name: IL
        description: Israel
      - name: IM
        description: Isle of Man
      - name: IN
        description: India
      - name: IO
        description: British Indian Ocean Territory
      - name: IQ
        description: Iraq
      - name: IR
        description: Iran
      - name: IS
        description: Iceland
      - name: IT
        description: Italy
      - name: JE
        description: Jersey
      - name: JM
        description: Jamaica
      - name: JO
        description: Jordan
      - name: JP
        description: Japan
      - name: KE
        description: Kenya
      - name: KG
        description: Kyrgyzstan
      - name: KH
        description: Cambodia
      - name: KI
        description: Kiribati
      - name: KM
        description: Comoros
      - name: KN
        description: Saint Kitts and Nevis
      - name: KP
        description: Democratic People's Republic of Korea
      - name: KR
        description: Republic of Korea
      - name: KW
        description: Kuwait
      - name: KY
        description: Cayman Islands
      - name: KZ
        description: Kazakhstan
      - name: LA
        description: Lao People's Democratic Republic
      - name: LB
        description: Lebanon
      - name: LC
        description: Saint Lucia
      - name: LI
        description: Liechtenstein
      - name: LK
        description: Sri Lanka
      - name: LR
        description: Liberia
      - name: LS
        description: Lesotho
      - name: LT
        description: Lithuania
      - name: LU
        description: Luxembourg
      - name: LV
        description: Latvia
      - name: LY
        description: Libya
      - name: MA
        description: Morocco
      - name: MC
        description: Monaco
      - name: MD
        description: Moldova
      - name: ME
        description: Montenegro
      - name: MF
        description: Saint Martin
      - name: MG
        description: Madagascar
      - name: MH
        description: Marshall Islands
      - name: MK
        description: North Macedonia
      - name: ML
        description: Mali
      - name: MM
        description: Myanmar
      - name: MN
        description: Mongolia
      - name: MO
        description: Macao
      - name: MP
        description: Northern Mariana Islands
      - name: MQ
        description: Martinique
      - name: MR
        description: Mauritania
      - name: MS
        description: Montserrat
      - name: MT
        description: Malta
      - name: MU
        description: Mauritius
      - name: MV
        description: Maldives
      - name: MW
        description: Malawi
      - name: MX
        description: Mexico
      - name: MY
        description: Malaysia
      - name: MZ
        description: Mozambique
      - name: NA
        description: Namibia
      - name: NC
        description: New Caledonia
      - name: NE
        description: Niger
      - name: NF
        description: Norfolk Island
      - name: NG
        description: Nigeria
      - name: NI
        description: Nicaragua
      - name: NL
        description: Netherlands
      - name: "NO"
        description: Norway
      - name: NP
        description: Nepal
      - name: NR
        description: Nauru
      - name: NU
        description: Niue
      - name: NZ
        description: New Zealand
      - name: OM
        description: Oman
      - name: PA
        description: Panama
      - name: PE
        description: Peru
      - name: PF
        description: French Polynesia
      - name: PG
        description: Papua New Guinea
      - name: PH
        description: Philippines
      - name: PK
        description: Pakistan
      - name: PL
        description: Poland
      - name: PM
        description: Saint Pierre and Miquelon
      - name: PN
        description: Pitcairn
      - name: PR
        description: Puerto Rico
      - name: PS
        description: Palestine
      - name: PT
        description: Portugal
      - name: PW
        description: Palau
      - name: PY
        description: Paraguay
      - name: QA
        description: Qatar
      - name: RE
        description: Réunion
      - name: RO
        description: Romania
      - name: RS
        description: Serbia
      - name: RU
        description: Russia
      - name: RW
        description: Rwanda
      - name: SA
        description: Saudi Arabia
      - name: SB
        description: Solomon Islands
      - name: SC
        description: Seychelles
      - name: SD
        description: Sudan
      - name: SE
        description: Sweden
      - name: SG
        description: Singapore
      - name: SH
        description: Saint Helena, Ascension and Tristan da Cunha
      - name: SI
        description: Slovenia
      - name: SJ
        description: Svalbard and Jan Mayen
      - name: SK
        description: Slovakia
      - name: SL
        description: Sierra Leone
      - name: SM
        description: San Marino
      - name: SN
        description: Senegal
      - name: SO
        description: Somalia
      - name: SR
        description: Suriname
      - name: SS
        description: South Sudan
      - name: ST
        description: Sao Tome and Principe
      - name: SV
        description: El Salvador
      - name: SX
        description: Sint Maarten
      - name: SY
        description: Syrian Arab Republic
      - name: SZ
        description: Eswatini
      - name: TC
        description: Turks and Caicos Islands
      - name: TD
        description: Chad
      - name: TF
        description: French Southern Territories
      - name: TG
        description: Togo
      - name: TH
        description: Thailand
      - name: TJ
        description: Tajikistan
      - name: TK
        description: Tokelau
      - name: TL
        description: Timor-Leste
      - name: TM
        description: Turkmenistan
      - name: TN
        description: Tunisia
      - name: TO
        description: Tonga
      - name: TR
        description: Turkey
      - name: TT
        description: Trinidad and Tobago
      - name: TV
        description: Tuvalu
      - name: TW
        description: Taiwan
      - name: TZ
        description: Tanzania
      - name: UA
        description: Ukraine
      - name: UG
        description: Uganda
      - name: UM
        description: United States Minor Outlying Islands
      - name: US
        description: United States of America
      - name: UY
        description: Uruguay
      - name: UZ
        description: Uzbekistan
      - name: VA
        description: Vatican City
      - name: VC
        description: Saint Vincent and the Grenadines
      - name: VE
        description: Venezuela
      - name: VG
        description: British Virgin Islands
      - name: VI
        description: U.S. Virgin Islands
      - name: VN
        description: Vietnam
      - name: VU
        description: Vanuatu
      - name: WF
        description: Wallis and Futuna
      - name: WS
        description: Samoa
      - name: YE
        description: Yemen
      - name: YT
        description: Mayotte
      - name: ZA
        description: South Africa
      - name: ZM
        description: Zambia
      - name: ZW
        description: Zimbabwe
      x-release-status: PUBLIC
    Currency:
      type: string
      description: |-
        Indicates the associated currency for an amount of money. Values correspond
        to [ISO 4217](https://wikipedia.org/wiki/ISO_4217).
      enum:
      - UNKNOWN_CURRENCY
      - AED
      - AFN
      - ALL
      - AMD
      - ANG
      - AOA
      - ARS
      - AUD
      - AWG
      - AZN
      - BAM
      - BBD
      - BDT
      - BGN
      - BHD
      - BIF
      - BMD
      - BND
      - BOB
      - BOV
      - BRL
      - BSD
      - BTN
      - BWP
      - BYR
      - BZD
      - CAD
      - CDF
      - CHE
      - CHF
      - CHW
      - CLF
      - CLP
      - CNY
      - COP
      - COU
      - CRC
      - CUC
      - CUP
      - CVE
      - CZK
      - DJF
      - DKK
      - DOP
      - DZD
      - EGP
      - ERN
      - ETB
      - EUR
      - FJD
      - FKP
      - GBP
      - GEL
      - GHS
      - GIP
      - GMD
      - GNF
      - GTQ
      - GYD
      - HKD
      - HNL
      - HRK
      - HTG
      - HUF
      - IDR
      - ILS
      - INR
      - IQD
      - IRR
      - ISK
      - JMD
      - JOD
      - JPY
      - KES
      - KGS
      - KHR
      - KMF
      - KPW
      - KRW
      - KWD
      - KYD
      - KZT
      - LAK
      - LBP
      - LKR
      - LRD
      - LSL
      - LTL
      - LVL
      - LYD
      - MAD
      - MDL
      - MGA
      - MKD
      - MMK
      - MNT
      - MOP
      - MRO
      - MUR
      - MVR
      - MWK
      - MXN
      - MXV
      - MYR
      - MZN
      - NAD
      - NGN
      - NIO
      - NOK
      - NPR
      - NZD
      - OMR
      - PAB
      - PEN
      - PGK
      - PHP
      - PKR
      - PLN
      - PYG
      - QAR
      - RON
      - RSD
      - RUB
      - RWF
      - SAR
      - SBD
      - SCR
      - SDG
      - SEK
      - SGD
      - SHP
      - SLL
      - SOS
      - SRD
      - SSP
      - STD
      - SVC
      - SYP
      - SZL
      - THB
      - TJS
      - TMT
      - TND
      - TOP
      - TRY
      - TTD
      - TWD
      - TZS
      - UAH
      - UGX
      - USD
      - USN
      - USS
      - UYI
      - UYU
      - UZS
      - VEF
      - VND
      - VUV
      - WST
      - XAF
      - XAG
      - XAU
      - XBA
      - XBB
      - XBC
      - XBD
      - XCD
      - XDR
      - XOF
      - XPD
      - XPF
      - XPT
      - XTS
      - XXX
      - YER
      - ZAR
      - ZMK
      - ZMW
      - BTC
      x-enum-elements:
      - name: UNKNOWN_CURRENCY
        description: Unknown currency
      - name: AED
        description: United Arab Emirates dirham
      - name: AFN
        description: Afghan afghani
      - name: ALL
        description: Albanian lek
      - name: AMD
        description: Armenian dram
      - name: ANG
        description: Netherlands Antillean guilder
      - name: AOA
        description: Angolan kwanza
      - name: ARS
        description: Argentine peso
      - name: AUD
        description: Australian dollar
      - name: AWG
        description: Aruban florin
      - name: AZN
        description: Azerbaijani manat
      - name: BAM
        description: Bosnia and Herzegovina convertible mark
      - name: BBD
        description: Barbados dollar
      - name: BDT
        description: Bangladeshi taka
      - name: BGN
        description: Bulgarian lev
      - name: BHD
        description: Bahraini dinar
      - name: BIF
        description: Burundian franc
      - name: BMD
        description: Bermudian dollar
      - name: BND
        description: Brunei dollar
      - name: BOB
        description: Boliviano
      - name: BOV
        description: Bolivian Mvdol
      - name: BRL
        description: Brazilian real
      - name: BSD
        description: Bahamian dollar
      - name: BTN
        description: Bhutanese ngultrum
      - name: BWP
        description: Botswana pula
      - name: BYR
        description: Belarusian ruble
      - name: BZD
        description: Belize dollar
      - name: CAD
        description: Canadian dollar
      - name: CDF
        description: Congolese franc
      - name: CHE
        description: WIR Euro
      - name: CHF
        description: Swiss franc
      - name: CHW
        description: WIR Franc
      - name: CLF
        description: Unidad de Fomento
      - name: CLP
        description: Chilean peso
      - name: CNY
        description: Chinese yuan
      - name: COP
        description: Colombian peso
      - name: COU
        description: Unidad de Valor Real
      - name: CRC
        description: Costa Rican colon
      - name: CUC
        description: Cuban convertible peso
      - name: CUP
        description: Cuban peso
      - name: CVE
        description: Cape Verdean escudo
      - name: CZK
        description: Czech koruna
      - name: DJF
        description: Djiboutian franc
      - name: DKK
        description: Danish krone
      - name: DOP
        description: Dominican peso
      - name: DZD
        description: Algerian dinar
      - name: EGP
        description: Egyptian pound
      - name: ERN
        description: Eritrean nakfa
      - name: ETB
        description: Ethiopian birr
      - name: EUR
        description: Euro
      - name: FJD
        description: Fiji dollar
      - name: FKP
        description: Falkland Islands pound
      - name: GBP
        description: Pound sterling
      - name: GEL
        description: Georgian lari
      - name: GHS
        description: Ghanaian cedi
      - name: GIP
        description: Gibraltar pound
      - name: GMD
        description: Gambian dalasi
      - name: GNF
        description: Guinean franc
      - name: GTQ
        description: Guatemalan quetzal
      - name: GYD
        description: Guyanese dollar
      - name: HKD
        description: Hong Kong dollar
      - name: HNL
        description: Honduran lempira
      - name: HRK
        description: Croatian kuna
      - name: HTG
        description: Haitian gourde
      - name: HUF
        description: Hungarian forint
      - name: IDR
        description: Indonesian rupiah
      - name: ILS
        description: Israeli new shekel
      - name: INR
        description: Indian rupee
      - name: IQD
        description: Iraqi dinar
      - name: IRR
        description: Iranian rial
      - name: ISK
        description: Icelandic króna
      - name: JMD
        description: Jamaican dollar
      - name: JOD
        description: Jordanian dinar
      - name: JPY
        description: Japanese yen
      - name: KES
        description: Kenyan shilling
      - name: KGS
        description: Kyrgyzstani som
      - name: KHR
        description: Cambodian riel
      - name: KMF
        description: Comoro franc
      - name: KPW
        description: North Korean won
      - name: KRW
        description: South Korean won
      - name: KWD
        description: Kuwaiti dinar
      - name: KYD
        description: Cayman Islands dollar
      - name: KZT
        description: Kazakhstani tenge
      - name: LAK
        description: Lao kip
      - name: LBP
        description: Lebanese pound
      - name: LKR
        description: Sri Lankan rupee
      - name: LRD
        description: Liberian dollar
      - name: LSL
        description: Lesotho loti
      - name: LTL
        description: Lithuanian litas
      - name: LVL
        description: Latvian lats
      - name: LYD
        description: Libyan dinar
      - name: MAD
        description: Moroccan dirham
      - name: MDL
        description: Moldovan leu
      - name: MGA
        description: Malagasy ariary
      - name: MKD
        description: Macedonian denar
      - name: MMK
        description: Myanmar kyat
      - name: MNT
        description: Mongolian tögrög
      - name: MOP
        description: Macanese pataca
      - name: MRO
        description: Mauritanian ouguiya
      - name: MUR
        description: Mauritian rupee
      - name: MVR
        description: Maldivian rufiyaa
      - name: MWK
        description: Malawian kwacha
      - name: MXN
        description: Mexican peso
      - name: MXV
        description: Mexican Unidad de Inversion
      - name: MYR
        description: Malaysian ringgit
      - name: MZN
        description: Mozambican metical
      - name: NAD
        description: Namibian dollar
      - name: NGN
        description: Nigerian naira
      - name: NIO
        description: Nicaraguan córdoba
      - name: NOK
        description: Norwegian krone
      - name: NPR
        description: Nepalese rupee
      - name: NZD
        description: New Zealand dollar
      - name: OMR
        description: Omani rial
      - name: PAB
        description: Panamanian balboa
      - name: PEN
        description: Peruvian sol
      - name: PGK
        description: Papua New Guinean kina
      - name: PHP
        description: Philippine peso
      - name: PKR
        description: Pakistani rupee
      - name: PLN
        description: Polish złoty
      - name: PYG
        description: Paraguayan guaraní
      - name: QAR
        description: Qatari riyal
      - name: RON
        description: Romanian leu
      - name: RSD
        description: Serbian dinar
      - name: RUB
        description: Russian ruble
      - name: RWF
        description: Rwandan franc
      - name: SAR
        description: Saudi riyal
      - name: SBD
        description: Solomon Islands dollar
      - name: SCR
        description: Seychelles rupee
      - name: SDG
        description: Sudanese pound
      - name: SEK
        description: Swedish krona
      - name: SGD
        description: Singapore dollar
      - name: SHP
        description: Saint Helena pound
      - name: SLL
        description: Sierra Leonean leone
      - name: SOS
        description: Somali shilling
      - name: SRD
        description: Surinamese dollar
      - name: SSP
        description: South Sudanese pound
      - name: STD
        description: São Tomé and Príncipe dobra
      - name: SVC
        description: Salvadoran colón
      - name: SYP
        description: Syrian pound
      - name: SZL
        description: Swazi lilangeni
      - name: THB
        description: Thai baht
      - name: TJS
        description: Tajikstani somoni
      - name: TMT
        description: Turkmenistan manat
      - name: TND
        description: Tunisian dinar
      - name: TOP
        description: Tongan pa'anga
      - name: TRY
        description: Turkish lira
      - name: TTD
        description: Trinidad and Tobago dollar
      - name: TWD
        description: New Taiwan dollar
      - name: TZS
        description: Tanzanian shilling
      - name: UAH
        description: Ukrainian hryvnia
      - name: UGX
        description: Ugandan shilling
      - name: USD
        description: United States dollar
      - name: USN
        description: United States dollar (next day)
      - name: USS
        description: United States dollar (same day)
      - name: UYI
        description: Uruguay Peso en Unidedades Indexadas
      - name: UYU
        description: Uruguyan peso
      - name: UZS
        description: Uzbekistan som
      - name: VEF
        description: Venezuelan bolívar soberano
      - name: VND
        description: Vietnamese đồng
      - name: VUV
        description: Vanuatu vatu
      - name: WST
        description: Samoan tala
      - name: XAF
        description: CFA franc BEAC
      - name: XAG
        description: Silver
      - name: XAU
        description: Gold
      - name: XBA
        description: European Composite Unit
      - name: XBB
        description: European Monetary Unit
      - name: XBC
        description: European Unit of Account 9
      - name: XBD
        description: European Unit of Account 17
      - name: XCD
        description: East Caribbean dollar
      - name: XDR
        description: Special drawing rights (International Monetary Fund)
      - name: XOF
        description: CFA franc BCEAO
      - name: XPD
        description: Palladium
      - name: XPF
        description: CFP franc
      - name: XPT
        description: Platinum
      - name: XTS
        description: Code reserved for testing
      - name: XXX
        description: No currency
      - name: YER
        description: Yemeni rial
      - name: ZAR
        description: South African rand
      - name: ZMK
        description: Zambian kwacha
      - name: ZMW
        description: Zambian kwacha
      - name: BTC
        description: Bitcoin
      x-release-status: PUBLIC
    CustomerCreationSource:
      type: string
      description: Indicates the method used to create the customer profile.
      enum:
      - OTHER
      - APPOINTMENTS
      - COUPON
      - DELETION_RECOVERY
      - DIRECTORY
      - EGIFTING
      - EMAIL_COLLECTION
      - FEEDBACK
      - IMPORT
      - INVOICES
      - LOYALTY
      - MARKETING
      - MERGE
      - ONLINE_STORE
      - INSTANT_PROFILE
      - TERMINAL
      - THIRD_PARTY
      - THIRD_PARTY_IMPORT
      - UNMERGE_RECOVERY
      x-enum-elements:
      - name: OTHER
        description: |-
          Default creation source. Typically used for backward/future
          compatibility when the original source of a customer profile is
          unrecognized. For example, when older clients do not support newer
          source types.
      - name: APPOINTMENTS
        description: |-
          Customer profile created automatically when an appointment
          was scheduled.
      - name: COUPON
        description: |-
          Customer profile created automatically when a coupon was issued
          using Square Point of Sale.
      - name: DELETION_RECOVERY
        description: |-
          Customer profile restored through Square's deletion recovery
          process.
      - name: DIRECTORY
        description: |-
          Customer profile created manually through Square Dashboard or
          Point of Sale application.
      - name: EGIFTING
        description: |-
          Customer profile created automatically when a gift card was
          issued using Square Point of Sale. Customer profiles are created for
          both the purchaser and the recipient of the gift card.
      - name: EMAIL_COLLECTION
        description: |-
          Customer profile created through Square Point of Sale when
          signing up for marketing emails during checkout.
      - name: FEEDBACK
        description: |-
          Customer profile created automatically when providing feedback
          through a digital receipt.
      - name: IMPORT
        description: |-
          Customer profile created automatically when importing customer
          data through Square Dashboard.
      - name: INVOICES
        description: Customer profile created automatically during an invoice payment.
      - name: LOYALTY
        description: |-
          Customer profile created automatically when customers provide a
          phone number for loyalty reward programs during checkout.
      - name: MARKETING
        description: |-
          Customer profile created as the result of a campaign managed
          through Square’s Facebook integration.
      - name: MERGE
        description: |-
          Customer profile created as the result of explicitly merging
          multiple customer profiles through the Square Dashboard or Point of
          Sale application.
      - name: ONLINE_STORE
        description: |-
          Customer profile created through Square's Online Store solution
          (legacy service).
      - name: INSTANT_PROFILE
        description: |-
          Customer profile created automatically as the result of a successful
          transaction that did not explicitly link to an existing customer profile.
      - name: TERMINAL
        description: Customer profile created through Square's Virtual Terminal.
      - name: THIRD_PARTY
        description: Customer profile created through a Square API call.
      - name: THIRD_PARTY_IMPORT
        description: |-
          Customer profile created by a third-party product and imported
          through an official integration.
      - name: UNMERGE_RECOVERY
        description: |-
          Customer profile restored through Square's unmerge recovery
          process.
      x-release-status: PUBLIC
    CustomerInclusionExclusion:
      type: string
      description: |-
        Indicates whether customers should be included in, or excluded from,
        the result set when they match the filtering criteria.
      enum:
      - INCLUDE
      - EXCLUDE
      x-enum-elements:
      - name: INCLUDE
        description: |-
          Customers should be included in the result set when they match the
          filtering criteria.
      - name: EXCLUDE
        description: |-
          Customers should be excluded from the result set when they match
          the filtering criteria.
      x-release-status: PUBLIC
    CustomerSortField:
      type: string
      description: Specifies customer attributes as the sort key to customer profiles
        returned from a search.
      enum:
      - DEFAULT
      - CREATED_AT
      x-enum-elements:
      - name: DEFAULT
        description: |-
          Use the default sort key. By default, customers are sorted
          alphanumerically by concatenating their `given_name` and `family_name`. If
          neither name field is set, string comparison is performed using one of the
          remaining fields in the following order: `company_name`, `email`,
          `phone_number`.
      - name: CREATED_AT
        description: Use the creation date attribute (`created_at`) of customer profiles
          as the sort key.
      x-release-status: PUBLIC
    DayOfWeek:
      type: string
      description: Indicates the specific day  of the week.
      enum:
      - SUN
      - MON
      - TUE
      - WED
      - THU
      - FRI
      - SAT
      x-enum-elements:
      - name: SUN
        description: Sunday
      - name: MON
        description: Monday
      - name: TUE
        description: Tuesday
      - name: WED
        description: Wednesday
      - name: THU
        description: Thursday
      - name: FRI
        description: Friday
      - name: SAT
        description: Saturday
      x-release-status: PUBLIC
    DeviceCodeStatus:
      type: string
      description: DeviceCode.Status enum.
      enum:
      - UNPAIRED
      - PAIRED
      x-enum-elements:
      - name: UNPAIRED
        description: The device code is just created and unpaired.
      - name: PAIRED
        description: The device code has been signed in and paired to a device.
      x-release-status: BETA
    DisputeEvidenceType:
      type: string
      description: Type of the dispute evidence.
      enum:
      - GENERIC_EVIDENCE
      - ONLINE_OR_APP_ACCESS_LOG
      - AUTHORIZATION_DOCUMENTATION
      - CANCELLATION_OR_REFUND_DOCUMENTATION
      - CARDHOLDER_COMMUNICATION
      - CARDHOLDER_INFORMATION
      - PURCHASE_ACKNOWLEDGEMENT
      - DUPLICATE_CHARGE_DOCUMENTATION
      - PRODUCT_OR_SERVICE_DESCRIPTION
      - RECEIPT
      - SERVICE_RECEIVED_DOCUMENTATION
      - PROOF_OF_DELIVERY_DOCUMENTATION
      - RELATED_TRANSACTION_DOCUMENTATION
      - REBUTTAL_EXPLANATION
      - TRACKING_NUMBER
      x-enum-elements:
      - name: GENERIC_EVIDENCE
        description: |-
          Square assumes this evidence type if you don't provide a type when uploading evidence.

          Use when uploading evidence as: file or string
      - name: ONLINE_OR_APP_ACCESS_LOG
        description: |-
          Server or activity logs that show proof of the cardholder’s identity and that the cardholder successfully ordered and received the goods (digitally or otherwise).
          Example evidence: IP addresses, corresponding timestamps/dates, cardholder’s name/email address linked to a cardholder profile held by Merchant, proof the same device and card (used in dispute) were previously used in prior undisputed transaction, any related detailed activity.

          Use when uploading evidence as: file or string
      - name: AUTHORIZATION_DOCUMENTATION
        description: |-
          Evidence that the cardholder did provide authorization of the charge.
          Example evidence: a signed credit card authorization.

          Use when uploading evidence as: file
      - name: CANCELLATION_OR_REFUND_DOCUMENTATION
        description: |-
          Evidence that the cardholder acknowledged your refund or cancellation policy.
          Example evidence: a signature or checkbox showing the cardholder’s acknowledgement of your refund or cancellation policy.

          Use when uploading evidence as: file or string
      - name: CARDHOLDER_COMMUNICATION
        description: |-
          Evidence that shows relevant communication with the cardholder.
          Example evidence: emails or texts that show the cardholder received goods/services or demonstrate cardholder satisfaction.

          Use when uploading evidence as: file
      - name: CARDHOLDER_INFORMATION
        description: |-
          Evidence that validates customer identity.
          Example evidence: personally identifiable details such as name, email address, purchaser IP address, copy of cardholder ID.

          Use when uploading evidence as: file or string
      - name: PURCHASE_ACKNOWLEDGEMENT
        description: |-
          Evidence that shows proof of the sale/transaction.
          Example evidence: an invoice, contract, etc. showing the customer’s acknowledgement of the purchase and your terms.

          Use when uploading evidence as: file or string
      - name: DUPLICATE_CHARGE_DOCUMENTATION
        description: |-
          Evidence that shows the charge(s) in question are valid and distinct from one another.
          Example evidence: receipts, shipping labels, and invoices along with their distinct payment IDs.

          Use when uploading evidence as: file
      - name: PRODUCT_OR_SERVICE_DESCRIPTION
        description: |-
          A description of the product or service sold.

          Use when uploading evidence as: file or string
      - name: RECEIPT
        description: |-
          A receipt or message sent to the cardholder detailing the charge.
          Note: You don’t need to upload the Square receipt; Square submits the receipt on your behalf.

          Use when uploading evidence as: file or string
      - name: SERVICE_RECEIVED_DOCUMENTATION
        description: |-
          Evidence that the service was provided to the cardholder or the expected date that services will be rendered.
          Example evidence: signed delivery form, work order, expected delivery date, or other written agreement.

          Use when uploading evidence as: file or string
      - name: PROOF_OF_DELIVERY_DOCUMENTATION
        description: |-
          Evidence that shows the product was provided to the cardholder or the expected date of delivery.
          Example evidence: signed delivery form, or written agreement acknowledging receipt of goods or services.

          Use when uploading evidence as: file or string
      - name: RELATED_TRANSACTION_DOCUMENTATION
        description: |-
          Evidence that shows the cardholder previously processed transactions on the same card and did not dispute them.
          Note: Square will automatically provide up to 5 distinct Square receipts for related transactions, when available.

          Use when uploading evidence as: file or string
      - name: REBUTTAL_EXPLANATION
        description: |-
          An explanation of why the cardholder’s claim is invalid.
          Example evidence: explanation of why each distinct charge is a legitimate purchase why the cardholder’s claim for credit owed due to their attempt to cancel, return,
          or refund is invalid per your stated policy and cardholder agreement,
          or an explanation of how the cardholder did not attempt to remedy the issue with you first in order to receive credit.

          Use when uploading evidence as: file or string
      - name: TRACKING_NUMBER
        description: |-
          The tracking number for the order provided by the shipping carrier. If you have multiple numbers, they will need to be submitted individually as separate pieces of evidence.

          Use when uploading evidence as: string
      x-release-status: BETA
    DisputeReason:
      type: string
      description: |-
        List of possible reasons why a cardholder might initiate a
        dispute with their bank.
      enum:
      - AMOUNT_DIFFERS
      - CANCELLED
      - DUPLICATE
      - NO_KNOWLEDGE
      - NOT_AS_DESCRIBED
      - NOT_RECEIVED
      - PAID_BY_OTHER_MEANS
      - CUSTOMER_REQUESTS_CREDIT
      - EMV_LIABILITY_SHIFT
      x-enum-elements:
      - name: AMOUNT_DIFFERS
        description: |-
          The cardholder claims that they were charged the wrong amount for the purchase.
          To challenge this dispute, provide specific and concrete evidence that the cardholder agreed to the amount charged.
      - name: CANCELLED
        description: |-
          The cardholder claims that they attempted to return the goods or cancel the service.
          To challenge this dispute, provide specific and concrete evidence to prove that the cardholder is not due a refund, and that the cardholder acknowledged your cancellation policy.
      - name: DUPLICATE
        description: |-
          The cardholder claims that they were charged twice for the same purchase.
          To challenge this dispute, provide specific and concrete evidence that shows both charges are legitimate and independent of one another.
      - name: NO_KNOWLEDGE
        description: |-
          The cardholder claims that they did not make this purchase nor authorized the charge.
          To challenge this dispute, provide specific and concrete evidence that proves that the cardholder identity was verified at the time of purchase and that the purchase was authorized.
      - name: NOT_AS_DESCRIBED
        description: |-
          The cardholder claims the product or service was provided but the quality of the deliverable did not align with the expectations of the cardholder based on the description.
          To challenge this dispute, provide specific and concrete evidence that shows the cardholder is in possession of the product as described, or received the service as described (agreed) upon.
      - name: NOT_RECEIVED
        description: |-
          The cardholder claims the product or service was not received by the cardholder within the stated time frame.
          To challenge this dispute, provide specific and concrete evidence to prove that the cardholder is in possession of or received the product or service sold.
      - name: PAID_BY_OTHER_MEANS
        description: |-
          The cardholder claims that they previously paid for this purchase.
          To challenge this dispute, provide specific and concrete evidence that shows both charges are legitimate and independent of one another or proof that you already provided a credit for the charge.
      - name: CUSTOMER_REQUESTS_CREDIT
        description: |-
          The cardholder claims that the purchase was either cancelled or returned but they have not yet received the credit.
          To challenge this dispute, provide specific and concrete evidence to prove that the cardholder is not due a refund, and that they acknowledged your cancellation and/or refund policy.
      - name: EMV_LIABILITY_SHIFT
        description: |-
          A chip-enabled card was not processed through a compliant chip-card reader (e.g. it was swiped instead of dipped into a chip-card reader).
          You cannot challenge this dispute because the payment didn’t comply with EMV security requirements. For more information, see [What Is EMV.](https://squareup.com/emv)
      x-release-status: BETA
    DisputeState:
      type: string
      description: List of possible dispute states.
      enum:
      - UNKNOWN_STATE
      - INQUIRY_EVIDENCE_REQUIRED
      - INQUIRY_PROCESSING
      - INQUIRY_CLOSED
      - EVIDENCE_REQUIRED
      - PROCESSING
      - WON
      - LOST
      - ACCEPTED
      - WAITING_THIRD_PARTY
      x-enum-elements:
      - name: UNKNOWN_STATE
        description: ""
      - name: INQUIRY_EVIDENCE_REQUIRED
        description: ""
      - name: INQUIRY_PROCESSING
        description: ""
      - name: INQUIRY_CLOSED
        description: ""
      - name: EVIDENCE_REQUIRED
        description: ""
      - name: PROCESSING
        description: ""
      - name: WON
        description: ""
      - name: LOST
        description: ""
      - name: ACCEPTED
        description: ""
      - name: WAITING_THIRD_PARTY
        description: ""
      x-release-status: BETA
    EcomVisibility:
      type: string
      description: Determines item visibility in Ecom (Online Store) and Online Checkout.
      enum:
      - UNINDEXED
      - UNAVAILABLE
      - HIDDEN
      - VISIBLE
      x-enum-elements:
      - name: UNINDEXED
        description: Item is not synced with Ecom (Weebly). This is the default state
      - name: UNAVAILABLE
        description: Item is synced but is unavailable within Ecom (Weebly) and Online
          Checkout
      - name: HIDDEN
        description: Option for seller to choose manually created Quick Amounts.
      - name: VISIBLE
        description: Item is synced but available within Ecom (Weebly) and Online
          Checkout but is hidden from Ecom Store.
      x-release-status: PUBLIC
    EmployeeStatus:
      type: string
      description: The status of the Employee being retrieved.
      enum:
      - ACTIVE
      - INACTIVE
      x-enum-elements:
      - name: ACTIVE
        description: Specifies that the employee is in the Active state.
      - name: INACTIVE
        description: Specifies that the employee is in the Inactive state.
      x-release-status: DEPRECATED
    ErrorCategory:
      type: string
      description: |-
        Indicates which high-level category of error has occurred during a
        request to the Connect API.
      enum:
      - API_ERROR
      - AUTHENTICATION_ERROR
      - INVALID_REQUEST_ERROR
      - RATE_LIMIT_ERROR
      - PAYMENT_METHOD_ERROR
      - REFUND_ERROR
      x-enum-elements:
      - name: API_ERROR
        description: An error occurred with the Connect API itself.
      - name: AUTHENTICATION_ERROR
        description: |-
          An authentication error occurred. Most commonly, the request had
          a missing, malformed, or otherwise invalid `Authorization` header.
      - name: INVALID_REQUEST_ERROR
        description: |-
          The request was invalid. Most commonly, a required parameter was
          missing, or a provided parameter had an invalid value.
      - name: RATE_LIMIT_ERROR
        description: |-
          Your application reached the Connect API rate limit. Retry your
          request after a while.
      - name: PAYMENT_METHOD_ERROR
        description: |-
          An error occurred while processing a payment method. Most commonly,
          the details of the payment method were invalid (such as a card's CVV
          or expiration date).
      - name: REFUND_ERROR
        description: An error occurred while attempting to process a refund.
      x-release-status: PUBLIC
    ErrorCode:
      type: string
      description: |-
        Indicates the specific error that occurred during a request to a
        Square API.
      enum:
      - INTERNAL_SERVER_ERROR
      - UNAUTHORIZED
      - ACCESS_TOKEN_EXPIRED
      - ACCESS_TOKEN_REVOKED
      - CLIENT_DISABLED
      - FORBIDDEN
      - INSUFFICIENT_SCOPES
      - APPLICATION_DISABLED
      - V1_APPLICATION
      - V1_ACCESS_TOKEN
      - CARD_PROCESSING_NOT_ENABLED
      - BAD_REQUEST
      - MISSING_REQUIRED_PARAMETER
      - INCORRECT_TYPE
      - INVALID_TIME
      - INVALID_TIME_RANGE
      - INVALID_VALUE
      - INVALID_CURSOR
      - UNKNOWN_QUERY_PARAMETER
      - CONFLICTING_PARAMETERS
      - EXPECTED_JSON_BODY
      - INVALID_SORT_ORDER
      - VALUE_REGEX_MISMATCH
      - VALUE_TOO_SHORT
      - VALUE_TOO_LONG
      - VALUE_TOO_LOW
      - VALUE_TOO_HIGH
      - VALUE_EMPTY
      - ARRAY_LENGTH_TOO_LONG
      - ARRAY_LENGTH_TOO_SHORT
      - ARRAY_EMPTY
      - EXPECTED_BOOLEAN
      - EXPECTED_INTEGER
      - EXPECTED_FLOAT
      - EXPECTED_STRING
      - EXPECTED_OBJECT
      - EXPECTED_ARRAY
      - EXPECTED_MAP
      - EXPECTED_BASE64_ENCODED_BYTE_ARRAY
      - INVALID_ARRAY_VALUE
      - INVALID_ENUM_VALUE
      - INVALID_CONTENT_TYPE
      - INVALID_FORM_VALUE
      - CUSTOMER_NOT_FOUND
      - ONE_INSTRUMENT_EXPECTED
      - NO_FIELDS_SET
      - DEPRECATED_FIELD_SET
      - RETIRED_FIELD_SET
      - TOO_MANY_MAP_ENTRIES
      - MAP_KEY_LENGTH_TOO_SHORT
      - MAP_KEY_LENGTH_TOO_LONG
      - CARD_EXPIRED
      - INVALID_EXPIRATION
      - INVALID_EXPIRATION_YEAR
      - INVALID_EXPIRATION_DATE
      - UNSUPPORTED_CARD_BRAND
      - UNSUPPORTED_ENTRY_METHOD
      - INVALID_ENCRYPTED_CARD
      - INVALID_CARD
      - GENERIC_DECLINE
      - CVV_FAILURE
      - ADDRESS_VERIFICATION_FAILURE
      - INVALID_ACCOUNT
      - CURRENCY_MISMATCH
      - INSUFFICIENT_FUNDS
      - INSUFFICIENT_PERMISSIONS
      - CARDHOLDER_INSUFFICIENT_PERMISSIONS
      - INVALID_LOCATION
      - TRANSACTION_LIMIT
      - VOICE_FAILURE
      - PAN_FAILURE
      - EXPIRATION_FAILURE
      - CARD_NOT_SUPPORTED
      - INVALID_PIN
      - INVALID_POSTAL_CODE
      - INVALID_FEES
      - MANUALLY_ENTERED_PAYMENT_NOT_SUPPORTED
      - PAYMENT_LIMIT_EXCEEDED
      - GIFT_CARD_AVAILABLE_AMOUNT
      - DELAYED_TRANSACTION_EXPIRED
      - DELAYED_TRANSACTION_CANCELED
      - DELAYED_TRANSACTION_CAPTURED
      - DELAYED_TRANSACTION_FAILED
      - CARD_TOKEN_EXPIRED
      - CARD_TOKEN_USED
      - AMOUNT_TOO_HIGH
      - UNSUPPORTED_INSTRUMENT_TYPE
      - REFUND_AMOUNT_INVALID
      - REFUND_ALREADY_PENDING
      - PAYMENT_NOT_REFUNDABLE
      - REFUND_DECLINED
      - INVALID_CARD_DATA
      - LOCATION_MISMATCH
      - IDEMPOTENCY_KEY_REUSED
      - UNEXPECTED_VALUE
      - SANDBOX_NOT_SUPPORTED
      - INVALID_EMAIL_ADDRESS
      - INVALID_PHONE_NUMBER
      - CHECKOUT_EXPIRED
      - BAD_CERTIFICATE
      - INVALID_SQUARE_VERSION_FORMAT
      - API_VERSION_INCOMPATIBLE
      - CARD_DECLINED
      - VERIFY_CVV_FAILURE
      - VERIFY_AVS_FAILURE
      - CARD_DECLINED_CALL_ISSUER
      - CARD_DECLINED_VERIFICATION_REQUIRED
      - BAD_EXPIRATION
      - CHIP_INSERTION_REQUIRED
      - ALLOWABLE_PIN_TRIES_EXCEEDED
      - RESERVATION_DECLINED
      - NOT_FOUND
      - APPLE_PAYMENT_PROCESSING_CERTIFICATE_HASH_NOT_FOUND
      - METHOD_NOT_ALLOWED
      - NOT_ACCEPTABLE
      - REQUEST_TIMEOUT
      - CONFLICT
      - GONE
      - REQUEST_ENTITY_TOO_LARGE
      - UNSUPPORTED_MEDIA_TYPE
      - UNPROCESSABLE_ENTITY
      - RATE_LIMITED
      - NOT_IMPLEMENTED
      - BAD_GATEWAY
      - SERVICE_UNAVAILABLE
      - TEMPORARY_ERROR
      - GATEWAY_TIMEOUT
      x-enum-elements:
      - name: INTERNAL_SERVER_ERROR
        description: 500 Internal Server Error - a general server error occurred.
        error-category: API_ERROR
        http-code: 500
      - name: UNAUTHORIZED
        description: 401 Unauthorized - a general authorization error occurred.
        error-category: AUTHENTICATION_ERROR
        http-code: 401
      - name: ACCESS_TOKEN_EXPIRED
        description: 401 Unauthorized - the provided access token has expired.
        error-category: AUTHENTICATION_ERROR
        http-code: 401
      - name: ACCESS_TOKEN_REVOKED
        description: 401 Unauthorized - the provided access token has been revoked.
        error-category: AUTHENTICATION_ERROR
        http-code: 401
      - name: CLIENT_DISABLED
        description: 401 Unauthorized - the provided client has been disabled.
        error-category: AUTHENTICATION_ERROR
        http-code: 401
      - name: FORBIDDEN
        description: 403 Forbidden - a general access error occurred.
        error-category: AUTHENTICATION_ERROR
        http-code: 403
      - name: INSUFFICIENT_SCOPES
        description: |-
          403 Forbidden - the provided access token does not have permission
          to execute the requested action.
        error-category: AUTHENTICATION_ERROR
        http-code: 403
      - name: APPLICATION_DISABLED
        description: 403 Forbidden - the calling application was disabled.
        error-category: INVALID_REQUEST_ERROR
        http-code: 403
      - name: V1_APPLICATION
        description: |-
          403 Forbidden - the calling application was created prior to
          2016-03-30 and is not compatible with v2 Square API calls.
        error-category: INVALID_REQUEST_ERROR
        http-code: 403
      - name: V1_ACCESS_TOKEN
        description: |-
          403 Forbidden - the calling application is using an access token
          created prior to 2016-03-30 and is not compatible with v2 Square API
          calls.
        error-category: INVALID_REQUEST_ERROR
        http-code: 403
      - name: CARD_PROCESSING_NOT_ENABLED
        description: |-
          403 Forbidden - the location provided in the API call is not
          enabled for credit card processing.
        error-category: INVALID_REQUEST_ERROR
        http-code: 403
      - name: BAD_REQUEST
        description: 400 Bad Request - a general error occurred.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: MISSING_REQUIRED_PARAMETER
        description: |-
          400 Bad Request - the request is missing a required path, query, or
          body parameter.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: INCORRECT_TYPE
        description: |-
          400 Bad Request - the value provided in the request is the wrong
          type. For example, a string instead of an integer.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: INVALID_TIME
        description: |-
          400 Bad Request - formatting for the provided time value is
          incorrect.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: INVALID_TIME_RANGE
        description: |-
          400 Bad Request - the time range provided in the request is invalid.
          For example, the end time is before the start time.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: INVALID_VALUE
        description: |-
          400 Bad Request - the provided value is invalid. For example,
          including `%` in a phone number.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: INVALID_CURSOR
        description: |-
          400 Bad Request - the pagination cursor included in the request is
          invalid.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: UNKNOWN_QUERY_PARAMETER
        description: |-
          400 Bad Request - the query parameters provided is invalid for the
          requested endpoint.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: CONFLICTING_PARAMETERS
        description: |-
          400 Bad Request - 1 or more of the request parameters conflict with
          each other.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: EXPECTED_JSON_BODY
        description: 400 Bad Request - the request body is not a JSON object.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: INVALID_SORT_ORDER
        description: |-
          400 Bad Request - the provided sort order is not a valid key.
          Currently, sort order must be `ASC` or `DESC`.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: VALUE_REGEX_MISMATCH
        description: |-
          400 Bad Request - the provided value does not match an expected
          regular expression.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: VALUE_TOO_SHORT
        description: |-
          400 Bad Request - the provided string value is shorter than the
          minimum length allowed.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: VALUE_TOO_LONG
        description: |-
          400 Bad Request - the provided string value is longer than the
          maximum length allowed.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: VALUE_TOO_LOW
        description: |-
          400 Bad Request - the provided value is less than the supported
          minimum.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: VALUE_TOO_HIGH
        description: |-
          400 Bad Request - the provided value is greater than the supported
          maximum.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: VALUE_EMPTY
        description: |-
          400 Bad Request - the provided value has a default (empty) value
          such as a blank string.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: ARRAY_LENGTH_TOO_LONG
        description: 400 Bad Request - the provided array has too many elements.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: ARRAY_LENGTH_TOO_SHORT
        description: 400 Bad Request - the provided array has too few elements.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: ARRAY_EMPTY
        description: 400 Bad Request - the provided array is empty.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: EXPECTED_BOOLEAN
        description: |-
          400 Bad Request - the endpoint expected the provided value to be a
          boolean.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: EXPECTED_INTEGER
        description: |-
          400 Bad Request - the endpoint expected the provided value to be an
          integer.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: EXPECTED_FLOAT
        description: |-
          400 Bad Request - the endpoint expected the provided value to be a
          float.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: EXPECTED_STRING
        description: |-
          400 Bad Request - the endpoint expected the provided value to be a
          string.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: EXPECTED_OBJECT
        description: |-
          400 Bad Request - the endpoint expected the provided value to be a
          JSON object.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: EXPECTED_ARRAY
        description: |-
          400 Bad Request - the endpoint expected the provided value to be an
          array or list.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: EXPECTED_MAP
        description: |-
          400 Bad Request - the endpoint expected the provided value to be a
          map or associative array.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: EXPECTED_BASE64_ENCODED_BYTE_ARRAY
        description: |-
          400 Bad Request - the endpoint expected the provided value to be an
          array encoded in base64.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: INVALID_ARRAY_VALUE
        description: |-
          400 Bad Request - 1 or more object in the array does not match the
          array type.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: INVALID_ENUM_VALUE
        description: |-
          400 Bad Request - the provided static string is not valid for the
          field.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: INVALID_CONTENT_TYPE
        description: 400 Bad Request - invalid content type header.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: INVALID_FORM_VALUE
        description: |-
          400 Bad Request - Only relevant for applications created prior to
          2016-03-30. Indicates there was an error while parsing form values.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: CUSTOMER_NOT_FOUND
        description: 400 Bad Request - the provided customer id can't be found in
          the merchant's customers list.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: ONE_INSTRUMENT_EXPECTED
        description: 400 Bad Request - a general error occurred.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: NO_FIELDS_SET
        description: 400 Bad Request - a general error occurred.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: DEPRECATED_FIELD_SET
        description: ""
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: RETIRED_FIELD_SET
        description: ""
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: TOO_MANY_MAP_ENTRIES
        description: 400 Bad Request - too many entries in the map field.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: MAP_KEY_LENGTH_TOO_SHORT
        description: 400 Bad Request - the length of one of the provided keys in the
          map is too short.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: MAP_KEY_LENGTH_TOO_LONG
        description: 400 Bad Request - the length of one of the provided keys in the
          map is too long.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: CARD_EXPIRED
        description: The card issuer declined the request because the card is expired.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 400
      - name: INVALID_EXPIRATION
        description: |-
          The expiration date for the payment card is invalid. For example,
          it indicates a date in the past.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 400
      - name: INVALID_EXPIRATION_YEAR
        description: |-
          The expiration year for the payment card is invalid. For example,
          it indicates a year in the past or contains invalid characters.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: INVALID_EXPIRATION_DATE
        description: |-
          The expiration date for the payment card is invalid. For example,
          it contains invalid characters.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: UNSUPPORTED_CARD_BRAND
        description: The credit card provided is not from a supported issuer.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 400
      - name: UNSUPPORTED_ENTRY_METHOD
        description: The entry method for the credit card (swipe, dip, tap) is not
          supported.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 400
      - name: INVALID_ENCRYPTED_CARD
        description: The encrypted card information is invalid.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 400
      - name: INVALID_CARD
        description: The credit card cannot be validated based on the provided details.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 400
      - name: GENERIC_DECLINE
        description: An unexpected error occurred.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 400
      - name: CVV_FAILURE
        description: The card issuer declined the request because the CVV value is
          invalid.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 400
      - name: ADDRESS_VERIFICATION_FAILURE
        description: The card issuer declined the request because the postal code
          is invalid.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 400
      - name: INVALID_ACCOUNT
        description: The card issuer was not able to locate account on record.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 400
      - name: CURRENCY_MISMATCH
        description: |-
          The currency associated with the payment is not valid for the provided
          funding source. For example, a gift card funded in USD cannot be used to process
          payments in GBP.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 400
      - name: INSUFFICIENT_FUNDS
        description: The funding source has insufficient funds to cover the payment.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 400
      - name: INSUFFICIENT_PERMISSIONS
        description: |-
          The Square account does not have the permissions to accept
          this payment. For example, Square may limit which merchants are
          allowed to receive gift card payments.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 400
      - name: CARDHOLDER_INSUFFICIENT_PERMISSIONS
        description: |-
          The card issuer has declined the transaction due to restrictions on where the card can be used.
          For example, a gift card is limited to a single merchant.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 400
      - name: INVALID_LOCATION
        description: |-
          The Square account cannot take payments in the specified region.
          A Square account can take payments only from the region where the account was created.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 400
      - name: TRANSACTION_LIMIT
        description: |-
          The card issuer has determined the payment amount is either too high or too low.
          The API returns the error code mostly for credit cards (for example, the card reached
          the credit limit). However, sometimes the issuer bank can indicate the error for debit
          or prepaid cards (for example, card has insufficient funds).
        error-category: PAYMENT_METHOD_ERROR
        http-code: 400
      - name: VOICE_FAILURE
        description: The card issuer declined the request because the issuer requires
          voice authorization from the cardholder.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 400
      - name: PAN_FAILURE
        description: |-
          The specified card number is invalid. For example, it is of
          incorrect length or is incorrectly formatted.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 400
      - name: EXPIRATION_FAILURE
        description: |-
          The card expiration date is either invalid or indicates that the
          card is expired.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 400
      - name: CARD_NOT_SUPPORTED
        description: |-
          The card is not supported either in the geographic region or by
          the MCC [merchant category code](https://developer.squareup.com/docs/docs/api/connect/v2#navsection-connectapibasics)
        error-category: PAYMENT_METHOD_ERROR
        http-code: 400
      - name: INVALID_PIN
        description: The card issuer declined the request because the PIN is invalid.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 400
      - name: INVALID_POSTAL_CODE
        description: The postal code is incorrectly formatted.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 400
      - name: INVALID_FEES
        description: The app_fee_money on a payment is too high.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 400
      - name: MANUALLY_ENTERED_PAYMENT_NOT_SUPPORTED
        description: The card must be swiped, tapped, or dipped. Payments attempted
          by manually entering the card number are declined.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 400
      - name: PAYMENT_LIMIT_EXCEEDED
        description: Square declined the request because the payment amount exceeded
          the processing limit for this merchant.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 400
      - name: GIFT_CARD_AVAILABLE_AMOUNT
        description: |-
          When using a gift card as a payment source in a `CreatePayment` request, you can allow
          taking partial payment by adding the `accept_partial_authorization` parameter in the request.
          If the gift card does not have sufficient balance to pay the entire `amount_money` specified
          in the request, the request will succeed (an APPROVED payment for the remaining balance will be
          returned). For more information, see [Partial amount with Square gift cards](https://developer.squareup.com/docs/docs/payments-api/take-payments#partial-payment-gift-card).\r\n\r\n
          However, taking such a partial payment does not work if your request also includes `tip_money`,
          `app_fee_money`, or both. Square declines such payment and returns this error.\r\n* The error
          details provide the amount that was available on the gift card at the time of the request.
          The amount is a string representation in the smallest denomination of the applicable currency.
          For example, in USD the amount is specified in cents.\r\n* The error code appears in an array
          along with the INSUFFICIENT_FUNDS error.\r\n\r\nThe following is an example set of
          errors:\r\n```\r\n{\r\n  \"errors\": [\r\n    {\r\n  \"code\": \"INSUFFICIENT_FUNDS\",\r\n      \"detail\": \"Gift card does not have sufficient balance for requested amount and tip.\",\r\n      \"category\": \"PAYMENT_METHOD_ERROR\"\r\n    },\r\n    {\r\n      \"code\": \"GIFT_CARD_AVAILABLE_AMOUNT\",\r\n      \"detail\": \"4494\",\r\n      \"category\": \"PAYMENT_METHOD_ERROR\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n
          In addition to the errors, it shows the gift card balance at 44.94 USD. You can review this amount and submit a new `CreatePayment` request with `tip_money` and `amount_money` that fit within the available balance.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 400
      - name: DELAYED_TRANSACTION_EXPIRED
        description: The application tried to update a delayed-capture payment that
          has expired.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: DELAYED_TRANSACTION_CANCELED
        description: The application tried to cancel a delayed-capture payment that
          was already cancelled.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: DELAYED_TRANSACTION_CAPTURED
        description: The application tried to capture a delayed-capture payment that
          was already captured.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: DELAYED_TRANSACTION_FAILED
        description: The application tried to update a delayed-capture payment that
          failed.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: CARD_TOKEN_EXPIRED
        description: The provided card token (nonce) has expired.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: CARD_TOKEN_USED
        description: The provided card token (nonce) was already used to process payment.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: AMOUNT_TOO_HIGH
        description: The requested payment amount is too high for the provided payment
          source.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: UNSUPPORTED_INSTRUMENT_TYPE
        description: The API request references an unsupported instrument type/
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: REFUND_AMOUNT_INVALID
        description: The requested refund amount exceeds the amount available to refund.
        error-category: REFUND_ERROR
        http-code: 400
      - name: REFUND_ALREADY_PENDING
        description: The payment already has a pending refund.
        error-category: REFUND_ERROR
        http-code: 400
      - name: PAYMENT_NOT_REFUNDABLE
        description: |-
          The payment is not refundable. For example, a previous refund has
          already been rejected and no new refunds can be accepted.
        error-category: REFUND_ERROR
        http-code: 400
      - name: REFUND_DECLINED
        description: Request failed - The card issuer declined the refund.
        error-category: REFUND_ERROR
        http-code: 400
      - name: INVALID_CARD_DATA
        description: Generic error - the provided card data is invalid.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: LOCATION_MISMATCH
        description: Generic error - the given location does not matching what is
          expected.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: IDEMPOTENCY_KEY_REUSED
        description: The provided idempotency key has already been used.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: UNEXPECTED_VALUE
        description: General error - the value provided was unexpected.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: SANDBOX_NOT_SUPPORTED
        description: The API request is not supported in sandbox.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: INVALID_EMAIL_ADDRESS
        description: The provided email address is invalid.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: INVALID_PHONE_NUMBER
        description: The provided phone number is invalid.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: CHECKOUT_EXPIRED
        description: The provided checkout URL has expired.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: BAD_CERTIFICATE
        description: Bad certificate.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: INVALID_SQUARE_VERSION_FORMAT
        description: The provided Square-Version is incorrectly formatted.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: API_VERSION_INCOMPATIBLE
        description: The provided Square-Version is incompatible with the requested
          action.
        error-category: INVALID_REQUEST_ERROR
        http-code: 400
      - name: CARD_DECLINED
        description: 402 Request failed - the card was declined.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 402
      - name: VERIFY_CVV_FAILURE
        description: 402 Request failed - the CVV could not be verified.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 402
      - name: VERIFY_AVS_FAILURE
        description: 402 Request failed - the AVS could not be verified.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 402
      - name: CARD_DECLINED_CALL_ISSUER
        description: |-
          402 Request failed - the payment card was declined with a request
          for the card holder to call the issuer.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 402
      - name: CARD_DECLINED_VERIFICATION_REQUIRED
        description: |-
          402 Request failed - the payment card was declined with a request
          for additional verification.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 402
      - name: BAD_EXPIRATION
        description: |-
          402 Request failed - the card expiration date is either missing or
          incorrectly formatted.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 402
      - name: CHIP_INSERTION_REQUIRED
        description: |-
          402 Request failed - the card issuer requires that the card be read
          using a chip reader.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 402
      - name: ALLOWABLE_PIN_TRIES_EXCEEDED
        description: |-
          402 Request failed - the card has exhausted its available pin entry
          retries set by the card issuer. Resolving the error typically requires the
          card holder to contact the card issuer.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 402
      - name: RESERVATION_DECLINED
        description: 402 Request failed - The card issuer declined the refund.
        error-category: REFUND_ERROR
        http-code: 402
      - name: NOT_FOUND
        description: 404 Not Found - a general error occurred.
        error-category: INVALID_REQUEST_ERROR
        http-code: 404
      - name: APPLE_PAYMENT_PROCESSING_CERTIFICATE_HASH_NOT_FOUND
        description: 404 Not Found - Square could not find the associated Apple Pay
          certificate.
        error-category: INVALID_REQUEST_ERROR
        http-code: 404
      - name: METHOD_NOT_ALLOWED
        description: 405 Method Not Allowed - a general error occurred.
        error-category: INVALID_REQUEST_ERROR
        http-code: 405
      - name: NOT_ACCEPTABLE
        description: 406 Not Acceptable - a general error occurred.
        error-category: INVALID_REQUEST_ERROR
        http-code: 406
      - name: REQUEST_TIMEOUT
        description: 408 Request Timeout - a general error occurred.
        error-category: INVALID_REQUEST_ERROR
        http-code: 408
      - name: CONFLICT
        description: 409 Conflict - a general error occurred.
        error-category: INVALID_REQUEST_ERROR
        http-code: 409
      - name: GONE
        description: |-
          410 Gone - the target resource is no longer available and this
          condition is likely to be permanent..
        error-category: INVALID_REQUEST_ERROR
        http-code: 410
      - name: REQUEST_ENTITY_TOO_LARGE
        description: 413 Request Entity Too Large - a general error occurred.
        error-category: INVALID_REQUEST_ERROR
        http-code: 413
      - name: UNSUPPORTED_MEDIA_TYPE
        description: 415 Unsupported Media Type - a general error occurred.
        error-category: INVALID_REQUEST_ERROR
        http-code: 415
      - name: UNPROCESSABLE_ENTITY
        description: 422 Unprocessable Entity - a general error occurred.
        error-category: INVALID_REQUEST_ERROR
        http-code: 422
      - name: RATE_LIMITED
        description: 429 Rate Limited - a general error occurred.
        error-category: RATE_LIMIT_ERROR
        http-code: 429
      - name: NOT_IMPLEMENTED
        description: 501 Not Implemented - a general error occurred.
        error-category: API_ERROR
        http-code: 501
      - name: BAD_GATEWAY
        description: 502 Bad Gateway - a general error occurred.
        error-category: API_ERROR
        http-code: 502
      - name: SERVICE_UNAVAILABLE
        description: 503 Service Unavailable - a general error occurred.
        error-category: API_ERROR
        http-code: 503
      - name: TEMPORARY_ERROR
        description: |-
          A temporary internal error occurred. You can safely retry your call
          using the same idempotency key.
        error-category: PAYMENT_METHOD_ERROR
        http-code: 503
      - name: GATEWAY_TIMEOUT
        description: 504 Gateway Timeout - a general error occurred.
        error-category: API_ERROR
        http-code: 504
      x-release-status: PUBLIC
    ExcludeStrategy:
      type: string
      description: |-
        Indicates which products matched by a CatalogPricingRule
        will be excluded if the pricing rule uses an exclude set.
      enum:
      - LEAST_EXPENSIVE
      - MOST_EXPENSIVE
      x-enum-elements:
      - name: LEAST_EXPENSIVE
        description: |-
          The least expensive matched products are excluded from the pricing. If
          the pricing rule is set to exclude one product and multiple products in the
          match set qualify as least expensive, then one will be excluded at random.

          Excluding the least expensive product gives the best discount value to the buyer.
      - name: MOST_EXPENSIVE
        description: |-
          The most expensive matched product is excluded from the pricing rule.
          If multiple products have the same price and all qualify as least expensive,
          one will be excluded at random.

          This guarantees that the most expensive product is purchased at full price.
      x-release-status: BETA
    InventoryAlertType:
      type: string
      description: Indicates whether Square should alert the merchant when the inventory
        quantity of a CatalogItemVariation is low.
      enum:
      - NONE
      - LOW_QUANTITY
      x-enum-elements:
      - name: NONE
        description: The variation does not display an alert.
      - name: LOW_QUANTITY
        description: The variation generates an alert when its quantity is low.
      x-release-status: PUBLIC
    InventoryChangeType:
      type: string
      description: Indicates how the inventory change was applied to a tracked quantity
        of items.
      enum:
      - PHYSICAL_COUNT
      - ADJUSTMENT
      - TRANSFER
      x-enum-elements:
      - name: PHYSICAL_COUNT
        description: The change occurred as part of a physical count update.
      - name: ADJUSTMENT
        description: |-
          The change occurred as part of the normal lifecycle of goods
          (e.g., as an inventory adjustment).
      - name: TRANSFER
        description: The change occurred as part of an inventory transfer.
      x-release-status: PUBLIC
    InventoryState:
      type: string
      description: Indicates the state of a tracked item quantity in the lifecycle
        of goods.
      enum:
      - CUSTOM
      - IN_STOCK
      - SOLD
      - RETURNED_BY_CUSTOMER
      - RESERVED_FOR_SALE
      - SOLD_ONLINE
      - ORDERED_FROM_VENDOR
      - RECEIVED_FROM_VENDOR
      - IN_TRANSIT_TO
      - NONE
      - WASTE
      - UNLINKED_RETURN
      x-enum-elements:
      - name: CUSTOM
        description: |-
          The related quantity of items are in a custom state. **READ-ONLY**:
          the Inventory API cannot move quantities to or from this state.
      - name: IN_STOCK
        description: The related quantity of items are on hand and available for sale.
      - name: SOLD
        description: |-
          The related quantity of items were sold as part of an itemized
          transaction. Quantities in the `SOLD` state are no longer tracked.
      - name: RETURNED_BY_CUSTOMER
        description: |-
          The related quantity of items were returned through the Square Point
          of Sale application, but are not yet available for sale. **READ-ONLY**:
          the Inventory API cannot move quantities to or from this state.
      - name: RESERVED_FOR_SALE
        description: |-
          The related quantity of items are on hand, but not currently
          available for sale. **READ-ONLY**: the Inventory API cannot move
          quantities to or from this state.
      - name: SOLD_ONLINE
        description: |-
          The related quantity of items were sold online. **READ-ONLY**: the
          Inventory API cannot move quantities to or from this state.
      - name: ORDERED_FROM_VENDOR
        description: |-
          The related quantity of items were ordered from a vendor but not yet
          received. **READ-ONLY**: the Inventory API cannot move quantities to or
          from this state.
      - name: RECEIVED_FROM_VENDOR
        description: |-
          The related quantity of items were received from a vendor but are
          not yet available for sale. **READ-ONLY**: the Inventory API cannot move
          quantities to or from this state.
      - name: IN_TRANSIT_TO
        description: |-
          The related quantity of items are in transit between locations.
          *READ-ONLY**: the Inventory API cannot move quantities to or from this
          state.
      - name: NONE
        description: |-
          A placeholder indicating that the related quantity of items are not
          currently tracked in Square. Transferring quantities from the `NONE` state
          to a tracked state (e.g., `IN_STOCK`) introduces stock into the system.
      - name: WASTE
        description: |-
          The related quantity of items are lost or damaged and cannot be
          sold.
      - name: UNLINKED_RETURN
        description: |-
          The related quantity of items were returned but not linked to a
          previous transaction. Unlinked returns are not tracked in Square.
          Transferring a quantity from `UNLINKED_RETURN` to a tracked state (e.g.,
          `IN_STOCK`) introduces new stock into the system.
      x-release-status: PUBLIC
    InvoicePaymentReminderStatus:
      type: string
      description: The status of a payment request reminder.
      enum:
      - PENDING
      - NOT_APPLICABLE
      - SENT
      x-enum-elements:
      - name: PENDING
        description: The reminder is to be sent on the `relative_scheduled_date` (if
          the invoice is published).
      - name: NOT_APPLICABLE
        description: |-
          The reminder is not applicable and is not sent. The following are examples
          of when reminders are not applicable and are not sent:
          - You schedule a reminder to be sent before the invoice is published.
          - The invoice is configured with multiple payment requests and a payment request reminder
          is configured to be sent after the next payment request `due_date`.
          - Two reminders (for different payment requests) are configured to be sent on the
          same date. Therefore, only one reminder is sent.
          - You configure a reminder to be sent on the date that the invoice is scheduled to be sent.
          - The payment request is already paid.
          - The invoice status is `CANCELED` or `FAILED`.
      - name: SENT
        description: The reminder is sent.
      x-release-status: BETA
    InvoiceRequestMethod:
      type: string
      description: "Specifies the action for Square to take for processing the invoice.\
        \ For example, \nemail the invoice, charge a customer's card on file, or do\
        \ nothing."
      enum:
      - EMAIL
      - CHARGE_CARD_ON_FILE
      - SHARE_MANUALLY
      x-enum-elements:
      - name: EMAIL
        description: "Directs Square to email the invoice to the customer after the\
          \ invoice is published \n(either immediately or at the `scheduled_at` time,\
          \ if specified in the [invoice](#type-invoice))."
      - name: CHARGE_CARD_ON_FILE
        description: "Directs Square to charge the card on file, on the `due_date`,\
          \ specified in the payment request \nafter the invoice is published."
      - name: SHARE_MANUALLY
        description: "Directs Square to take no specific action on the invoice. In\
          \ this case, the seller \n(or the application developer) follows up with\
          \ the customer for payment. For example, \na seller might collect a payment\
          \ in the Seller Dashboard or use the Point of Sale (POS) application. \n\
          The seller might also share the URL of the Square-hosted invoice page (`public_url`)\
          \ with the customer requesting payment."
      x-release-status: BETA
    InvoiceRequestType:
      type: string
      description: "Identifies the type of the payment request. For more information,\
        \ \nsee [Payment request](TBD)."
      enum:
      - BALANCE
      - DEPOSIT
      - INSTALLMENT
      x-enum-elements:
      - name: BALANCE
        description: "Identifies that the payment request is for the balance amount,\
          \ after accounting for any \nother payment requests in the invoice: \n\n\
          - If the invoice specifies only a balance payment request, it refers to\
          \ the \ntotal amount identified by the associated order. \n- If the invoice\
          \ also specifies a deposit request, the balance payment request refers to\
          \ \nthe remaining amount.\n- `INSTALLMENT` and `BALANCE` are not allowed\
          \ together."
      - name: DEPOSIT
        description: "Identifies that the payment request is for a deposit. You have\
          \ the option of specifying \nan exact amount or a percentage of the total\
          \ order amount. If you request a deposit, \nit must be due before any other\
          \ payment requests."
      - name: INSTALLMENT
        description: "Identifies that the payment request is for an installment. An\
          \ invoice can request payments in installments. \nAlong with installments,\
          \ you can request an optional deposit. All these payment requests must add\
          \ to the total order amount."
      x-release-status: BETA
    InvoiceSortField:
      type: string
      description: Field to use for sorting.
      enum:
      - INVOICE_SORT_DATE
      x-enum-elements:
      - name: INVOICE_SORT_DATE
        description: |-
          The field works as follows:

          - If the invoice is a draft, it uses the invoice `created_at` date.
          - If the invoice is scheduled for publication, it uses the `scheduled_at` date.
          - If the invoice is published, it uses the invoice publication date.
      x-release-status: BETA
    InvoiceStatus:
      type: string
      description: Indicates the status of an invoice.
      enum:
      - DRAFT
      - UNPAID
      - SCHEDULED
      - PARTIALLY_PAID
      - PAID
      - PARTIALLY_REFUNDED
      - REFUNDED
      - CANCELED
      - FAILED
      - PAYMENT_PENDING
      x-enum-elements:
      - name: DRAFT
        description: |-
          The invoice is a draft. You must publish a draft invoice before Square can process it.
          A draft invoice has no `public_url`, so it is not available to customers.
      - name: UNPAID
        description: The invoice is published but not yet paid.
      - name: SCHEDULED
        description: |-
          The invoice is scheduled to be processed. On the scheduled date,
          Square emails the invoice (if the `request_method` is `EMAIL`),
          charges the customer's card (if the `request_method` is `CHARGE_CARD_ON_FILE`),
          or takes no action (if the `request_method` is `SHARE_MANUALLY`).
          The invoice status then changes accordingly (`UNPAID`, `PAID`, or `PARTIALLY_PAID`).
      - name: PARTIALLY_PAID
        description: A partial payment is received for the invoice.
      - name: PAID
        description: The customer paid the invoice in full.
      - name: PARTIALLY_REFUNDED
        description: |-
          The invoice is paid (or partially paid) and some but not all the amount paid is
          refunded.
      - name: REFUNDED
        description: The full amount that the customer paid for the invoice is refunded.
      - name: CANCELED
        description: |-
          The invoice is canceled. Square no longer requests payments from the customer.
          The `public_url` page remains and is accessible, but it displays the invoice
          as cancelled and does not accept payment.
      - name: FAILED
        description: Square canceled the invoice due to suspicious activity.
      - name: PAYMENT_PENDING
        description: "A payment on the invoice was initiated but has not yet been\
          \ processed. \n\nWhen in this state, invoices cannot be updated and other\
          \ payments cannot be initiated."
      x-release-status: BETA
    JobAssignmentPayType:
      type: string
      description: Enumerates the possible pay types that a job can be assigned.
      enum:
      - NONE
      - HOURLY
      - SALARY
      x-enum-elements:
      - name: NONE
        description: The job does not have a defined pay type.
      - name: HOURLY
        description: The job pays on an hourly basis.
      - name: SALARY
        description: The job pays an annual salary.
      x-release-status: PUBLIC
    LocationCapability:
      type: string
      description: The capabilities a location may have.
      enum:
      - CREDIT_CARD_PROCESSING
      x-enum-elements:
      - name: CREDIT_CARD_PROCESSING
        description: |-
          The permission to process credit card transactions with Square.

          The location can process credit cards if this value is present
          in the `capabilities` array of the `Location`.
      x-release-status: PUBLIC
    LocationStatus:
      type: string
      description: The status of the location, whether a location is active or inactive.
      enum:
      - ACTIVE
      - INACTIVE
      x-enum-elements:
      - name: ACTIVE
        description: A location that is active for business.
      - name: INACTIVE
        description: |-
          A location that is not active for business. Inactive locations just provide historical
          information, so typically clients limit interaction with or hide these locations.
      x-release-status: PUBLIC
    LocationType:
      type: string
      description: A location's physical or mobile type.
      enum:
      - PHYSICAL
      - MOBILE
      x-enum-elements:
      - name: PHYSICAL
        description: A place of business with a physical location.
      - name: MOBILE
        description: A place of business that is mobile, such as a food truck or online
          store.
      x-release-status: PUBLIC
    LoyaltyAccountMappingType:
      type: string
      description: The type of mapping.
      enum:
      - PHONE
      x-enum-elements:
      - name: PHONE
        description: The loyalty account is mapped by phone.
      x-release-status: BETA
    LoyaltyEventSource:
      type: string
      description: Defines whether the event was generated by the Square Point of
        Sale.
      enum:
      - SQUARE
      - LOYALTY_API
      x-enum-elements:
      - name: SQUARE
        description: The event is generated by the Square Point of Sale (POS).
      - name: LOYALTY_API
        description: The event is generated by something other than the Square Point
          of Sale that used the Loyalty API.
      x-release-status: BETA
    LoyaltyEventType:
      type: string
      description: The type of the loyalty event.
      enum:
      - ACCUMULATE_POINTS
      - CREATE_REWARD
      - REDEEM_REWARD
      - DELETE_REWARD
      - ADJUST_POINTS
      - EXPIRE_POINTS
      - OTHER
      x-enum-elements:
      - name: ACCUMULATE_POINTS
        description: Points are added to a loyalty account for a purchase.
      - name: CREATE_REWARD
        description: "A loyalty reward is created. For more information, see  \n[Loyalty\
          \ rewards](https://developer.squareup.com/docs/docs/loyalty-api/overview/#loyalty-overview-loyalty-rewards)."
      - name: REDEEM_REWARD
        description: A loyalty reward is redeemed.
      - name: DELETE_REWARD
        description: A loyalty reward is deleted.
      - name: ADJUST_POINTS
        description: Loyalty points are manually adjusted.
      - name: EXPIRE_POINTS
        description: "Loyalty points are expired according to the \nexpiration policy\
          \ of the loyalty program."
      - name: OTHER
        description: Some other loyalty event occurred.
      x-release-status: BETA
    LoyaltyProgramAccrualRuleType:
      type: string
      description: The type of the accrual rule that defines how buyers can earn points.
      enum:
      - VISIT
      - SPEND
      - ITEM_VARIATION
      - CATEGORY
      x-enum-elements:
      - name: VISIT
        description: "A visit-based accrual rule. A buyer earns points for each visit.\
          \ \nYou can specify the minimum purchase required."
      - name: SPEND
        description: "A spend-based accrual rule. A buyer earns points based on the\
          \ amount \nspent."
      - name: ITEM_VARIATION
        description: "An accrual rule based on an item variation. For example, accrue\
          \ \npoints for purchasing a coffee."
      - name: CATEGORY
        description: "An accrual rule based on an item category. For example, accrue\
          \ points \nfor purchasing any item in the \"hot drink\" category: coffee,\
          \ tea, or hot cocoa."
      x-release-status: BETA
    LoyaltyProgramRewardDefinitionScope:
      type: string
      description: Indicates the scope of the reward tier.
      enum:
      - ORDER
      - ITEM_VARIATION
      - CATEGORY
      x-enum-elements:
      - name: ORDER
        description: The discount applies to the entire order.
      - name: ITEM_VARIATION
        description: The discount applies only to specific item variations.
      - name: CATEGORY
        description: The discount applies only to items in the given categories.
      x-release-status: BETA
    LoyaltyProgramRewardDefinitionType:
      type: string
      description: The type of discount the reward tier offers.
      enum:
      - FIXED_AMOUNT
      - FIXED_PERCENTAGE
      x-enum-elements:
      - name: FIXED_AMOUNT
        description: The fixed amount discounted.
      - name: FIXED_PERCENTAGE
        description: The fixed percentage discounted.
      x-release-status: BETA
    LoyaltyProgramStatus:
      type: string
      description: Whether the program is currently active.
      enum:
      - INACTIVE
      - ACTIVE
      x-enum-elements:
      - name: INACTIVE
        description: "The loyalty program does not have an active subscription. \n\
          Loyalty API requests fail."
      - name: ACTIVE
        description: The program is fully functional. The program has an active subscription.
      x-release-status: BETA
    LoyaltyRewardStatus:
      type: string
      description: The status of the loyalty reward.
      enum:
      - ISSUED
      - REDEEMED
      - DELETED
      x-enum-elements:
      - name: ISSUED
        description: The reward is issued.
      - name: REDEEMED
        description: The reward is redeemed.
      - name: DELETED
        description: The reward is deleted.
      x-release-status: BETA
    MeasurementUnitArea:
      type: string
      description: Unit of area used to measure a quantity.
      enum:
      - IMPERIAL_ACRE
      - IMPERIAL_SQUARE_INCH
      - IMPERIAL_SQUARE_FOOT
      - IMPERIAL_SQUARE_YARD
      - IMPERIAL_SQUARE_MILE
      - METRIC_SQUARE_CENTIMETER
      - METRIC_SQUARE_METER
      - METRIC_SQUARE_KILOMETER
      x-enum-elements:
      - name: IMPERIAL_ACRE
        description: The area is measured in acres.
      - name: IMPERIAL_SQUARE_INCH
        description: The area is measured in square inches.
      - name: IMPERIAL_SQUARE_FOOT
        description: The area is measured in square feet.
      - name: IMPERIAL_SQUARE_YARD
        description: The area is measured in square yards.
      - name: IMPERIAL_SQUARE_MILE
        description: The area is measured in square miles.
      - name: METRIC_SQUARE_CENTIMETER
        description: The area is measured in square centimeters.
      - name: METRIC_SQUARE_METER
        description: The area is measured in square meters.
      - name: METRIC_SQUARE_KILOMETER
        description: The area is measured in square kilometers.
      x-release-status: BETA
    MeasurementUnitGeneric:
      type: string
      enum:
      - UNIT
      x-enum-elements:
      - name: UNIT
        description: The generic unit.
      x-release-status: BETA
    MeasurementUnitLength:
      type: string
      description: The unit of length used to measure a quantity.
      enum:
      - IMPERIAL_INCH
      - IMPERIAL_FOOT
      - IMPERIAL_YARD
      - IMPERIAL_MILE
      - METRIC_MILLIMETER
      - METRIC_CENTIMETER
      - METRIC_METER
      - METRIC_KILOMETER
      x-enum-elements:
      - name: IMPERIAL_INCH
        description: The length is measured in inches.
      - name: IMPERIAL_FOOT
        description: The length is measured in feet.
      - name: IMPERIAL_YARD
        description: The length is measured in yards.
      - name: IMPERIAL_MILE
        description: The length is measured in miles.
      - name: METRIC_MILLIMETER
        description: The length is measured in millimeters.
      - name: METRIC_CENTIMETER
        description: The length is measured in centimeters.
      - name: METRIC_METER
        description: The length is measured in meters.
      - name: METRIC_KILOMETER
        description: The length is measured in kilometers.
      x-release-status: BETA
    MeasurementUnitTime:
      type: string
      description: Unit of time used to measure a quantity (a duration).
      enum:
      - GENERIC_MILLISECOND
      - GENERIC_SECOND
      - GENERIC_MINUTE
      - GENERIC_HOUR
      - GENERIC_DAY
      x-enum-elements:
      - name: GENERIC_MILLISECOND
        description: The time is measured in milliseconds.
      - name: GENERIC_SECOND
        description: The time is measured in seconds.
      - name: GENERIC_MINUTE
        description: The time is measured in minutes.
      - name: GENERIC_HOUR
        description: The time is measured in hours.
      - name: GENERIC_DAY
        description: The time is measured in days.
      x-release-status: BETA
    MeasurementUnitUnitType:
      type: string
      description: Describes the type of this unit and indicates which field contains
        the unit information. This is an ‘open’ enum.
      enum:
      - TYPE_CUSTOM
      - TYPE_AREA
      - TYPE_LENGTH
      - TYPE_VOLUME
      - TYPE_WEIGHT
      - TYPE_GENERIC
      x-enum-elements:
      - name: TYPE_CUSTOM
        description: The unit details are contained in the custom_unit field.
      - name: TYPE_AREA
        description: The unit details are contained in the area_unit field.
      - name: TYPE_LENGTH
        description: The unit details are contained in the length_unit field.
      - name: TYPE_VOLUME
        description: The unit details are contained in the volume_unit field.
      - name: TYPE_WEIGHT
        description: The unit details are contained in the weight_unit field.
      - name: TYPE_GENERIC
        description: The unit details are contained in the generic_unit field.
      x-release-status: BETA
    MeasurementUnitVolume:
      type: string
      description: The unit of volume used to measure a quantity.
      enum:
      - GENERIC_FLUID_OUNCE
      - GENERIC_SHOT
      - GENERIC_CUP
      - GENERIC_PINT
      - GENERIC_QUART
      - GENERIC_GALLON
      - IMPERIAL_CUBIC_INCH
      - IMPERIAL_CUBIC_FOOT
      - IMPERIAL_CUBIC_YARD
      - METRIC_MILLILITER
      - METRIC_LITER
      x-enum-elements:
      - name: GENERIC_FLUID_OUNCE
        description: The volume is measured in ounces.
      - name: GENERIC_SHOT
        description: The volume is measured in shots.
      - name: GENERIC_CUP
        description: The volume is measured in cups.
      - name: GENERIC_PINT
        description: The volume is measured in pints.
      - name: GENERIC_QUART
        description: The volume is measured in quarts.
      - name: GENERIC_GALLON
        description: The volume is measured in gallons.
      - name: IMPERIAL_CUBIC_INCH
        description: The volume is measured in cubic inches.
      - name: IMPERIAL_CUBIC_FOOT
        description: The volume is measured in cubic feet.
      - name: IMPERIAL_CUBIC_YARD
        description: The volume is measured in cubic yards.
      - name: METRIC_MILLILITER
        description: The volume is measured in metric milliliters.
      - name: METRIC_LITER
        description: The volume is measured in metric liters.
      x-release-status: BETA
    MeasurementUnitWeight:
      type: string
      description: Unit of weight used to measure a quantity.
      enum:
      - IMPERIAL_WEIGHT_OUNCE
      - IMPERIAL_POUND
      - IMPERIAL_STONE
      - METRIC_MILLIGRAM
      - METRIC_GRAM
      - METRIC_KILOGRAM
      x-enum-elements:
      - name: IMPERIAL_WEIGHT_OUNCE
        description: The weight is measured in ounces.
      - name: IMPERIAL_POUND
        description: The weight is measured in pounds.
      - name: IMPERIAL_STONE
        description: The weight is measured in stones.
      - name: METRIC_MILLIGRAM
        description: The weight is measured in milligrams.
      - name: METRIC_GRAM
        description: The weight is measured in grams.
      - name: METRIC_KILOGRAM
        description: The weight is measured in kilograms.
      x-release-status: BETA
    MerchantStatus:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
      x-enum-elements:
      - name: ACTIVE
        description: A fully operational merchant account. The merchant can interact
          with Square products and APIs.
      - name: INACTIVE
        description: |-
          A functionally limited merchant account. The merchant can only have limited interaction
          via Square APIs. The merchant cannot access the seller dashboard.
      x-release-status: PUBLIC
    OAuthPermission:
      type: string
      description: |-
        When you direct your user to the permissions form, you specify the
        scope of the permissions your application will have. Personal access tokens
        have all available permissions (at the time the application was created) by default.

        <aside class="important">
        Never request more than the minimum permissions required for your application
        to function properly.
        </aside>
      enum:
      - BANK_ACCOUNTS_READ
      - CASH_DRAWER_READ
      - CUSTOMERS_READ
      - CUSTOMERS_WRITE
      - DEVICE_CREDENTIAL_MANAGEMENT
      - EMPLOYEES_READ
      - EMPLOYEES_WRITE
      - INVENTORY_READ
      - INVENTORY_WRITE
      - ITEMS_READ
      - ITEMS_WRITE
      - LOYALTY_READ
      - LOYALTY_WRITE
      - MERCHANT_PROFILE_READ
      - ORDERS_READ
      - ORDERS_WRITE
      - PAYMENTS_READ
      - PAYMENTS_WRITE
      - PAYMENTS_WRITE_ADDITIONAL_RECIPIENTS
      - PAYMENTS_WRITE_IN_PERSON
      - SETTLEMENTS_READ
      - TIMECARDS_READ
      - TIMECARDS_WRITE
      - TIMECARDS_SETTINGS_READ
      - TIMECARDS_SETTINGS_WRITE
      x-enum-elements:
      - name: BANK_ACCOUNTS_READ
        description: |-
          __HTTP Method__: `GET`

          Grants read access to bank account information associated with the targeted
          Square account. For example, to call the Connect v1 ListBankAccounts endpoint.
      - name: CASH_DRAWER_READ
        description: |-
          __HTTP Method__: `GET`

          Grants read access to cash drawer shift information. For example, to call the
          ListCashDrawerShifts endpoint.
      - name: CUSTOMERS_READ
        description: |-
          __HTTP Method__: `GET`

          Grants read access to customer information. For example, to call the
          ListCustomers endpoint.
      - name: CUSTOMERS_WRITE
        description: |-
          __HTTP Method__: `POST`, `PUT`, `DELETE`

          Grants write access to customer information. For example, to create and update
          customer profiles.
      - name: DEVICE_CREDENTIAL_MANAGEMENT
        description: |-
          __HTTP Method__: `POST`, `GET`

          Grants read/write access to device credentials information. For example, to
          call the CreateDeviceCode endpoint.
      - name: EMPLOYEES_READ
        description: |-
          __HTTP Method__: `GET`

          Grants read access to employee profile information. For example, to call the
          Connect v1 Employees API.
      - name: EMPLOYEES_WRITE
        description: |-
          __HTTP Method__: `POST`, `PUT`, `DELETE`

          Grants write access to employee profile information. For example, to create
          and modify employee profiles.
      - name: INVENTORY_READ
        description: |-
          __HTTP Method__: `GET`

          Grants read access to inventory information. For example, to call the
          RetrieveInventoryCount endpoint.
      - name: INVENTORY_WRITE
        description: |-
          __HTTP Method__:  `POST`, `PUT`, `DELETE`

          Grants write access to inventory information. For example, to call the
          BatchChangeInventory endpoint.
      - name: ITEMS_READ
        description: |-
          __HTTP Method__: `GET`

          Grants read access to business and location information. For example, to
          obtain a location ID for subsequent activity.
      - name: ITEMS_WRITE
        description: |-
          __HTTP Method__: `POST`, `PUT`, `DELETE`

          Grants write access to product catalog information. For example, to modify or
          add to a product catalog.
      - name: LOYALTY_READ
        description: |-
          __HTTP Method__: `GET`

          Grants read access to loyalty information. For example, to call the
          ListLoyaltyPrograms endpoint.
      - name: LOYALTY_WRITE
        description: |-
          __HTTP Method__: `POST`, `PUT`, `DELETE`

          Grants write access to loyalty information. For example, to call the
          CreateLoyaltyAccount endpoint.
      - name: MERCHANT_PROFILE_READ
        description: |-
          __HTTP Method__: `GET`

          Grants read access to business and location information. For example, to
          obtain a location ID for subsequent activity.
      - name: ORDERS_READ
        description: |-
          __HTTP Method__: `GET`

          Grants read access to order information. For example, to call the
          BatchRetrieveOrders endpoint.
      - name: ORDERS_WRITE
        description: |-
          __HTTP Method__: `POST`, `PUT`, `DELETE`

          Grants write access to order information. For example, to call the
          CreateCheckout endpoint.
      - name: PAYMENTS_READ
        description: |-
          __HTTP Method__: `GET`

          Grants read access to transaction and refund information. For example, to call
          the RetrieveTransaction endpoint.
      - name: PAYMENTS_WRITE
        description: |-
          __HTTP Method__: `POST`, `PUT`, `DELETE`

          Grants write access to transaction and refunds information. For example, to
          process payments with the Payments or Checkout API.
      - name: PAYMENTS_WRITE_ADDITIONAL_RECIPIENTS
        description: |-
          __HTTP Method__: `POST`, `PUT`, `DELETE`

          Allow third party applications to deduct a portion of each transaction amount.
          __Required__ to use multiparty transaction functionality with the Payments
          API.
      - name: PAYMENTS_WRITE_IN_PERSON
        description: |-
          __HTTP Method__: `POST`, `PUT`, `DELETE`

          Grants write access to payments and refunds information. For example, to
          process in-person payments.
      - name: SETTLEMENTS_READ
        description: |-
          __HTTP Method__: `GET`

          Grants read access to settlement (deposit) information. For example, to call
          the Connect v1 ListSettlements endpoint.
      - name: TIMECARDS_READ
        description: |-
          __HTTP Method__: `GET`

          Grants read access to employee timecard information. For example, to call the
          Connect v2 SearchShifts endpoint.
      - name: TIMECARDS_WRITE
        description: |-
          __HTTP Method__: `POST`, `PUT`, `DELETE`

          Grants write access to employee shift information. For example, to create
          and modify employee shifts.
      - name: TIMECARDS_SETTINGS_READ
        description: |-
          __HTTP Method__: `GET`

          Grants read access to employee timecard settings information. For example, to
          call the GetBreakType endpoint.
      - name: TIMECARDS_SETTINGS_WRITE
        description: |-
          __HTTP Method__: `POST`, `PUT`, `DELETE`

          Grants write access to employee timecard settings information. For example, to
          call the UpdateBreakType endpoint.
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    OauthAuthorizationRevokedWebhookRevokerType:
      type: string
      description: Defines the possible types for the revoking client.
      enum:
      - APPLICATION
      - MERCHANT
      - SQUARE
      x-enum-elements:
      - name: APPLICATION
        description: The application that requested access to a merchant's data.
      - name: MERCHANT
        description: The admin for the merchant.
      - name: SQUARE
        description: An internal Square employee.
      x-release-status: BETA
      x-visibility: DOC_ONLY
    OrderFulfillmentPickupDetailsScheduleType:
      type: string
      description: The schedule type of the pickup fulfillment.
      enum:
      - SCHEDULED
      - ASAP
      x-enum-elements:
      - name: SCHEDULED
        description: Indicates the fulfillment will be picked up at a scheduled pickup
          time.
      - name: ASAP
        description: |-
          Indicates the fulfillment will be picked up as soon as possible and
          should be prepared immediately.
      x-release-status: PUBLIC
    OrderFulfillmentState:
      type: string
      description: The current state of this fulfillment.
      enum:
      - PROPOSED
      - RESERVED
      - PREPARED
      - COMPLETED
      - CANCELED
      - FAILED
      x-enum-elements:
      - name: PROPOSED
        description: Indicates the fulfillment has been proposed.
      - name: RESERVED
        description: Indicates the fulfillment has been reserved.
      - name: PREPARED
        description: Indicates the fulfillment has been prepared.
      - name: COMPLETED
        description: Indicates the fulfillment was successfully completed.
      - name: CANCELED
        description: Indicates the fulfillment was canceled.
      - name: FAILED
        description: |-
          Indicates the fulfillment failed to be completed but was not explicitly
          canceled.
      x-release-status: PUBLIC
    OrderFulfillmentType:
      type: string
      description: The type of fulfillment.
      enum:
      - PICKUP
      - SHIPMENT
      x-enum-elements:
      - name: PICKUP
        description: |-
          A fulfillment to be picked up from a physical [location](#type-location)
          by a recipient.
      - name: SHIPMENT
        description: A fulfillment to be shipped by a shipping carrier.
      x-release-status: PUBLIC
    OrderLineItemDiscountScope:
      type: string
      description: Indicates whether this is a line item or order level discount.
      enum:
      - OTHER_DISCOUNT_SCOPE
      - LINE_ITEM
      - ORDER
      x-enum-elements:
      - name: OTHER_DISCOUNT_SCOPE
        description: |-
          Used for reporting only.
          The original transaction discount scope is currently not supported by the API.
      - name: LINE_ITEM
        description: |-
          The discount should be applied to only line items specified by
          `OrderLineItemAppliedDiscount` reference records.
      - name: ORDER
        description: The discount should be applied to the entire order.
      x-release-status: PUBLIC
    OrderLineItemDiscountType:
      type: string
      description: Indicates how the discount is applied to the associated line item
        or order.
      enum:
      - UNKNOWN_DISCOUNT
      - FIXED_PERCENTAGE
      - FIXED_AMOUNT
      - VARIABLE_PERCENTAGE
      - VARIABLE_AMOUNT
      x-enum-elements:
      - name: UNKNOWN_DISCOUNT
        description: |-
          Used for reporting only.
          The original transaction discount type is currently not supported by the API.
      - name: FIXED_PERCENTAGE
        description: Apply the discount as a fixed percentage (e.g., 5%) off the item
          price.
      - name: FIXED_AMOUNT
        description: Apply the discount as a fixed monetary value (e.g., $1.00) off
          the item price.
      - name: VARIABLE_PERCENTAGE
        description: |-
          Apply the discount as a variable percentage based on the item
          price.

          The specific discount percentage of a `VARIABLE_PERCENTAGE` discount
          is assigned at the time of the purchase.
      - name: VARIABLE_AMOUNT
        description: |-
          Apply the discount as a variable amount based on the item price.

          The specific discount amount of a `VARIABLE_AMOUNT` discount
          is assigned at the time of the purchase.
      x-release-status: PUBLIC
    OrderLineItemTaxScope:
      type: string
      description: Indicates whether this is a line item or order level tax.
      enum:
      - OTHER_TAX_SCOPE
      - LINE_ITEM
      - ORDER
      x-enum-elements:
      - name: OTHER_TAX_SCOPE
        description: |-
          Used for reporting only.
          The original transaction tax scope is currently not supported by the API.
      - name: LINE_ITEM
        description: |-
          The tax should be applied only to line items specified by
          the `OrderLineItemAppliedTax` reference records.
      - name: ORDER
        description: The tax should be applied to the entire order.
      x-release-status: PUBLIC
    OrderLineItemTaxType:
      type: string
      description: Indicates how the tax is applied to the associated line item or
        order.
      enum:
      - UNKNOWN_TAX
      - ADDITIVE
      - INCLUSIVE
      x-enum-elements:
      - name: UNKNOWN_TAX
        description: |-
          Used for reporting only.
          The original transaction tax type is currently not supported by the API.
      - name: ADDITIVE
        description: |-
          The tax is an additive tax. The tax amount is added on top of the price.
          For example, an item with a cost of 1.00 USD and a 10% additive tax would have a total
          cost to the buyer of 1.10 USD.
      - name: INCLUSIVE
        description: |-
          The tax is an inclusive tax. Inclusive taxes are already included
          in the line item price or order total. For example, an item with cost
          1.00 USD with a 10% inclusive tax would have a pre-tax cost of 0.91 USD
          (91 cents) and a 0.09 (9 cents) tax for a total cost of 1.00 USD to
          the buyer.
      x-release-status: PUBLIC
    OrderServiceChargeCalculationPhase:
      type: string
      description: |-
        Represents a phase in the process of calculating order totals.
        Service charges are applied __after__ the indicated phase.

        [Read more about how order totals are calculated.](https://developer.squareup.com/docs/docs/orders-api/how-it-works#how-totals-are-calculated)
      enum:
      - SUBTOTAL_PHASE
      - TOTAL_PHASE
      x-enum-elements:
      - name: SUBTOTAL_PHASE
        description: |-
          The service charge will be applied after discounts, but before
          taxes.
      - name: TOTAL_PHASE
        description: |-
          The service charge will be applied after all discounts and taxes
          are applied.
      x-release-status: PUBLIC
    OrderState:
      type: string
      description: The state of the order.
      enum:
      - OPEN
      - COMPLETED
      - CANCELED
      x-enum-elements:
      - name: OPEN
        description: Indicates the order is open. Open orders may be updated.
      - name: COMPLETED
        description: Indicates the order is completed. Completed orders are fully
          paid. This is a terminal state.
      - name: CANCELED
        description: Indicates the order is canceled. Canceled orders are not paid.
          This is a terminal state.
      x-release-status: PUBLIC
    Product:
      type: string
      description: Indicates the Square product used to generate an inventory change.
      enum:
      - SQUARE_POS
      - EXTERNAL_API
      - BILLING
      - APPOINTMENTS
      - INVOICES
      - ONLINE_STORE
      - PAYROLL
      - DASHBOARD
      - ITEM_LIBRARY_IMPORT
      - OTHER
      x-enum-elements:
      - name: SQUARE_POS
        description: Square Point of Sale application.
      - name: EXTERNAL_API
        description: Square Connect APIs (Transactions API, Checkout API).
      - name: BILLING
        description: A Square subscription (various products).
      - name: APPOINTMENTS
        description: Square Appointments.
      - name: INVOICES
        description: Square Invoices.
      - name: ONLINE_STORE
        description: Square Online Store.
      - name: PAYROLL
        description: Square Payroll.
      - name: DASHBOARD
        description: Square Dashboard
      - name: ITEM_LIBRARY_IMPORT
        description: Item Library Import
      - name: OTHER
        description: A Square product that does not match any other value.
      x-release-status: PUBLIC
    ProductType:
      type: string
      enum:
      - TERMINAL_API
      x-enum-elements:
      - name: TERMINAL_API
        description: ""
      x-release-status: BETA
    RefundStatus:
      type: string
      description: Indicates a refund's current status.
      enum:
      - PENDING
      - APPROVED
      - REJECTED
      - FAILED
      x-enum-elements:
      - name: PENDING
        description: The refund is pending.
      - name: APPROVED
        description: The refund has been approved by Square.
      - name: REJECTED
        description: The refund has been rejected by Square.
      - name: FAILED
        description: The refund failed.
      x-release-status: PUBLIC
    RegisterDomainResponseStatus:
      type: string
      description: The status of domain registration.
      enum:
      - PENDING
      - VERIFIED
      x-enum-elements:
      - name: PENDING
        description: The domain is added, but not verified.
      - name: VERIFIED
        description: The domain is added and verified. It can be used to accept Apple
          Pay transactions.
      x-release-status: PUBLIC
    SearchCatalogItemsRequestStockLevel:
      type: string
      description: Defines supported stock levels of the item inventory.
      enum:
      - OUT
      - LOW
      x-enum-elements:
      - name: OUT
        description: The item inventory is empty.
      - name: LOW
        description: The item inventory is low.
      x-release-status: BETA
    SearchOrdersSortField:
      type: string
      description: Specifies which timestamp to use to sort SearchOrder results.
      enum:
      - CREATED_AT
      - UPDATED_AT
      - CLOSED_AT
      x-enum-elements:
      - name: CREATED_AT
        description: |-
          Time when the order was created in RFC-3339 format. If you are also
          filtering for a time range in this query, you must set the `CREATED_AT`
          field in your DateTimeFilter.
      - name: UPDATED_AT
        description: |-
          Time when the order last updated in RFC-3339 format. If you are also
          filtering for a time range in this query, you must set the `UPDATED_AT`
          field in your DateTimeFilter.
      - name: CLOSED_AT
        description: |-
          Time when the order was closed in RFC-3339 format. If you use this
          value, you must also set a StateFilter with closed states. If you are also
          filtering for a time range in this query, you must set the `CLOSED_AT`
          field in your DateTimeFilter.
      x-release-status: PUBLIC
    ShiftFilterStatus:
      type: string
      description: Specifies the `status` of `Shift` records to be returned.
      enum:
      - OPEN
      - CLOSED
      x-enum-elements:
      - name: OPEN
        description: Shifts that have been started and not ended.
      - name: CLOSED
        description: Shifts that have been started and ended.
      x-release-status: PUBLIC
    ShiftSortField:
      type: string
      description: Enumerates the `Shift` fields to sort on.
      enum:
      - START_AT
      - END_AT
      - CREATED_AT
      - UPDATED_AT
      x-enum-elements:
      - name: START_AT
        description: The start date/time of a `Shift`
      - name: END_AT
        description: The end date/time of a `Shift`
      - name: CREATED_AT
        description: The date/time that a `Shift` is created
      - name: UPDATED_AT
        description: The most recent date/time that a `Shift` is updated
      x-release-status: PUBLIC
    ShiftStatus:
      type: string
      description: Enumerates the possible status of a `Shift`
      enum:
      - OPEN
      - CLOSED
      x-enum-elements:
      - name: OPEN
        description: Employee started a work shift and the shift is not complete
      - name: CLOSED
        description: Employee started and ended a work shift.
      x-release-status: PUBLIC
    ShiftWorkdayMatcher:
      type: string
      description: Defines the logic used to apply a workday filter.
      enum:
      - START_AT
      - END_AT
      - INTERSECTION
      x-enum-elements:
      - name: START_AT
        description: All shifts that start on or after the specified workday
      - name: END_AT
        description: All shifts that end on or before the specified workday
      - name: INTERSECTION
        description: All shifts that start between the start and end workdays (inclusive)
      x-release-status: PUBLIC
    SortOrder:
      type: string
      description: The order (e.g., chronological or alphabetical) in which results
        from a request are returned.
      enum:
      - DESC
      - ASC
      x-enum-elements:
      - name: DESC
        description: The results are returned in descending (e.g., newest-first or
          Z-A) order.
      - name: ASC
        description: The results are returned in ascending (e.g., oldest-first or
          A-Z) order.
      x-release-status: PUBLIC
    SubscriptionCadence:
      type: string
      description: Determines the billing cadence of a [Subscription](#type-Subscription)
      enum:
      - DAILY
      - WEEKLY
      - EVERY_TWO_WEEKS
      - THIRTY_DAYS
      - SIXTY_DAYS
      - NINETY_DAYS
      - MONTHLY
      - EVERY_TWO_MONTHS
      - QUARTERLY
      - EVERY_FOUR_MONTHS
      - EVERY_SIX_MONTHS
      - ANNUAL
      - EVERY_TWO_YEARS
      x-enum-elements:
      - name: DAILY
        description: Once per day
      - name: WEEKLY
        description: Once per week
      - name: EVERY_TWO_WEEKS
        description: Every two weeks
      - name: THIRTY_DAYS
        description: Once every 30 days
      - name: SIXTY_DAYS
        description: Once every 60 days
      - name: NINETY_DAYS
        description: Once every 90 days
      - name: MONTHLY
        description: Once per month
      - name: EVERY_TWO_MONTHS
        description: Once every two months
      - name: QUARTERLY
        description: Once every three months
      - name: EVERY_FOUR_MONTHS
        description: Once every four months
      - name: EVERY_SIX_MONTHS
        description: Once every six months
      - name: ANNUAL
        description: Once per year
      - name: EVERY_TWO_YEARS
        description: Once every two years
      x-release-status: BETA
    SubscriptionEventSubscriptionEventType:
      type: string
      description: The possible subscription event types.
      enum:
      - START_SUBSCRIPTION
      - PLAN_CHANGE
      - STOP_SUBSCRIPTION
      x-enum-elements:
      - name: START_SUBSCRIPTION
        description: The subscription started.
      - name: PLAN_CHANGE
        description: The subscription plan changed.
      - name: STOP_SUBSCRIPTION
        description: The subscription stopped.
      x-release-status: BETA
    SubscriptionStatus:
      type: string
      description: Possible subscription status values.
      enum:
      - DEFAULT_SUBSCRIPTION_STATUS_DO_NOT_USE
      - PENDING
      - ACTIVE
      - CANCELED
      x-enum-elements:
      - name: DEFAULT_SUBSCRIPTION_STATUS_DO_NOT_USE
        description: ""
      - name: PENDING
        description: The subscription starts in the future.
      - name: ACTIVE
        description: The subscription is active.
      - name: CANCELED
        description: The subscription is canceled.
      x-release-status: BETA
    TaxCalculationPhase:
      type: string
      description: When to calculate the taxes due on a cart.
      enum:
      - TAX_SUBTOTAL_PHASE
      - TAX_TOTAL_PHASE
      x-enum-elements:
      - name: TAX_SUBTOTAL_PHASE
        description: The fee is calculated based on the payment's subtotal.
      - name: TAX_TOTAL_PHASE
        description: The fee is calculated based on the payment's total.
      x-release-status: PUBLIC
    TaxInclusionType:
      type: string
      description: Whether to the tax amount should be additional to or included in
        the CatalogItem price.
      enum:
      - ADDITIVE
      - INCLUSIVE
      x-enum-elements:
      - name: ADDITIVE
        description: |-
          The tax is an additive tax. The tax amount is added on top of the
          CatalogItemVariation price. For example, a $1.00 item with a 10% additive
          tax would have a total cost to the buyer of $1.10.
      - name: INCLUSIVE
        description: |-
          The tax is an inclusive tax. The tax amount is included in the
          CatalogItemVariation price. For example, a $1.00 item with a 10% inclusive
          tax would have a total cost to the buyer of $1.00, with $0.91 (91 cents) of
          that total being the cost of the item and $0.09 (9 cents) being tax.
      x-release-status: PUBLIC
    TeamMemberAssignedLocationsAssignmentType:
      type: string
      description: Enumerates the possible assignment types the team member can have
      enum:
      - ALL_CURRENT_AND_FUTURE_LOCATIONS
      - EXPLICIT_LOCATIONS
      x-enum-elements:
      - name: ALL_CURRENT_AND_FUTURE_LOCATIONS
        description: |-
          The team member is assigned to all curent and future locations - the location_ids field
          is empty if the team member has this assignment type.
      - name: EXPLICIT_LOCATIONS
        description: |-
          The team member is assigned to an explicit subset of locations - the location_ids field
          is the list of locations that the team member is assigned to.
      x-release-status: PUBLIC
    TeamMemberStatus:
      type: string
      description: Enumerates the possible statuses the team member can have within
        a business.
      enum:
      - ACTIVE
      - INACTIVE
      x-enum-elements:
      - name: ACTIVE
        description: The team member can log in to Point of Sale and Dashboard.
      - name: INACTIVE
        description: |-
          The team member can no longer log in to Point of Sale or Dashboard,
          but their sales reports remain available.
      x-release-status: PUBLIC
    TenderBankTransferDetailsStatus:
      type: string
      description: Indicates the bank transfer's current status.
      enum:
      - PENDING
      - COMPLETED
      - FAILED
      x-enum-elements:
      - name: PENDING
        description: The bank transfer is in progress.
      - name: COMPLETED
        description: The bank transfer has been completed.
      - name: FAILED
        description: The bank transfer failed.
      x-release-status: PUBLIC
    TenderCardDetailsEntryMethod:
      type: string
      description: Indicates the method used to enter the card's details.
      enum:
      - SWIPED
      - KEYED
      - EMV
      - ON_FILE
      - CONTACTLESS
      x-enum-elements:
      - name: SWIPED
        description: The card was swiped through a Square reader or Square stand.
      - name: KEYED
        description: |-
          The card information was keyed manually into Square Point of Sale or a
          Square-hosted web form.
      - name: EMV
        description: The card was processed via EMV with a Square reader.
      - name: ON_FILE
        description: The buyer's card details were already on file with Square.
      - name: CONTACTLESS
        description: |-
          The card was processed via a contactless (i.e., NFC) transaction
          with a Square reader.
      x-release-status: PUBLIC
    TenderCardDetailsStatus:
      type: string
      description: Indicates the card transaction's current status.
      enum:
      - AUTHORIZED
      - CAPTURED
      - VOIDED
      - FAILED
      x-enum-elements:
      - name: AUTHORIZED
        description: The card transaction has been authorized but not yet captured.
      - name: CAPTURED
        description: The card transaction was authorized and subsequently captured
          (i.e., completed).
      - name: VOIDED
        description: The card transaction was authorized and subsequently voided (i.e.,
          canceled).
      - name: FAILED
        description: The card transaction failed.
      x-release-status: PUBLIC
    TenderType:
      type: string
      description: Indicates a tender's type.
      enum:
      - CARD
      - CASH
      - THIRD_PARTY_CARD
      - SQUARE_GIFT_CARD
      - NO_SALE
      - BANK_TRANSFER
      - OTHER
      x-enum-elements:
      - name: CARD
        description: A credit card.
      - name: CASH
        description: Cash.
      - name: THIRD_PARTY_CARD
        description: |-
          A credit card processed with a card processor other than Square.

          This value applies only to merchants in countries where Square does not
          yet provide card processing.
      - name: SQUARE_GIFT_CARD
        description: A Square gift card.
      - name: NO_SALE
        description: This tender represents the register being opened for a "no sale"
          event.
      - name: BANK_TRANSFER
        description: An ACH payment.
      - name: OTHER
        description: A form of tender that does not match any other value.
      x-release-status: PUBLIC
    TransactionProduct:
      type: string
      description: Indicates the Square product used to process a transaction.
      enum:
      - REGISTER
      - EXTERNAL_API
      - BILLING
      - APPOINTMENTS
      - INVOICES
      - ONLINE_STORE
      - PAYROLL
      - OTHER
      x-enum-elements:
      - name: REGISTER
        description: Square Point of Sale.
      - name: EXTERNAL_API
        description: The Square Connect API.
      - name: BILLING
        description: A Square subscription for one of multiple products.
      - name: APPOINTMENTS
        description: Square Appointments.
      - name: INVOICES
        description: Square Invoices.
      - name: ONLINE_STORE
        description: Square Online Store.
      - name: PAYROLL
        description: Square Payroll.
      - name: OTHER
        description: A Square product that does not match any other value.
      x-release-status: DEPRECATED
    TransactionType:
      type: string
      description: Transaction type used in the disputed payment.
      enum:
      - DEBIT
      - CREDIT
      x-enum-elements:
      - name: DEBIT
        description: ""
      - name: CREDIT
        description: ""
      x-release-status: BETA
    V1AdjustInventoryRequestAdjustmentType:
      type: string
      enum:
      - SALE
      - RECEIVE_STOCK
      - MANUAL_ADJUST
      x-enum-elements:
      - name: SALE
        description: ""
      - name: RECEIVE_STOCK
        description: ""
      - name: MANUAL_ADJUST
        description: ""
      x-release-status: DEPRECATED
    V1BankAccountType:
      type: string
      enum:
      - BUSINESS_CHECKING
      - CHECKING
      - INVESTMENT
      - LOAN
      - SAVINGS
      - OTHER
      x-enum-elements:
      - name: BUSINESS_CHECKING
        description: ""
      - name: CHECKING
        description: ""
      - name: INVESTMENT
        description: ""
      - name: LOAN
        description: ""
      - name: SAVINGS
        description: ""
      - name: OTHER
        description: ""
      x-release-status: DEPRECATED
    V1CashDrawerEventEventType:
      type: string
      enum:
      - NO_SALE
      - CASH_TENDER_PAYMENT
      - OTHER_TENDER_PAYMENT
      - CASH_TENDER_CANCELED_PAYMENT
      - OTHER_TENDER_CANCELED_PAYMENT
      - CASH_TENDER_REFUND
      - OTHER_TENDER_REFUND
      - PAID_IN
      - PAID_OUT
      x-enum-elements:
      - name: NO_SALE
        description: ""
      - name: CASH_TENDER_PAYMENT
        description: ""
      - name: OTHER_TENDER_PAYMENT
        description: ""
      - name: CASH_TENDER_CANCELED_PAYMENT
        description: ""
      - name: OTHER_TENDER_CANCELED_PAYMENT
        description: ""
      - name: CASH_TENDER_REFUND
        description: ""
      - name: OTHER_TENDER_REFUND
        description: ""
      - name: PAID_IN
        description: ""
      - name: PAID_OUT
        description: ""
      x-release-status: DEPRECATED
    V1CashDrawerShiftEventType:
      type: string
      enum:
      - OPEN
      - ENDED
      - CLOSED
      x-enum-elements:
      - name: OPEN
        description: ""
      - name: ENDED
        description: ""
      - name: CLOSED
        description: ""
      x-release-status: DEPRECATED
    V1CreateRefundRequestType:
      type: string
      enum:
      - FULL
      - PARTIAL
      x-enum-elements:
      - name: FULL
        description: ""
      - name: PARTIAL
        description: ""
      x-release-status: PUBLIC
    V1DiscountColor:
      type: string
      enum:
      - 9da2a6
      - 4ab200
      - 0b8000
      - 2952cc
      - a82ee5
      - e5457a
      - b21212
      - 593c00
      - e5BF00
      x-enum-elements:
      - name: 9da2a6
        description: ""
      - name: 4ab200
        description: ""
      - name: 0b8000
        description: ""
      - name: 2952cc
        description: ""
      - name: a82ee5
        description: ""
      - name: e5457a
        description: ""
      - name: b21212
        description: ""
      - name: 593c00
        description: ""
      - name: e5BF00
        description: ""
      x-release-status: DEPRECATED
    V1DiscountDiscountType:
      type: string
      enum:
      - FIXED
      - VARIABLE_PERCENTAGE
      - VARIABLE_AMOUNT
      x-enum-elements:
      - name: FIXED
        description: ""
      - name: VARIABLE_PERCENTAGE
        description: ""
      - name: VARIABLE_AMOUNT
        description: ""
      x-release-status: DEPRECATED
    V1EmployeeRolePermissions:
      type: string
      enum:
      - REGISTER_ACCESS_SALES_HISTORY
      - REGISTER_APPLY_RESTRICTED_DISCOUNTS
      - REGISTER_CHANGE_SETTINGS
      - REGISTER_EDIT_ITEM
      - REGISTER_ISSUE_REFUNDS
      - REGISTER_OPEN_CASH_DRAWER_OUTSIDE_SALE
      - REGISTER_VIEW_SUMMARY_REPORTS
      x-enum-elements:
      - name: REGISTER_ACCESS_SALES_HISTORY
        description: ""
      - name: REGISTER_APPLY_RESTRICTED_DISCOUNTS
        description: ""
      - name: REGISTER_CHANGE_SETTINGS
        description: ""
      - name: REGISTER_EDIT_ITEM
        description: ""
      - name: REGISTER_ISSUE_REFUNDS
        description: ""
      - name: REGISTER_OPEN_CASH_DRAWER_OUTSIDE_SALE
        description: ""
      - name: REGISTER_VIEW_SUMMARY_REPORTS
        description: ""
      x-release-status: PUBLIC
    V1EmployeeStatus:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
      x-enum-elements:
      - name: ACTIVE
        description: ""
      - name: INACTIVE
        description: ""
      x-release-status: PUBLIC
    V1FeeAdjustmentType:
      type: string
      enum:
      - TAX
      x-enum-elements:
      - name: TAX
        description: ""
      x-release-status: DEPRECATED
    V1FeeCalculationPhase:
      type: string
      enum:
      - FEE_SUBTOTAL_PHASE
      - OTHER
      - FEE_TOTAL_PHASE
      x-enum-elements:
      - name: FEE_SUBTOTAL_PHASE
        description: ""
      - name: OTHER
        description: ""
      - name: FEE_TOTAL_PHASE
        description: ""
      x-release-status: DEPRECATED
    V1FeeInclusionType:
      type: string
      enum:
      - ADDITIVE
      - INCLUSIVE
      x-enum-elements:
      - name: ADDITIVE
        description: ""
      - name: INCLUSIVE
        description: ""
      x-release-status: DEPRECATED
    V1FeeType:
      type: string
      enum:
      - CA_GST
      - CA_HST
      - CA_PST
      - CA_QST
      - JP_CONSUMPTION_TAX
      - CA_PEI_PST
      - US_SALES_TAX
      - OTHER
      x-enum-elements:
      - name: CA_GST
        description: ""
      - name: CA_HST
        description: ""
      - name: CA_PST
        description: ""
      - name: CA_QST
        description: ""
      - name: JP_CONSUMPTION_TAX
        description: ""
      - name: CA_PEI_PST
        description: ""
      - name: US_SALES_TAX
        description: ""
      - name: OTHER
        description: ""
      x-release-status: DEPRECATED
    V1ItemColor:
      type: string
      enum:
      - 9da2a6
      - 4ab200
      - 0b8000
      - 2952cc
      - a82ee5
      - e5457a
      - b21212
      - 593c00
      - e5BF00
      x-enum-elements:
      - name: 9da2a6
        description: ""
      - name: 4ab200
        description: ""
      - name: 0b8000
        description: ""
      - name: 2952cc
        description: ""
      - name: a82ee5
        description: ""
      - name: e5457a
        description: ""
      - name: b21212
        description: ""
      - name: 593c00
        description: ""
      - name: e5BF00
        description: ""
      x-release-status: DEPRECATED
    V1ItemType:
      type: string
      enum:
      - NORMAL
      - GIFT_CARD
      - OTHER
      x-enum-elements:
      - name: NORMAL
        description: ""
      - name: GIFT_CARD
        description: ""
      - name: OTHER
        description: ""
      x-release-status: DEPRECATED
    V1ItemVisibility:
      type: string
      enum:
      - PUBLIC
      - PRIVATE
      x-enum-elements:
      - name: PUBLIC
        description: ""
      - name: PRIVATE
        description: ""
      x-release-status: DEPRECATED
    V1ListEmployeesRequestStatus:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
      x-enum-elements:
      - name: ACTIVE
        description: ""
      - name: INACTIVE
        description: ""
      x-release-status: PUBLIC
    V1ListSettlementsRequestStatus:
      type: string
      enum:
      - SENT
      - FAILED
      x-enum-elements:
      - name: SENT
        description: ""
      - name: FAILED
        description: ""
      x-release-status: PUBLIC
    V1MerchantAccountType:
      type: string
      enum:
      - LOCATION
      - BUSINESS
      x-enum-elements:
      - name: LOCATION
        description: ""
      - name: BUSINESS
        description: ""
      x-release-status: DEPRECATED
    V1MerchantBusinessType:
      type: string
      enum:
      - ACCOUNTING
      - APPAREL_AND_ACCESSORY_SHOPS
      - ART_DEALERS_GALLERIES
      - ART_DESIGN_AND_PHOTOGRAPHY
      - BAR_CLUB_LOUNGE
      - BEAUTY_AND_BARBER_SHOPS
      - BOOK_STORES
      - BUSINESS_SERVICES
      - CATERING
      - CHARITABLE_SOCIAL_SERVICE_ORGANIZATIONS
      - CHARITIBLE_ORGS
      - CLEANING_SERVICES
      - COMPUTER_EQUIPMENT_SOFTWARE_MAINTENANCE_REPAIR_SERVICES
      - CONSULTANT
      - CONTRACTORS
      - DELIVERY_SERVICES
      - DENTISTRY
      - EDUCATION
      - FOOD_STORES_CONVENIENCE_STORES_AND_SPECIALTY_MARKETS
      - FOOD_TRUCK_CART
      - FURNITURE_HOME_AND_OFFICE_EQUIPMENT
      - FURNITURE_HOME_GOODS
      - HOTELS_AND_LODGING
      - INDIVIDUAL_USE
      - JEWELRY_AND_WATCHES
      - LANDSCAPING_AND_HORTICULTURAL_SERVICES
      - LANGUAGE_SCHOOLS
      - LEGAL_SERVICES
      - MEDICAL_PRACTITIONERS
      - MEDICAL_SERVICES_AND_HEALTH_PRACTITIONERS
      - MEMBERSHIP_ORGANIZATIONS
      - MUSIC_AND_ENTERTAINMENT
      - OTHER
      - OUTDOOR_MARKETS
      - PERSONAL_SERVICES
      - POLITICAL_ORGANIZATIONS
      - PROFESSIONAL_SERVICES
      - REAL_ESTATE
      - RECREATION_SERVICES
      - REPAIR_SHOPS_AND_RELATED_SERVICES
      - RESTAURANTS
      - RETAIL_SHOPS
      - SCHOOLS_AND_EDUCATIONAL_SERVICES
      - SPORTING_GOODS
      - TAXICABS_AND_LIMOUSINES
      - TICKET_SALES
      - TOURISM
      - TRAVEL_TOURISM
      - VETERINARY_SERVICES
      - WEB_DEV_DESIGN
      x-enum-elements:
      - name: ACCOUNTING
        description: ""
      - name: APPAREL_AND_ACCESSORY_SHOPS
        description: ""
      - name: ART_DEALERS_GALLERIES
        description: ""
      - name: ART_DESIGN_AND_PHOTOGRAPHY
        description: ""
      - name: BAR_CLUB_LOUNGE
        description: ""
      - name: BEAUTY_AND_BARBER_SHOPS
        description: ""
      - name: BOOK_STORES
        description: ""
      - name: BUSINESS_SERVICES
        description: ""
      - name: CATERING
        description: ""
      - name: CHARITABLE_SOCIAL_SERVICE_ORGANIZATIONS
        description: ""
      - name: CHARITIBLE_ORGS
        description: ""
      - name: CLEANING_SERVICES
        description: ""
      - name: COMPUTER_EQUIPMENT_SOFTWARE_MAINTENANCE_REPAIR_SERVICES
        description: ""
      - name: CONSULTANT
        description: ""
      - name: CONTRACTORS
        description: ""
      - name: DELIVERY_SERVICES
        description: ""
      - name: DENTISTRY
        description: ""
      - name: EDUCATION
        description: ""
      - name: FOOD_STORES_CONVENIENCE_STORES_AND_SPECIALTY_MARKETS
        description: ""
      - name: FOOD_TRUCK_CART
        description: ""
      - name: FURNITURE_HOME_AND_OFFICE_EQUIPMENT
        description: ""
      - name: FURNITURE_HOME_GOODS
        description: ""
      - name: HOTELS_AND_LODGING
        description: ""
      - name: INDIVIDUAL_USE
        description: ""
      - name: JEWELRY_AND_WATCHES
        description: ""
      - name: LANDSCAPING_AND_HORTICULTURAL_SERVICES
        description: ""
      - name: LANGUAGE_SCHOOLS
        description: ""
      - name: LEGAL_SERVICES
        description: ""
      - name: MEDICAL_PRACTITIONERS
        description: ""
      - name: MEDICAL_SERVICES_AND_HEALTH_PRACTITIONERS
        description: ""
      - name: MEMBERSHIP_ORGANIZATIONS
        description: ""
      - name: MUSIC_AND_ENTERTAINMENT
        description: ""
      - name: OTHER
        description: ""
      - name: OUTDOOR_MARKETS
        description: ""
      - name: PERSONAL_SERVICES
        description: ""
      - name: POLITICAL_ORGANIZATIONS
        description: ""
      - name: PROFESSIONAL_SERVICES
        description: ""
      - name: REAL_ESTATE
        description: ""
      - name: RECREATION_SERVICES
        description: ""
      - name: REPAIR_SHOPS_AND_RELATED_SERVICES
        description: ""
      - name: RESTAURANTS
        description: ""
      - name: RETAIL_SHOPS
        description: ""
      - name: SCHOOLS_AND_EDUCATIONAL_SERVICES
        description: ""
      - name: SPORTING_GOODS
        description: ""
      - name: TAXICABS_AND_LIMOUSINES
        description: ""
      - name: TICKET_SALES
        description: ""
      - name: TOURISM
        description: ""
      - name: TRAVEL_TOURISM
        description: ""
      - name: VETERINARY_SERVICES
        description: ""
      - name: WEB_DEV_DESIGN
        description: ""
      x-release-status: DEPRECATED
    V1ModifierListSelectionType:
      type: string
      enum:
      - SINGLE
      - MULTIPLE
      x-enum-elements:
      - name: SINGLE
        description: ""
      - name: MULTIPLE
        description: ""
      x-release-status: DEPRECATED
    V1PageCellObjectType:
      type: string
      enum:
      - ITEM
      - DISCOUNT
      - CATEGORY
      - PLACEHOLDER
      x-enum-elements:
      - name: ITEM
        description: ""
      - name: DISCOUNT
        description: ""
      - name: CATEGORY
        description: ""
      - name: PLACEHOLDER
        description: ""
      x-release-status: DEPRECATED
    V1PageCellPlaceholderType:
      type: string
      enum:
      - ALL_ITEMS
      - DISCOUNTS_CATEGORY
      - REWARDS_FINDER
      x-enum-elements:
      - name: ALL_ITEMS
        description: ""
      - name: DISCOUNTS_CATEGORY
        description: ""
      - name: REWARDS_FINDER
        description: ""
      x-release-status: DEPRECATED
    V1PaymentItemizationItemizationType:
      type: string
      enum:
      - ITEM
      - CUSTOM_AMOUNT
      - GIFT_CARD_ACTIVATION
      - GIFT_CARD_RELOAD
      - GIFT_CARD_UNKNOWN
      - OTHER
      x-enum-elements:
      - name: ITEM
        description: ""
      - name: CUSTOM_AMOUNT
        description: ""
      - name: GIFT_CARD_ACTIVATION
        description: ""
      - name: GIFT_CARD_RELOAD
        description: ""
      - name: GIFT_CARD_UNKNOWN
        description: ""
      - name: OTHER
        description: ""
      x-release-status: PUBLIC
    V1PaymentSurchargeType:
      type: string
      enum:
      - UNKNOWN
      - AUTO_GRATUITY
      - CUSTOM
      x-enum-elements:
      - name: UNKNOWN
        description: ""
      - name: AUTO_GRATUITY
        description: ""
      - name: CUSTOM
        description: ""
      x-release-status: PUBLIC
    V1PaymentTaxInclusionType:
      type: string
      enum:
      - ADDITIVE
      - INCLUSIVE
      x-enum-elements:
      - name: ADDITIVE
        description: ""
      - name: INCLUSIVE
        description: ""
      x-release-status: PUBLIC
    V1RefundType:
      type: string
      enum:
      - FULL
      - PARTIAL
      x-enum-elements:
      - name: FULL
        description: ""
      - name: PARTIAL
        description: ""
      x-release-status: PUBLIC
    V1SettlementEntryType:
      type: string
      enum:
      - ADJUSTMENT
      - BALANCE_CHARGE
      - CHARGE
      - FREE_PROCESSING
      - HOLD_ADJUSTMENT
      - PAID_SERVICE_FEE
      - PAID_SERVICE_FEE_REFUND
      - REDEMPTION_CODE
      - REFUND
      - RETURNED_PAYOUT
      - SQUARE_CAPITAL_ADVANCE
      - SQUARE_CAPITAL_PAYMENT
      - SQUARE_CAPITAL_REVERSED_PAYMENT
      - SUBSCRIPTION_FEE
      - SUBSCRIPTION_FEE_REFUND
      - OTHER
      - INCENTED_PAYMENT
      - RETURNED_ACH_ENTRY
      - RETURNED_SQUARE_275
      - SQUARE_275
      - SQUARE_CARD
      x-enum-elements:
      - name: ADJUSTMENT
        description: A manual adjustment applied to the merchant's account by Square
      - name: BALANCE_CHARGE
        description: A payment from an existing Square balance, such as a gift card
      - name: CHARGE
        description: A credit card payment CAPTURE
      - name: FREE_PROCESSING
        description: Square offers Free Payments Processing for a variety of business
          scenarios including seller referral or when we want to apologize for a bug,
          customer service, repricing complication, etc. This entry represents a credit
          to the merchant for the purposes of Free Processing.
      - name: HOLD_ADJUSTMENT
        description: An adjustment made by Square related to holding/releasing a payment
      - name: PAID_SERVICE_FEE
        description: a fee paid to a 3rd party merchant
      - name: PAID_SERVICE_FEE_REFUND
        description: a refund for a 3rd party merchant fee
      - name: REDEMPTION_CODE
        description: Repayment for a redemption code
      - name: REFUND
        description: A refund for an existing card payment
      - name: RETURNED_PAYOUT
        description: An entry created when we receive a response for the ACH file
          we sent indicating that the settlement of the original entry failed.
      - name: SQUARE_CAPITAL_ADVANCE
        description: Initial deposit to a merchant for a Capital merchant cash advance
          (MCA).
      - name: SQUARE_CAPITAL_PAYMENT
        description: Capital merchant cash advance (MCA) assessment. These are, generally,
          proportional to the merchant's sales but may be issued for other reasons
          related to the MCA.
      - name: SQUARE_CAPITAL_REVERSED_PAYMENT
        description: Capital merchant cash advance (MCA) assessment refund. These
          are, generally, proportional to the merchant's refunds but may be issued
          for other reasons related to the MCA.
      - name: SUBSCRIPTION_FEE
        description: Fee charged for subscription to a Square product
      - name: SUBSCRIPTION_FEE_REFUND
        description: Refund of a previously charged Square product subscription fee.
      - name: OTHER
        description: ""
      - name: INCENTED_PAYMENT
        description: A payment in which Square covers part of the funds for a purchase
      - name: RETURNED_ACH_ENTRY
        description: A settlement failed to be processed and the settlement amount
          has been returned to the account
      - name: RETURNED_SQUARE_275
        description: Refund for cancelling a Square Plus subscription
      - name: SQUARE_275
        description: Fee charged for a Square Plus subscription ($275)
      - name: SQUARE_CARD
        description: Settlements to or withdrawals from the Square Card (an asset)
      x-release-status: PUBLIC
    V1SettlementStatus:
      type: string
      enum:
      - FAILED
      - SENT
      x-enum-elements:
      - name: FAILED
        description: ""
      - name: SENT
        description: ""
      x-release-status: PUBLIC
    V1TenderCardBrand:
      type: string
      description: The brand of a credit card.
      enum:
      - OTHER_BRAND
      - VISA
      - MASTER_CARD
      - AMERICAN_EXPRESS
      - DISCOVER
      - DISCOVER_DINERS
      - JCB
      - CHINA_UNIONPAY
      - SQUARE_GIFT_CARD
      x-enum-elements:
      - name: OTHER_BRAND
        description: ""
      - name: VISA
        description: ""
      - name: MASTER_CARD
        description: ""
      - name: AMERICAN_EXPRESS
        description: ""
      - name: DISCOVER
        description: ""
      - name: DISCOVER_DINERS
        description: ""
      - name: JCB
        description: ""
      - name: CHINA_UNIONPAY
        description: ""
      - name: SQUARE_GIFT_CARD
        description: ""
      x-release-status: DEPRECATED
    V1TenderEntryMethod:
      type: string
      enum:
      - MANUAL
      - SCANNED
      - SQUARE_CASH
      - SQUARE_WALLET
      - SWIPED
      - WEB_FORM
      - OTHER
      x-enum-elements:
      - name: MANUAL
        description: ""
      - name: SCANNED
        description: ""
      - name: SQUARE_CASH
        description: ""
      - name: SQUARE_WALLET
        description: ""
      - name: SWIPED
        description: ""
      - name: WEB_FORM
        description: ""
      - name: OTHER
        description: ""
      x-release-status: DEPRECATED
    V1TenderType:
      type: string
      enum:
      - CREDIT_CARD
      - CASH
      - THIRD_PARTY_CARD
      - NO_SALE
      - SQUARE_WALLET
      - SQUARE_GIFT_CARD
      - UNKNOWN
      - OTHER
      x-enum-elements:
      - name: CREDIT_CARD
        description: ""
      - name: CASH
        description: ""
      - name: THIRD_PARTY_CARD
        description: ""
      - name: NO_SALE
        description: ""
      - name: SQUARE_WALLET
        description: ""
      - name: SQUARE_GIFT_CARD
        description: ""
      - name: UNKNOWN
        description: ""
      - name: OTHER
        description: ""
      x-release-status: DEPRECATED
    V1TimecardEventEventType:
      type: string
      description: |-
        Actions that resulted in a change to a timecard. All timecard
        events created with the Connect API have an event type that begins with
        `API`.
      enum:
      - API_CREATE
      - API_EDIT
      - API_DELETE
      - REGISTER_CLOCKIN
      - REGISTER_CLOCKOUT
      - DASHBOARD_SUPERVISOR_CLOSE
      - DASHBOARD_EDIT
      - DASHBOARD_DELETE
      x-enum-elements:
      - name: API_CREATE
        description: |-
          The timecard was created by a request to the
          [CreateTimecard](#endpoint-v1employees-createtimecard) endpoint.
      - name: API_EDIT
        description: |-
          The timecard was edited by a request to the
          [UpdateTimecard](#endpoint-v1employees-updatetimecard) endpoint.
      - name: API_DELETE
        description: |-
          The timecard was deleted by a request to the
          [DeleteTimecard](#endpoint-v1employees-deletetimecard) endpoint.
      - name: REGISTER_CLOCKIN
        description: The employee clocked in via Square Point of Sale.
      - name: REGISTER_CLOCKOUT
        description: The employee clocked out via Square Point of Sale.
      - name: DASHBOARD_SUPERVISOR_CLOSE
        description: |-
          A supervisor clocked out the employee from the merchant
          dashboard.
      - name: DASHBOARD_EDIT
        description: |-
          A supervisor manually edited the timecard from the merchant
          dashboard
      - name: DASHBOARD_DELETE
        description: A supervisor deleted the timecard from the merchant dashboard.
      x-release-status: DEPRECATED
    V1UpdateModifierListRequestSelectionType:
      type: string
      enum:
      - SINGLE
      - MULTIPLE
      x-enum-elements:
      - name: SINGLE
        description: ""
      - name: MULTIPLE
        description: ""
      x-release-status: DEPRECATED
    V1VariationInventoryAlertType:
      type: string
      enum:
      - LOW_QUANTITY
      - NONE
      - INVESTMENT
      - LOAN
      - SAVINGS
      - OTHER
      x-enum-elements:
      - name: LOW_QUANTITY
        description: ""
      - name: NONE
        description: ""
      - name: INVESTMENT
        description: ""
      - name: LOAN
        description: ""
      - name: SAVINGS
        description: ""
      - name: OTHER
        description: ""
      x-release-status: DEPRECATED
    V1VariationPricingType:
      type: string
      enum:
      - FIXED_PRICING
      - VARIABLE_PRICING
      x-enum-elements:
      - name: FIXED_PRICING
        description: ""
      - name: VARIABLE_PRICING
        description: ""
      x-release-status: DEPRECATED
    V1WebhooksEvents:
      type: string
      description: V1WebhooksEvents
      enum:
      - PAYMENT_UPDATED
      - INVENTORY_UPDATED
      - TIMECARD_UPDATED
      x-enum-elements:
      - name: PAYMENT_UPDATED
        description: |-
          A charge was made or refunded through Square Point of Sale or the Transaction API.

          Required permission: `PAYMENTS_READ`
      - name: INVENTORY_UPDATED
        description: |-
          The inventory quantity for a catalog item was updated.

          Required permission: `ITEMS_READ`
      - name: TIMECARD_UPDATED
        description: |-
          A timecard was created in the Square dashboard or an employee clocked in using Square Point of Sale.

          Required permission: `TIMECARDS_READ`
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    Weekday:
      type: string
      description: The days of the week.
      enum:
      - MON
      - TUE
      - WED
      - THU
      - FRI
      - SAT
      - SUN
      x-enum-elements:
      - name: MON
        description: Monday
      - name: TUE
        description: Tuesday
      - name: WED
        description: Wednesday
      - name: THU
        description: Thursday
      - name: FRI
        description: Friday
      - name: SAT
        description: Saturday
      - name: SUN
        description: Sunday
      x-release-status: PUBLIC
    AcceptDisputeRequest:
      type: object
      properties: {}
      description: Defines request parameters for the AcceptDispute endpoint.
      example: {}
      x-release-status: BETA
    AcceptDisputeResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
        dispute:
          $ref: '#/components/schemas/Dispute'
      description: Defines fields in a AcceptDispute response.
      example:
        dispute:
          dispute_id: XDgyFu7yo1E2S5lQGGpYn
          amount_money:
            amount: 2000
            currency: USD
          reason: NO_KNOWLEDGE
          state: LOST
          due_at: 2018-11-01T00:00:00.000Z
          disputed_payments:
          - payment_id: 6Ee10wvqhfipStz297mtUhBXvaB
          card_brand: visa
          created_at: 2018-10-18T15:59:13.613Z
          updated_at: 2018-10-18T15:59:13.613Z
          brand_dispute_id: "100000282394"
      x-release-status: BETA
    AccumulateLoyaltyPointsRequest:
      required:
      - accumulate_points
      - idempotency_key
      - location_id
      type: object
      properties:
        accumulate_points:
          $ref: '#/components/schemas/LoyaltyEventAccumulatePoints'
        idempotency_key:
          maxLength: 128
          minLength: 1
          type: string
          description: "A unique string that identifies the `AccumulateLoyaltyPoints`\
            \ request. \nKeys can be any valid string but must be unique for every\
            \ request."
        location_id:
          type: string
          description: The [location](#type-Location) where the purchase was made.
      description: A request to accumulate points for a purchase.
      example:
        accumulate_points:
          order_id: RFZfrdtm3mhO1oGzf5Cx7fEMsmGZY
        location_id: P034NEENMD09F
        idempotency_key: 58b90739-c3e8-4b11-85f7-e636d48d72cb
      x-release-status: BETA
      x-params-example: ?account_id=5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd
    AccumulateLoyaltyPointsResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        event:
          $ref: '#/components/schemas/LoyaltyEvent'
      description: A response containing the resulting loyalty event.
      example:
        event:
          id: ee46aafd-1af6-3695-a385-276e2ef0be26
          type: ACCUMULATE_POINTS
          created_at: 2020-05-08T21:41:12Z
          accumulate_points:
            loyalty_program_id: d619f755-2d17-41f3-990d-c04ecedd64dd
            points: 6
            order_id: RFZfrdtm3mhO1oGzf5Cx7fEMsmGZY
          loyalty_account_id: 5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd
          location_id: P034NEENMD09F
          source: LOYALTY_API
      x-release-status: BETA
    AddGroupToCustomerRequest:
      type: object
      properties: {}
      description: |-
        Defines the fields that are included in the request body of
        a request to the [AddGroupToCustomer](#endpoint-addgrouptocustomer) endpoint.
      example: {}
      x-release-status: BETA
    AddGroupToCustomerResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: |-
        Defines the fields that are included in the response body of
        a request to the [AddGroupToCustomer](#endpoint-addgrouptocustomer) endpoint.
      example: {}
      x-release-status: BETA
    AdditionalRecipient:
      required:
      - amount_money
      - description
      - location_id
      type: object
      properties:
        location_id:
          maxLength: 50
          minLength: 1
          type: string
          description: The location ID for a recipient (other than the merchant) receiving
            a portion of this tender.
        description:
          maxLength: 100
          minLength: 1
          type: string
          description: The description of the additional recipient.
        amount_money:
          $ref: '#/components/schemas/Money'
        receivable_id:
          maxLength: 192
          type: string
          description: The unique ID for this [AdditionalRecipientReceivable](#type-additionalrecipientreceivable),
            assigned by the server.
      description: Represents an additional recipient (other than the merchant) receiving
        a portion of this tender.
      x-release-status: PUBLIC
    AdditionalRecipientReceivable:
      required:
      - amount_money
      - id
      - transaction_id
      - transaction_location_id
      type: object
      properties:
        id:
          maxLength: 192
          minLength: 1
          type: string
          description: The additional recipient receivable's unique ID, issued by
            Square payments servers.
        transaction_id:
          maxLength: 192
          minLength: 1
          type: string
          description: The ID of the transaction that the additional recipient receivable
            was applied to.
        transaction_location_id:
          maxLength: 50
          minLength: 1
          type: string
          description: The ID of the location that created the receivable. This is
            the location ID on the associated transaction.
        amount_money:
          $ref: '#/components/schemas/Money'
        created_at:
          maxLength: 32
          type: string
          description: The time when the additional recipient receivable was created,
            in RFC 3339 format.
        refunds:
          type: array
          description: Any refunds of the receivable that have been applied.
          items:
            $ref: '#/components/schemas/AdditionalRecipientReceivableRefund'
      description: Represents a monetary distribution of part of a [Transaction](#type-transaction)'s
        amount for Transactions which included additional recipients. The location
        of this receivable is that same as the one specified in the [AdditionalRecipient](#type-additionalrecipient).
      x-release-status: RETIRED
    AdditionalRecipientReceivableRefund:
      required:
      - amount_money
      - id
      - receivable_id
      - refund_id
      - transaction_location_id
      type: object
      properties:
        id:
          maxLength: 192
          minLength: 1
          type: string
          description: The receivable refund's unique ID, issued by Square payments
            servers.
        receivable_id:
          maxLength: 192
          minLength: 1
          type: string
          description: The ID of the receivable that the refund was applied to.
        refund_id:
          maxLength: 255
          minLength: 1
          type: string
          description: The ID of the refund that is associated to this receivable
            refund.
        transaction_location_id:
          maxLength: 50
          minLength: 1
          type: string
          description: The ID of the location that created the receivable. This is
            the location ID on the associated transaction.
        amount_money:
          $ref: '#/components/schemas/Money'
        created_at:
          maxLength: 32
          type: string
          description: The time when the refund was created, in RFC 3339 format.
      description: A refund of an [AdditionalRecipientReceivable](#type-additionalrecipientreceivable).
        This includes the ID of the additional recipient receivable associated to
        this object, as well as a reference to the [Refund](#type-refund) that created
        this receivable refund.
      x-release-status: RETIRED
    Address:
      type: object
      properties:
        address_line_1:
          type: string
          description: |-
            The first line of the address.

            Fields that start with `address_line` provide the address's most specific
            details, like street number, street name, and building name. They do *not*
            provide less specific details like city, state/province, or country (these
            details are provided in other fields).
        address_line_2:
          type: string
          description: The second line of the address, if any.
        address_line_3:
          type: string
          description: The third line of the address, if any.
        locality:
          type: string
          description: The city or town of the address.
        sublocality:
          type: string
          description: A civil region within the address's `locality`, if any.
        sublocality_2:
          type: string
          description: A civil region within the address's `sublocality`, if any.
        sublocality_3:
          type: string
          description: A civil region within the address's `sublocality_2`, if any.
        administrative_district_level_1:
          type: string
          description: |-
            A civil entity within the address's country. In the US, this
            is the state.
        administrative_district_level_2:
          type: string
          description: |-
            A civil entity within the address's `administrative_district_level_1`.
            In the US, this is the county.
        administrative_district_level_3:
          type: string
          description: |-
            A civil entity within the address's `administrative_district_level_2`,
            if any.
        postal_code:
          type: string
          description: The address's postal code.
        country:
          $ref: '#/components/schemas/Country'
        first_name:
          type: string
          description: Optional first name when it's representing recipient.
        last_name:
          type: string
          description: Optional last name when it's representing recipient.
        organization:
          type: string
          description: Optional organization name when it's representing recipient.
      description: Represents a physical address.
      example:
        country: ZZ
        administrative_district_level_3: administrative_district_level_3
        locality: locality
        sublocality: sublocality
        last_name: last_name
        administrative_district_level_2: administrative_district_level_2
        administrative_district_level_1: administrative_district_level_1
        sublocality_3: sublocality_3
        sublocality_2: sublocality_2
        organization: organization
        address_line_1: address_line_1
        address_line_3: address_line_3
        address_line_2: address_line_2
        postal_code: postal_code
        first_name: first_name
      x-release-status: PUBLIC
    AdjustLoyaltyPointsRequest:
      required:
      - adjust_points
      - idempotency_key
      type: object
      properties:
        idempotency_key:
          maxLength: 128
          minLength: 1
          type: string
          description: "A unique string that identifies this `AdjustLoyaltyPoints`\
            \ request. \nKeys can be any valid string, but must be unique for every\
            \ request."
        adjust_points:
          $ref: '#/components/schemas/LoyaltyEventAdjustPoints'
      description: A request to adjust (add or subtract) points manually.
      example:
        adjust:
          points: 10
          reason: Complimentary points
        idempotency_key: bc29a517-3dc9-450e-aa76-fae39ee849d1
      x-release-status: BETA
      x-params-example: ?account_id=5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd
    AdjustLoyaltyPointsResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        event:
          $ref: '#/components/schemas/LoyaltyEvent'
      description: "A response that includes the loyalty event that \nresulted from\
        \ the successful API call."
      example:
        event:
          id: 613a6fca-8d67-39d0-bad2-3b4bc45c8637
          type: ADJUST_POINTS
          created_at: 2020-05-08T21:42:32Z
          adjust_points:
            loyalty_program_id: d619f755-2d17-41f3-990d-c04ecedd64dd
            points: 10
            reason: Complimentary points
          loyalty_account_id: 5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd
          source: LOYALTY_API
      x-release-status: BETA
    AuthorizeRequest:
      required:
      - client_id
      type: object
      properties:
        client_id:
          type: string
          description: The Square-issued ID of the application requesting permissions.
        scope:
          type: array
          description: |-
            __OPTIONAL__

            A space-separated list of the permissions the application is requesting.
            Default: "`MERCHANT_PROFILE_READ PAYMENTS_READ SETTLEMENTS_READ BANK_ACCOUNTS_READ`"
            See [OAuthPermission](#type-oauthpermission) for possible values
          items:
            $ref: '#/components/schemas/OAuthPermission'
        locale:
          type: string
          description: |-
            __OPTIONAL__

            The locale to present the permission request form in. Square detects the
            appropriate locale automatically. Only provide this value if the application
            can definitively determine the preferred locale.

            Currently supported values: `en-US`, `en-CA`, `es-US`, `fr-CA`, `ja-JP`.
        session:
          type: boolean
          description: |-
            If `false`, the user must log in to their Square account to
            view the Permission Request form, even if they already have a valid user
            session.
            Default: `true`
        state:
          type: string
          description: |-
            __OPTIONAL__

            When provided, `state` is passed along to the configured Redirect URL after
            the Permission Request form is submitted. You can include state and verify
            its value to help protect against cross-site request forgery.
      example:
        scope: PAYMENTS_WRITE PAYMENTS_READ CUSTOMERS_WRITE CUSTOMERS_READ
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    AuthorizeResponse:
      type: object
      properties:
        code:
          type: string
          description: |-
            A valid authorization code. Authorization codes are exchanged
            for OAuth access tokens with the ObtainToken endpoint.
        state:
          type: string
          description: The same value specified in the request.
      example:
        code: VALID_AUTHORIZATION_CODE
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    BalancePaymentDetails:
      type: object
      properties:
        account_id:
          type: string
          description: ID for the account used to fund the payment.
        status:
          type: string
          description: The balance payment’s current state. Can be `COMPLETED` or
            `FAILED`.
      description: Reflects the current status of a balance payment.
      x-release-status: PUBLIC
    BankAccount:
      required:
      - account_number_suffix
      - account_type
      - country
      - creditable
      - currency
      - debitable
      - holder_name
      - id
      - primary_bank_identification_number
      - status
      type: object
      properties:
        id:
          maxLength: 30
          minLength: 1
          type: string
          description: The unique, Square-issued identifier for the bank account.
        account_number_suffix:
          minLength: 1
          type: string
          description: The last few digits of the account number.
        country:
          $ref: '#/components/schemas/Country'
        currency:
          $ref: '#/components/schemas/Currency'
        account_type:
          $ref: '#/components/schemas/BankAccountType'
        holder_name:
          minLength: 1
          type: string
          description: "Name of the account holder. This name must match the name\
            \ \non the targeted bank account record."
        primary_bank_identification_number:
          maxLength: 40
          type: string
          description: "Primary identifier for the bank. For more information, see\
            \ \n[Bank Accounts API](https://developer.squareup.com/docs/docs/bank-accounts-api)."
        secondary_bank_identification_number:
          maxLength: 40
          type: string
          description: "Secondary identifier for the bank. For more information, see\
            \ \n[Bank Accounts API](https://developer.squareup.com/docs/docs/bank-accounts-api)."
        debit_mandate_reference_id:
          type: string
          description: |-
            Reference identifier that will be displayed to UK bank account owners
            when collecting direct debit authorization. Only required for UK bank accounts.
        reference_id:
          type: string
          description: |-
            Client-provided identifier for linking the banking account to an entity
            in a third-party system (for example, a bank account number or a user identifier).
        location_id:
          type: string
          description: The location to which the bank account belongs.
        status:
          $ref: '#/components/schemas/BankAccountStatus'
        creditable:
          type: boolean
          description: Indicates whether it is possible for Square to send money to
            this bank account.
        debitable:
          type: boolean
          description: "Indicates whether it is possible for Square to take money\
            \ from this \nbank account."
        fingerprint:
          type: string
          description: |-
            A Square-assigned, unique identifier for the bank account based on the
            account information. The account fingerprint can be used to compare account
            entries and determine if the they represent the same real-world bank account.
        version:
          type: integer
          description: The current version of the `BankAccount`.
        bank_name:
          maxLength: 100
          type: string
          description: "Read only. Name of actual financial institution. \nFor example\
            \ \"Bank of America\"."
      description: "Represents a bank account. For more information about \nlinking\
        \ a bank account to a Square account, see \n[Bank Accounts API](https://developer.squareup.com/docs/docs/bank-accounts-api)."
      x-release-status: PUBLIC
    BankAccountCreatedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        location_id:
          type: string
          description: The ID of the target location associated with the event.
        type:
          type: string
          description: The type of event this represents, `"bank_account.created"`.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/BankAccountCreatedWebhookData'
      description: |-
        Published when you link an external bank account to a Square
        account in the Seller Dashboard. Square sets the initial status to
        `VERIFICATION_IN_PROGRESS` and publishes the event.
      example:
        merchant_id: 6SSW7HV8K2ST5
        location_id: S8GWD5DBJ3HF3
        type: bank_account.created
        event_id: d214f854-adb1-4f56-b078-4b8697a3187a
        created_at: 2020-02-15T04:38:13Z
        data:
          type: bank_account
          id: bact:cgvL1yv43VFjexample
          object:
            bank_account:
              id: bact:cgvL1yv43VFjexample
              account_number_suffix: "526"
              country: US
              currency: USD
              account_type: CHECKING
              holder_name: John Doe
              primary_bank_identification_number: "101211111"
              location_id: S8GWD5DBJ3HF3
              status: VERIFICATION_IN_PROGRESS
              creditable: true
              debitable: true
              version: 1
              bank_name: Bank Name
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
      x-webhook:
        event: bank_account.created
        scopes:
        - BANK_ACCOUNTS_READ
      x-api: '#/components/x-apis/BankAccounts'
      x-since: 2020-02-26
    BankAccountCreatedWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the affected object’s type, `"bank_account"`.
        id:
          type: string
          description: ID of the affected bank account.
        object:
          $ref: '#/components/schemas/BankAccountCreatedWebhookObject'
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    BankAccountCreatedWebhookObject:
      type: object
      properties:
        bank_account:
          $ref: '#/components/schemas/BankAccount'
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    BankAccountDisabledWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        location_id:
          type: string
          description: The ID of the target location associated with the event.
        type:
          type: string
          description: The type of event this represents, `"bank_account.disabled"`.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was disabled, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/BankAccountDisabledWebhookData'
      description: |-
        Published when Square sets the status of a
        [BankAccount](#type-BankAccount) to `DISABLED`.
      example:
        merchant_id: 6SSW7HV8K2ST5
        location_id: S8GWD5DBJ3HF3
        type: bank_account.disabled
        event_id: 43e8b5c7-706f-49bf-8e2a-90fbe96af93e
        created_at: 2020-02-15T04:38:13Z
        data:
          type: bank_account
          id: bact:cgvL1yv43VFjexample
          object:
            bank_account:
              id: bact:cgvL1yv43VFjexample
              account_number_suffix: "526"
              country: US
              currency: USD
              account_type: CHECKING
              holder_name: John Doe
              primary_bank_identification_number: "101211111"
              location_id: S8GWD5DBJ3HF3
              status: DISABLED
              creditable: true
              debitable: true
              version: 5
              bank_name: Bank Name
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
      x-webhook:
        event: bank_account.disabled
        scopes:
        - BANK_ACCOUNTS_READ
      x-api: '#/components/x-apis/BankAccounts'
      x-since: 2020-02-26
    BankAccountDisabledWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the affected object’s type, `"bank_account"`.
        id:
          type: string
          description: ID of the affected bank account.
        object:
          $ref: '#/components/schemas/BankAccountDisabledWebhookObject'
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    BankAccountDisabledWebhookObject:
      type: object
      properties:
        bank_account:
          $ref: '#/components/schemas/BankAccount'
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    BankAccountVerifiedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        location_id:
          type: string
          description: The ID of the target location associated with the event.
        type:
          type: string
          description: The type of event this represents, `"bank_account.verified"`.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was verified, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/BankAccountVerifiedWebhookData'
      description: |-
        Published when Square sets the status of a
        [BankAccount](#type-BankAccount) to `VERIFIED`.
      example:
        merchant_id: 6SSW7HV8K2ST5
        location_id: S8GWD5DBJ3HF3
        type: bank_account.verified
        event_id: 4166853c-0e4c-4202-8fd8-7e65a8f42389
        created_at: 2020-02-15T04:38:13Z
        data:
          type: bank_account
          id: bact:cgvL1yv43VFjexample
          object:
            bank_account:
              id: bact:cgvL1yv43VFjexample
              account_number_suffix: "526"
              country: US
              currency: USD
              account_type: CHECKING
              holder_name: John Doe
              primary_bank_identification_number: "101211111"
              location_id: S8GWD5DBJ3HF3
              status: VERIFIED
              creditable: true
              debitable: true
              version: 4
              bank_name: Bank Name
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
      x-webhook:
        event: bank_account.verified
        scopes:
        - BANK_ACCOUNTS_READ
      x-api: '#/components/x-apis/BankAccounts'
      x-since: 2020-02-26
    BankAccountVerifiedWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the affected object’s type, `"bank_account"`.
        id:
          type: string
          description: ID of the affected bank account.
        object:
          $ref: '#/components/schemas/BankAccountVerifiedWebhookObject'
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    BankAccountVerifiedWebhookObject:
      type: object
      properties:
        bank_account:
          $ref: '#/components/schemas/BankAccount'
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    BatchChangeInventoryRequest:
      type: object
      properties:
        idempotency_key:
          type: string
          description: |-
            A client-supplied, universally unique identifier (UUID) for the
            request.

            See [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency) in the
            [API Development 101](https://developer.squareup.com/docs/basics/api101/overview) section for more
            information.
        changes:
          type: array
          description: |-
            The set of physical counts and inventory adjustments to be made.
            Changes are applied based on the client-supplied timestamp and may be sent
            out of order.
          items:
            $ref: '#/components/schemas/InventoryChange'
        ignore_unchanged_counts:
          type: boolean
          description: |-
            Indicates whether the current physical count should be ignored if
            the quantity is unchanged since the last physical count. Default: `true`.
      example:
        idempotency_key: 8fc6a5b0-9fe8-4b46-b46b-2ef95793abbe
        changes:
        - type: PHYSICAL_COUNT
          physical_count:
            reference_id: 1536bfbf-efed-48bf-b17d-a197141b2a92
            catalog_object_id: W62UWFY35CWMYGVWK6TWJDNI
            state: IN_STOCK
            location_id: C6W5YS5QM06F5
            quantity: "53"
            employee_id: LRK57NSQ5X7PUD05
            occurred_at: 2016-11-16T22:25:24.878Z
        ignore_unchanged_counts: true
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/Inventory/BatchChangeInventory/BatchChangeInventoryRequest.python
        csharp: /sdk_samples/Inventory/BatchChangeInventory/BatchChangeInventoryRequest.csharp
        java: /sdk_samples/Inventory/BatchChangeInventory/BatchChangeInventoryRequest.java
        php: /sdk_samples/Inventory/BatchChangeInventory/BatchChangeInventoryRequest.php
        javascript: /sdk_samples/Inventory/BatchChangeInventory/BatchChangeInventoryRequest.javascript
        ruby: /sdk_samples/Inventory/BatchChangeInventory/BatchChangeInventoryRequest.ruby
    BatchChangeInventoryResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        counts:
          type: array
          description: The current counts for all objects referenced in the request.
          items:
            $ref: '#/components/schemas/InventoryCount'
      example:
        errors: []
        counts:
        - catalog_object_id: W62UWFY35CWMYGVWK6TWJDNI
          catalog_object_type: ITEM_VARIATION
          state: IN_STOCK
          location_id: C6W5YS5QM06F5
          quantity: "53"
          calculated_at: 2016-11-16T22:28:01.223Z
      x-release-status: PUBLIC
    BatchDeleteCatalogObjectsRequest:
      type: object
      properties:
        object_ids:
          type: array
          description: |-
            The IDs of the CatalogObjects to be deleted. When an object is deleted, other objects
            in the graph that depend on that object will be deleted as well (for example, deleting a
            CatalogItem will delete its CatalogItemVariation.
          items:
            type: string
      example:
        object_ids:
        - W62UWFY35CWMYGVWK6TWJDNI
        - AA27W3M2GGTF3H6AVPNB77CK
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsRequest.python
        csharp: /sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsRequest.csharp
        java: /sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsRequest.java
        php: /sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsRequest.php
        javascript: /sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsRequest.javascript
        ruby: /sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsRequest.ruby
    BatchDeleteCatalogObjectsResponse:
      type: object
      properties:
        errors:
          type: array
          description: The set of Errors encountered.
          items:
            $ref: '#/components/schemas/Error'
        deleted_object_ids:
          type: array
          description: The IDs of all CatalogObjects deleted by this request.
          items:
            type: string
        deleted_at:
          type: string
          description: The database [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
            of this deletion in RFC 3339 format, e.g., "2016-09-04T23:59:33.123Z".
      example:
        deleted_object_ids:
        - W62UWFY35CWMYGVWK6TWJDNI
        - AA27W3M2GGTF3H6AVPNB77CK
        deleted_at: 2016-11-16T22:25:24.878Z
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsResponse.python
        csharp: /sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsResponse.csharp
        java: /sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsResponse.java
        php: /sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsResponse.php
        javascript: /sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsResponse.javascript
        ruby: /sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsResponse.ruby
    BatchRequest:
      required:
      - access_token
      - method
      - relative_path
      type: object
      properties:
        method:
          $ref: '#/components/schemas/BatchRequestHttpMethod'
        relative_path:
          type: string
          description: Endpoint path for the API call.
        access_token:
          type: string
          description: |-
            [Square access token](https://developer.squareup.com/docs/build-basics/access-tokens) for the API
            call.
        body:
          type: object
          additionalProperties:
            type: string
          description: Request body for the API call. Only used for API calls using
            POST.
        request_id:
          type: string
          description: Client-provided value to identify the request.
      description: |-
        Represents a batched request included in a call to the __SubmitBatch__
        endpoint.
      x-release-status: DEPRECATED
      x-visibility: DOC_ONLY
    BatchResponse:
      type: object
      properties:
        status_code:
          type: integer
          description: HTTP status code for the response
        body:
          type: object
          additionalProperties:
            type: string
          description: The body of the response (if any).
        headers:
          type: object
          additionalProperties:
            type: string
          description: |-
            Contains any important headers for the response, indexed by header
            name. For example, if the response includes a pagination header, the header
            value is available from `headers["Link"]`.
        request_id:
          type: string
          description: |-
            The value provided in a request for `request_id` in the corresponding
            `BatchRequest` (if any).
      description: |-
        Represents an individual response for a batched request to the
        __SubmitBatch__ endpoint.
      example:
        headers:
          key: headers
        status_code: 0
        body:
          key: body
        request_id: request_id
      x-release-status: DEPRECATED
      x-visibility: DOC_ONLY
    BatchRetrieveCatalogObjectsRequest:
      required:
      - object_ids
      type: object
      properties:
        object_ids:
          type: array
          description: The IDs of the CatalogObjects to be retrieved.
          items:
            type: string
        include_related_objects:
          type: boolean
          description: |-
            If `true`, the response will include additional objects that are related to the
            requested objects, as follows:

            If the `objects` field of the response contains a CatalogItem, its associated
            CatalogCategory objects, CatalogTax objects, CatalogImage objects and
            CatalogModifierLists will be returned in the `related_objects` field of the
            response. If the `objects` field of the response contains a CatalogItemVariation,
            its parent CatalogItem will be returned in the `related_objects` field of
            the response.
      example:
        object_ids:
        - W62UWFY35CWMYGVWK6TWJDNI
        - AA27W3M2GGTF3H6AVPNB77CK
        include_related_objects: true
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsRequest.python
        csharp: /sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsRequest.csharp
        java: /sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsRequest.java
        php: /sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsRequest.php
        javascript: /sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsRequest.javascript
        ruby: /sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsRequest.ruby
    BatchRetrieveCatalogObjectsResponse:
      type: object
      properties:
        errors:
          type: array
          description: The set of [Error](#type-error)s encountered.
          items:
            $ref: '#/components/schemas/Error'
        objects:
          type: array
          description: A list of [CatalogObject](#type-catalogobject)s returned.
          items:
            $ref: '#/components/schemas/CatalogObject'
        related_objects:
          type: array
          description: A list of [CatalogObject](#type-catalogobject)s referenced
            by the object in the `objects` field.
          items:
            $ref: '#/components/schemas/CatalogObject'
      example:
        objects:
        - type: ITEM
          id: W62UWFY35CWMYGVWK6TWJDNI
          updated_at: 2016-11-16T22:25:24.878Z
          version: 1479335124878
          is_deleted: false
          present_at_all_locations: true
          item_data:
            name: Tea
            description: Hot Leaf Juice
            category_id: BJNQCF2FJ6S6UIDT65ABHLRX
            tax_ids:
            - HURXQOOAIC4IZSI2BEXQRYFY
            variations:
            - type: ITEM_VARIATION
              id: 2TZFAOHWGG7PAK2QEXWYPZSP
              updated_at: 2016-11-16T22:25:24.878Z
              version: 1479335124878
              is_deleted: false
              present_at_all_locations: true
              item_variation_data:
                item_id: W62UWFY35CWMYGVWK6TWJDNI
                name: Mug
                ordinal: 0
                pricing_type: FIXED_PRICING
                price_money:
                  amount: 150
                  currency: USD
        - type: ITEM
          id: AA27W3M2GGTF3H6AVPNB77CK
          updated_at: 2016-11-16T22:25:24.878Z
          version: 1479335124878
          is_deleted: false
          present_at_all_locations: true
          item_data:
            name: Coffee
            description: Hot Bean Juice
            category_id: BJNQCF2FJ6S6UIDT65ABHLRX
            tax_ids:
            - HURXQOOAIC4IZSI2BEXQRYFY
            variations:
            - type: ITEM_VARIATION
              id: LBTYIHNHU52WOIHWT7SNRIYH
              updated_at: 2016-11-16T22:25:24.878Z
              version: 1479335124878
              is_deleted: false
              present_at_all_locations: true
              item_variation_data:
                item_id: AA27W3M2GGTF3H6AVPNB77CK
                name: Regular
                ordinal: 0
                pricing_type: FIXED_PRICING
                price_money:
                  amount: 250
                  currency: USD
            - type: ITEM_VARIATION
              id: PKYIC7HGGKW5CYVSCVDEIMHY
              updated_at: 2016-11-16T22:25:24.878Z
              version: 1479335124878
              is_deleted: false
              present_at_all_locations: true
              item_variation_data:
                item_id: AA27W3M2GGTF3H6AVPNB77CK
                name: Large
                ordinal: 1
                pricing_type: FIXED_PRICING
                price_money:
                  amount: 350
                  currency: USD
        related_objects:
        - type: CATEGORY
          id: BJNQCF2FJ6S6UIDT65ABHLRX
          updated_at: 2016-11-16T22:25:24.878Z
          version: 1479335124878
          is_deleted: false
          present_at_all_locations: true
          category_data:
            name: Beverages
        - type: TAX
          id: HURXQOOAIC4IZSI2BEXQRYFY
          updated_at: 2016-11-16T22:25:24.878Z
          version: 1479335124878
          is_deleted: false
          present_at_all_locations: true
          tax_data:
            name: Sales Tax
            calculation_phase: TAX_SUBTOTAL_PHASE
            inclusion_type: ADDITIVE
            percentage: "5.0"
            enabled: true
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsResponse.python
        csharp: /sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsResponse.csharp
        java: /sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsResponse.java
        php: /sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsResponse.php
        javascript: /sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsResponse.javascript
        ruby: /sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsResponse.ruby
    BatchRetrieveInventoryChangesRequest:
      type: object
      properties:
        catalog_object_ids:
          type: array
          description: |-
            The filter to return results by `CatalogObject` ID.
            The filter is only applicable when set. The default value is null.
          items:
            type: string
        location_ids:
          type: array
          description: "The filter to return results by `Location` ID. \nThe filter\
            \ is only applicable when set. The default value is null."
          items:
            type: string
        types:
          type: array
          description: |-
            The filter to return results by `InventoryChangeType` values other than `TRANSFER`.
            The default value is `[PHYSICAL_COUNT, ADJUSTMENT]`.
            See [InventoryChangeType](#type-inventorychangetype) for possible values
          items:
            $ref: '#/components/schemas/InventoryChangeType'
        statuses:
          type: array
          description: "The filter to return results by `InventoryState` values. \n\
            Use the  `states` filter as its replacement.\nSee [InventoryState](#type-inventorystate)\
            \ for possible values"
          items:
            $ref: '#/components/schemas/InventoryState'
          x-release-status: RETIRED
        states:
          type: array
          description: |-
            The filter to return `ADJUSTMENT` query results by
            `InventoryState`. This filter is only applied when set.
            The default value is null.
            See [InventoryState](#type-inventorystate) for possible values
          items:
            $ref: '#/components/schemas/InventoryState'
        updated_after:
          type: string
          description: "The filter to return results with their `calculated_at` value\
            \  \nafter the given time as specified in an RFC 3339 timestamp. \nThe\
            \ default value is the UNIX epoch of (`1970-01-01T00:00:00Z`)."
        updated_before:
          type: string
          description: "The filter to return results with their `created_at` or `calculated_at`\
            \ value  \nstrictly before the given time as specified in an RFC 3339\
            \ timestamp. \nThe default value is the UNIX epoch of (`1970-01-01T00:00:00Z`)."
        cursor:
          type: string
          description: |-
            A pagination cursor returned by a previous call to this endpoint.
            Provide this to retrieve the next set of results for the original query.

            See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information.
      example:
        catalog_object_ids:
        - W62UWFY35CWMYGVWK6TWJDNI
        location_ids:
        - C6W5YS5QM06F5
        types:
        - PHYSICAL_COUNT
        states:
        - IN_STOCK
        updated_after: 2016-11-01T00:00:00.000Z
        updated_before: 2016-12-01T00:00:00.000Z
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/Inventory/BatchRetrieveInventoryChanges/BatchRetrieveInventoryChangesRequest.python
        csharp: /sdk_samples/Inventory/BatchRetrieveInventoryChanges/BatchRetrieveInventoryChangesRequest.csharp
        java: /sdk_samples/Inventory/BatchRetrieveInventoryChanges/BatchRetrieveInventoryChangesRequest.java
        php: /sdk_samples/Inventory/BatchRetrieveInventoryChanges/BatchRetrieveInventoryChangesRequest.php
        javascript: /sdk_samples/Inventory/BatchRetrieveInventoryChanges/BatchRetrieveInventoryChangesRequest.javascript
        ruby: /sdk_samples/Inventory/BatchRetrieveInventoryChanges/BatchRetrieveInventoryChangesRequest.ruby
    BatchRetrieveInventoryChangesResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        changes:
          type: array
          description: |-
            The current calculated inventory changes for the requested objects
            and locations.
          items:
            $ref: '#/components/schemas/InventoryChange'
        cursor:
          type: string
          description: |-
            The pagination cursor to be used in a subsequent request. If unset,
            this is the final response.
            See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information.
      example:
        errors: []
        changes:
        - type: PHYSICAL_COUNT
          physical_count:
            id: 46YDTW253DWGGK9HMAE6XCAO
            reference_id: 22c07cf4-5626-4224-89f9-691112019399
            catalog_object_id: W62UWFY35CWMYGVWK6TWJDNI
            catalog_object_type: ITEM_VARIATION
            state: IN_STOCK
            location_id: C6W5YS5QM06F5
            quantity: "86"
            source:
              product: SQUARE_POS
              application_id: 416ff29c-86c4-4feb-b58c-9705f21f3ea0
              name: Square Point of Sale 4.37
            employee_id: LRK57NSQ5X7PUD05
            occurred_at: 2016-11-16T22:24:49.028Z
            created_at: 2016-11-16T22:25:24.878Z
      x-release-status: PUBLIC
    BatchRetrieveInventoryCountsRequest:
      type: object
      properties:
        catalog_object_ids:
          type: array
          description: |-
            The filter to return results by `CatalogObject` ID.
            The filter is applicable only when set.  The default is null.
          items:
            type: string
        location_ids:
          type: array
          description: "The filter to return results by `Location` ID. \nThis filter\
            \ is applicable only when set. The default is null."
          items:
            type: string
        updated_after:
          type: string
          description: "The filter to return results with their `calculated_at` value\
            \ \nafter the given time as specified in an RFC 3339 timestamp. \nThe\
            \ default value is the UNIX epoch of (`1970-01-01T00:00:00Z`)."
        cursor:
          type: string
          description: |-
            A pagination cursor returned by a previous call to this endpoint.
            Provide this to retrieve the next set of results for the original query.

            See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information.
        states:
          type: array
          description: |-
            The filter to return results by `InventoryState`. The filter is only applicable when set.
            Ignored are untracked states of `NONE`, `SOLD`, and `UNLINKED_RETURN`.
            The default is null.
            See [InventoryState](#type-inventorystate) for possible values
          items:
            $ref: '#/components/schemas/InventoryState'
      example:
        catalog_object_ids:
        - W62UWFY35CWMYGVWK6TWJDNI
        location_ids:
        - 59TNP9SA8VGDA
        updated_after: 2016-11-16T00:00:00.000Z
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/Inventory/BatchRetrieveInventoryCounts/BatchRetrieveInventoryCountsRequest.python
        csharp: /sdk_samples/Inventory/BatchRetrieveInventoryCounts/BatchRetrieveInventoryCountsRequest.csharp
        java: /sdk_samples/Inventory/BatchRetrieveInventoryCounts/BatchRetrieveInventoryCountsRequest.java
        php: /sdk_samples/Inventory/BatchRetrieveInventoryCounts/BatchRetrieveInventoryCountsRequest.php
        javascript: /sdk_samples/Inventory/BatchRetrieveInventoryCounts/BatchRetrieveInventoryCountsRequest.javascript
        ruby: /sdk_samples/Inventory/BatchRetrieveInventoryCounts/BatchRetrieveInventoryCountsRequest.ruby
    BatchRetrieveInventoryCountsResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        counts:
          type: array
          description: |-
            The current calculated inventory counts for the requested objects
            and locations.
          items:
            $ref: '#/components/schemas/InventoryCount'
        cursor:
          type: string
          description: |-
            The pagination cursor to be used in a subsequent request. If unset,
            this is the final response.

            See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information.
      example:
        errors: []
        counts:
        - catalog_object_id: W62UWFY35CWMYGVWK6TWJDNI
          catalog_object_type: ITEM_VARIATION
          state: IN_STOCK
          location_id: 59TNP9SA8VGDA
          quantity: "79"
          calculated_at: 2016-11-16T22:28:01.223Z
      x-release-status: PUBLIC
    BatchRetrieveOrdersRequest:
      required:
      - order_ids
      type: object
      properties:
        location_id:
          type: string
          description: |-
            The ID of the location for these orders. This field is optional: omit it to retrieve
            orders within the scope of the current authorization's merchant ID.
        order_ids:
          type: array
          description: The IDs of the orders to retrieve. A maximum of 100 orders
            can be retrieved per request.
          items:
            minLength: 1
            type: string
      description: |-
        Defines the fields that are included in requests to the
        BatchRetrieveOrders endpoint.
      example:
        location_id: 057P5VYJ4A5X1
        order_ids:
        - CAISEM82RcpmcFBM0TfOyiHV3es
        - CAISENgvlJ6jLWAzERDzjyHVybY
      x-release-status: PUBLIC
    BatchRetrieveOrdersResponse:
      type: object
      properties:
        orders:
          type: array
          description: The requested orders. This will omit any requested orders that
            do not exist.
          items:
            $ref: '#/components/schemas/Order'
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: |-
        Defines the fields that are included in the response body of
        a request to the BatchRetrieveOrders endpoint.
      example:
        orders:
        - id: CAISEM82RcpmcFBM0TfOyiHV3es
          location_id: 057P5VYJ4A5X1
          reference_id: my-order-001
          line_items:
          - uid: 945986d1-9586-11e6-ad5a-28cfe92138cf
            name: Awesome product
            quantity: "1"
            base_price_money:
              amount: 1599
              currency: USD
            total_money:
              amount: 1599
              currency: USD
          - uid: a8f4168c-9586-11e6-bdf0-28cfe92138cf
            name: Another awesome product
            quantity: "3"
            base_price_money:
              amount: 2000
              currency: USD
            total_money:
              amount: 6000
              currency: USD
          total_money:
            amount: 7599
            currency: USD
      x-release-status: PUBLIC
    BatchUpsertCatalogObjectsRequest:
      required:
      - batches
      - idempotency_key
      type: object
      properties:
        idempotency_key:
          minLength: 1
          type: string
          description: |-
            A value you specify that uniquely identifies this
            request among all your requests. A common way to create
            a valid idempotency key is to use a Universally unique
            identifier (UUID).

            If you're unsure whether a particular request was successful,
            you can reattempt it with the same idempotency key without
            worrying about creating duplicate objects.

            See [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency) for more information.
        batches:
          type: array
          description: |-
            A batch of CatalogObjects to be inserted/updated atomically.
            The objects within a batch will be inserted in an all-or-nothing fashion, i.e., if an error occurs
            attempting to insert or update an object within a batch, the entire batch will be rejected. However, an error
            in one batch will not affect other batches within the same request.

            For each object, its `updated_at` field is ignored and replaced with a current [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates), and its
            `is_deleted` field must not be set to `true`.

            To modify an existing object, supply its ID. To create a new object, use an ID starting
            with `#`. These IDs may be used to create relationships between an object and attributes of
            other objects that reference it. For example, you can create a CatalogItem with
            ID `#ABC` and a CatalogItemVariation with its `item_id` attribute set to
            `#ABC` in order to associate the CatalogItemVariation with its parent
            CatalogItem.

            Any `#`-prefixed IDs are valid only within a single atomic batch, and will be replaced by server-generated IDs.

            Each batch may contain up to 1,000 objects. The total number of objects across all batches for a single request
            may not exceed 10,000. If either of these limits is violated, an error will be returned and no objects will
            be inserted or updated.
          items:
            $ref: '#/components/schemas/CatalogObjectBatch'
      example:
        idempotency_key: 789ff020-f723-43a9-b4b5-43b5dc1fa3dc
        batches:
        - objects:
          - type: ITEM
            id: '#Tea'
            present_at_all_locations: true
            item_data:
              name: Tea
              description: Hot Leaf Juice
              category_id: '#Beverages'
              tax_ids:
              - '#SalesTax'
              variations:
              - type: ITEM_VARIATION
                id: '#Tea_Mug'
                present_at_all_locations: true
                item_variation_data:
                  item_id: '#Tea'
                  name: Mug
                  pricing_type: FIXED_PRICING
                  price_money:
                    amount: 150
                    currency: USD
          - type: ITEM
            id: '#Coffee'
            present_at_all_locations: true
            item_data:
              name: Coffee
              description: Hot Bean Juice
              category_id: '#Beverages'
              tax_ids:
              - '#SalesTax'
              variations:
              - type: ITEM_VARIATION
                id: '#Coffee_Regular'
                present_at_all_locations: true
                item_variation_data:
                  item_id: '#Coffee'
                  name: Regular
                  pricing_type: FIXED_PRICING
                  price_money:
                    amount: 250
                    currency: USD
              - type: ITEM_VARIATION
                id: '#Coffee_Large'
                present_at_all_locations: true
                item_variation_data:
                  item_id: '#Coffee'
                  name: Large
                  pricing_type: FIXED_PRICING
                  price_money:
                    amount: 350
                    currency: USD
          - type: CATEGORY
            id: '#Beverages'
            present_at_all_locations: true
            category_data:
              name: Beverages
          - type: TAX
            id: '#SalesTax'
            present_at_all_locations: true
            tax_data:
              name: Sales Tax
              calculation_phase: TAX_SUBTOTAL_PHASE
              inclusion_type: ADDITIVE
              percentage: "5.0"
              applies_to_custom_amounts: true
              enabled: true
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsRequest.python
        csharp: /sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsRequest.csharp
        java: /sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsRequest.java
        php: /sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsRequest.php
        javascript: /sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsRequest.javascript
        ruby: /sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsRequest.ruby
    BatchUpsertCatalogObjectsResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on any errors that encountered.
          items:
            $ref: '#/components/schemas/Error'
        objects:
          type: array
          description: The created successfully created CatalogObjects.
          items:
            $ref: '#/components/schemas/CatalogObject'
        updated_at:
          type: string
          description: The database [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
            of this update in RFC 3339 format, e.g., "2016-09-04T23:59:33.123Z".
        id_mappings:
          type: array
          description: The mapping between client and server IDs for this upsert.
          items:
            $ref: '#/components/schemas/CatalogIdMapping'
      example:
        objects:
        - type: ITEM
          id: ZSDZN34NAXDLC6D5ZQMNSOUM
          updated_at: 2017-05-10T18:48:39.798Z
          version: 1494442119798
          is_deleted: false
          present_at_all_locations: true
          item_data:
            name: Tea
            description: Hot Leaf Juice
            category_id: LYT72K3WGJFFCIMB63XARP3I
            tax_ids:
            - XHSHLHNWSI3HVI4BW5ZUZXI3
            variations:
            - type: ITEM_VARIATION
              id: NAYHET5R52MIYCEF34ZMAHFM
              updated_at: 2017-05-10T18:48:39.798Z
              version: 1494442119798
              is_deleted: false
              present_at_all_locations: true
              item_variation_data:
                item_id: ZSDZN34NAXDLC6D5ZQMNSOUM
                name: Mug
                ordinal: 0
                pricing_type: FIXED_PRICING
                price_money:
                  amount: 150
                  currency: USD
        - type: ITEM
          id: PJMCEBHHUS3OKDB6PYUHLCPP
          updated_at: 2017-05-10T18:48:39.798Z
          version: 1494442119798
          is_deleted: false
          present_at_all_locations: true
          item_data:
            name: Coffee
            description: Hot Bean Juice
            category_id: LYT72K3WGJFFCIMB63XARP3I
            tax_ids:
            - XHSHLHNWSI3HVI4BW5ZUZXI3
            variations:
            - type: ITEM_VARIATION
              id: OTYDX45SPG7LJQUVCBZI4INH
              updated_at: 2017-05-10T18:48:39.798Z
              version: 1494442119798
              is_deleted: false
              present_at_all_locations: true
              item_variation_data:
                item_id: PJMCEBHHUS3OKDB6PYUHLCPP
                name: Regular
                ordinal: 0
                pricing_type: FIXED_PRICING
                price_money:
                  amount: 250
                  currency: USD
            - type: ITEM_VARIATION
              id: GZDA3JB37FYVOPI4AOEBOITI
              updated_at: 2017-05-10T18:48:39.798Z
              version: 1494442119798
              is_deleted: false
              present_at_all_locations: true
              item_variation_data:
                item_id: PJMCEBHHUS3OKDB6PYUHLCPP
                name: Large
                ordinal: 1
                pricing_type: FIXED_PRICING
                price_money:
                  amount: 350
                  currency: USD
        - type: CATEGORY
          id: LYT72K3WGJFFCIMB63XARP3I
          updated_at: 2017-05-10T18:48:39.798Z
          version: 1494442119798
          is_deleted: false
          present_at_all_locations: true
          category_data:
            name: Beverages
        - type: TAX
          id: XHSHLHNWSI3HVI4BW5ZUZXI3
          updated_at: 2017-05-10T18:48:39.798Z
          version: 1494442119798
          is_deleted: false
          present_at_all_locations: true
          tax_data:
            name: Sales Tax
            calculation_phase: TAX_SUBTOTAL_PHASE
            inclusion_type: ADDITIVE
            percentage: "5.0"
            applies_to_custom_amounts: true
            enabled: true
        id_mappings:
        - client_object_id: '#Tea'
          object_id: ZSDZN34NAXDLC6D5ZQMNSOUM
        - client_object_id: '#Coffee'
          object_id: PJMCEBHHUS3OKDB6PYUHLCPP
        - client_object_id: '#Beverages'
          object_id: LYT72K3WGJFFCIMB63XARP3I
        - client_object_id: '#SalesTax'
          object_id: XHSHLHNWSI3HVI4BW5ZUZXI3
        - client_object_id: '#Tea_Mug'
          object_id: NAYHET5R52MIYCEF34ZMAHFM
        - client_object_id: '#Coffee_Regular'
          object_id: OTYDX45SPG7LJQUVCBZI4INH
        - client_object_id: '#Coffee_Large'
          object_id: GZDA3JB37FYVOPI4AOEBOITI
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsResponse.python
        csharp: /sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsResponse.csharp
        java: /sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsResponse.java
        php: /sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsResponse.php
        javascript: /sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsResponse.javascript
        ruby: /sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsResponse.ruby
    Break:
      required:
      - break_type_id
      - expected_duration
      - is_paid
      - name
      - start_at
      type: object
      properties:
        id:
          type: string
          description: UUID for this object
        start_at:
          minLength: 1
          type: string
          description: |-
            RFC 3339; follows same timezone info as `Shift`. Precision up to
            the minute is respected; seconds are truncated.
        end_at:
          type: string
          description: |-
            RFC 3339; follows same timezone info as `Shift`. Precision up to
            the minute is respected; seconds are truncated.
        break_type_id:
          minLength: 1
          type: string
          description: The `BreakType` this `Break` was templated on.
        name:
          minLength: 1
          type: string
          description: A human-readable name.
        expected_duration:
          minLength: 1
          type: string
          description: |-
            Format: RFC-3339 P[n]Y[n]M[n]DT[n]H[n]M[n]S. The expected length of
            the break.
        is_paid:
          type: boolean
          description: |-
            Whether this break counts towards time worked for compensation
            purposes.
      description: A record of an employee's break during a shift.
      x-release-status: PUBLIC
    BreakType:
      required:
      - break_name
      - expected_duration
      - is_paid
      - location_id
      type: object
      properties:
        id:
          maxLength: 255
          type: string
          description: UUID for this object.
        location_id:
          minLength: 1
          type: string
          description: The ID of the business location this type of break applies
            to.
        break_name:
          minLength: 1
          type: string
          description: |-
            A human-readable name for this type of break. Will be displayed to
            employees in Square products.
        expected_duration:
          minLength: 1
          type: string
          description: |-
            Format: RFC-3339 P[n]Y[n]M[n]DT[n]H[n]M[n]S. The expected length of
            this break. Precision below minutes is truncated.
        is_paid:
          type: boolean
          description: |-
            Whether this break counts towards time worked for compensation
            purposes.
        version:
          minimum: 0
          type: integer
          description: |-
            Used for resolving concurrency issues; request will fail if version
            provided does not match server version at time of request. If a value is not
            provided, Square's servers execute a "blind" write; potentially
            overwriting another writer's data.
        created_at:
          type: string
          description: A read-only timestamp in RFC 3339 format.
          readOnly: true
        updated_at:
          type: string
          description: A read-only timestamp in RFC 3339 format.
          readOnly: true
      description: |-
        A defined break template that sets an expectation for possible `Break`
        instances on a `Shift`.
      x-release-status: PUBLIC
    BulkCreateTeamMembersRequest:
      required:
      - team_members
      type: object
      properties:
        team_members:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CreateTeamMemberRequest'
          description: The data which will be used to create the `TeamMember` objects.
            Each key is the `idempotency_key` that maps to the `CreateTeamMemberRequest`.
      description: Represents a bulk create request for `TeamMember` objects.
      example:
        team_members:
          idempotency-key-1:
            team_member:
              given_name: Joe
              family_name: Doe
              email_address: joe_doe@gmail.com
              reference_id: reference_id_1
              phone_number: +14159283333
              assigned_locations:
                location_ids:
                - YSGH2WBKG94QZ
                - GA2Y9HSJ8KRYT
                assignment_type: EXPLICIT_LOCATIONS
          idempotency-key-2:
            team_member:
              given_name: Jane
              family_name: Smith
              email_address: jane_smith@gmail.com
              reference_id: reference_id_2
              phone_number: +14159223334
              assigned_locations:
                assignment_type: ALL_CURRENT_AND_FUTURE_LOCATIONS
      x-release-status: PUBLIC
    BulkCreateTeamMembersResponse:
      type: object
      properties:
        team_members:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CreateTeamMemberResponse'
          description: The successfully created `TeamMember` objects. Each key is
            the `idempotency_key` that maps to the `CreateTeamMemberRequest`.
        errors:
          type: array
          description: The errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: Represents a response from a bulk create request, containing the
        created `TeamMember` objects or error messages.
      example:
        team_members:
          idempotency-key-1:
            team_member:
              id: ywhG1qfIOoqsHfVRubFV
              reference_id: reference_id_1
              is_owner: false
              status: ACTIVE
              given_name: Joe
              family_name: Doe
              email_address: joe_doe@gmail.com
              phone_number: +14159283333
              assigned_locations:
                assignment_type: EXPLICIT_LOCATIONS
                location_ids:
                - GA2Y9HSJ8KRYT
                - YSGH2WBKG94QZ
          idempotency-key-2:
            team_member:
              id: IF_Ncrg7fHhCqxVI9T6R
              reference_id: reference_id_2
              is_owner: false
              status: ACTIVE
              given_name: Jane
              family_name: Smith
              email_address: jane_smith@gmail.com
              phone_number: +14159223334
              assigned_locations:
                assignment_type: ALL_CURRENT_AND_FUTURE_LOCATIONS
      x-release-status: PUBLIC
    BulkUpdateTeamMembersRequest:
      required:
      - team_members
      type: object
      properties:
        team_members:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/UpdateTeamMemberRequest'
          description: The data which will be used to update the `TeamMember` objects.
            Each key is the `team_member_id` that maps to the `UpdateTeamMemberRequest`.
      description: Represents a bulk update request for `TeamMember` objects.
      example:
        team_members:
          fpgteZNMaf0qOK-a4t6P:
            team_member:
              reference_id: reference_id_1
              is_owner: false
              status: ACTIVE
              given_name: Joe
              family_name: Doe
              email_address: joe_doe@gmail.com
              phone_number: +14159283333
              assigned_locations:
                location_ids:
                - YSGH2WBKG94QZ
                - GA2Y9HSJ8KRYT
                assignment_type: EXPLICIT_LOCATIONS
          AFMwA08kR-MIF-3Vs0OE:
            team_member:
              reference_id: reference_id_2
              is_owner: false
              status: ACTIVE
              given_name: Jane
              family_name: Smith
              email_address: jane_smith@gmail.com
              phone_number: +14159223334
              assigned_locations:
                assignment_type: ALL_CURRENT_AND_FUTURE_LOCATIONS
      x-release-status: PUBLIC
    BulkUpdateTeamMembersResponse:
      type: object
      properties:
        team_members:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/UpdateTeamMemberResponse'
          description: The successfully updated `TeamMember` objects. Each key is
            the `team_member_id` that maps to the `UpdateTeamMemberRequest`.
        errors:
          type: array
          description: The errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: Represents a response from a bulk update request, containing the
        updated `TeamMember` objects or error messages.
      example:
        team_members:
          fpgteZNMaf0qOK-a4t6P:
            team_member:
              id: fpgteZNMaf0qOK-a4t6P
              reference_id: reference_id_1
              is_owner: false
              status: ACTIVE
              given_name: Joe
              family_name: Doe
              email_address: joe_doe@gmail.com
              phone_number: +14159283333
              created_at: 2020-06-11T22:46:57.095Z
              assigned_locations:
                assignment_type: EXPLICIT_LOCATIONS
                location_ids:
                - GA2Y9HSJ8KRYT
                - YSGH2WBKG94QZ
          AFMwA08kR-MIF-3Vs0OE:
            team_member:
              id: AFMwA08kR-MIF-3Vs0OE
              reference_id: reference_id_2
              is_owner: false
              status: ACTIVE
              given_name: Jane
              family_name: Smith
              email_address: jane_smith@gmail.com
              phone_number: +14159223334
              created_at: 2020-06-11T22:46:57.001Z
              assigned_locations:
                assignment_type: ALL_CURRENT_AND_FUTURE_LOCATIONS
      x-release-status: PUBLIC
    BusinessHours:
      type: object
      properties:
        periods:
          type: array
          description: |-
            The list of time periods during which the business is open. There may be at most 10
            periods per day.
          items:
            $ref: '#/components/schemas/BusinessHoursPeriod'
      description: Represents the hours of operation for a business location.
      x-release-status: PUBLIC
    BusinessHoursPeriod:
      type: object
      properties:
        day_of_week:
          $ref: '#/components/schemas/DayOfWeek'
        start_local_time:
          type: string
          description: |-
            The start time of a business hours period, specified in local time using partial-time
            RFC3339 format.
        end_local_time:
          type: string
          description: |-
            The end time of a business hours period, specified in local time using partial-time
            RFC3339 format.
      description: Represents a period of time during which a business location is
        open.
      x-release-status: PUBLIC
    CalculateLoyaltyPointsRequest:
      type: object
      properties:
        order_id:
          type: string
          description: |-
            The [order](#type-Order) ID for which to calculate the points.
            Specify this field if your application uses the Orders API to process orders.
            Otherwise, specify the `transaction_amount`.
        transaction_amount_money:
          $ref: '#/components/schemas/Money'
      description: "A request to calculate the points that a buyer can earn from \n\
        a specified purchase."
      example:
        order_id: RFZfrdtm3mhO1oGzf5Cx7fEMsmGZY
      x-release-status: BETA
      x-params-example: ?program_id=d619f755-2d17-41f3-990d-c04ecedd64dd
    CalculateLoyaltyPointsResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        points:
          minimum: 0
          type: integer
          description: The points that the buyer can earn from a specified purchase.
      description: "A response that includes the points that the buyer can earn from\
        \ \na specified purchase."
      example:
        points: 6
      x-release-status: BETA
    CalculateOrderRequest:
      required:
      - order
      type: object
      properties:
        order:
          $ref: '#/components/schemas/Order'
        proposed_rewards:
          type: array
          description: |-
            Identifies one or more loyalty reward tiers to apply during order calculation.
            The discounts defined by the reward tiers are added to the order only to preview the
            effect of applying the specified reward(s). The reward(s) do not correspond to actual
            redemptions, that is, no `reward`s are created. Therefore, the reward `id`s are
            random strings used only to reference the reward tier.
          items:
            $ref: '#/components/schemas/OrderReward'
      example:
        idempotency_key: b3e98fe3-b8de-471c-82f1-545f371e637c
        order:
          location_id: D7AVYMEAPJ3A3
          discounts:
          - name: 50% Off
            percentage: "50"
            scope: ORDER
          line_items:
          - name: Item 1
            quantity: "1"
            base_price_money:
              amount: 500
              currency: USD
          - name: Item 2
            quantity: "2"
            base_price_money:
              amount: 300
              currency: USD
      x-release-status: BETA
    CalculateOrderResponse:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/Order'
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      example:
        order:
          location_id: D7AVYMEAPJ3A3
          line_items:
          - uid: ULkg0tQTRK2bkU9fNv3IJD
            quantity: "1"
            name: Item 1
            base_price_money:
              amount: 500
              currency: USD
            gross_sales_money:
              amount: 500
              currency: USD
            total_tax_money:
              amount: 0
              currency: USD
            total_discount_money:
              amount: 250
              currency: USD
            total_money:
              amount: 250
              currency: USD
            variation_total_price_money:
              amount: 500
              currency: USD
            applied_discounts:
            - uid: 9zr9S4dxvPAixvn0lpa1VC
              discount_uid: zGsRZP69aqSSR9lq9euSPB
              applied_money:
                amount: 250
                currency: USD
          - uid: mumY8Nun4BC5aKe2yyx5a
            quantity: "2"
            name: Item 2
            base_price_money:
              amount: 300
              currency: USD
            gross_sales_money:
              amount: 600
              currency: USD
            total_tax_money:
              amount: 0
              currency: USD
            total_discount_money:
              amount: 300
              currency: USD
            total_money:
              amount: 300
              currency: USD
            variation_total_price_money:
              amount: 600
              currency: USD
            applied_discounts:
            - uid: qa8LwwZK82FgSEkQc2HYVC
              discount_uid: zGsRZP69aqSSR9lq9euSPB
              applied_money:
                amount: 300
                currency: USD
          discounts:
          - uid: zGsRZP69aqSSR9lq9euSPB
            name: 50% Off
            percentage: "50"
            applied_money:
              amount: 550
              currency: USD
            type: FIXED_PERCENTAGE
            scope: ORDER
          created_at: 2020-05-18T16:30:49.614Z
          updated_at: 2020-05-18T16:30:49.614Z
          state: OPEN
          version: 1
          total_tax_money:
            amount: 0
            currency: USD
          total_discount_money:
            amount: 550
            currency: USD
          total_tip_money:
            amount: 0
            currency: USD
          total_money:
            amount: 550
            currency: USD
          total_service_charge_money:
            amount: 0
            currency: USD
          net_amounts:
            total_money:
              amount: 550
              currency: USD
            tax_money:
              amount: 0
              currency: USD
            discount_money:
              amount: 550
              currency: USD
            tip_money:
              amount: 0
              currency: USD
            service_charge_money:
              amount: 0
              currency: USD
      x-release-status: BETA
    CancelInvoiceRequest:
      required:
      - version
      type: object
      properties:
        version:
          minimum: 0
          type: integer
          description: "The version of the [invoice](#type-invoice) to cancel.\nIf\
            \ you do not know the version, you can call \n[GetInvoice](#endpoint-Invoices-GetInvoice)\
            \ or [ListInvoices](#endpoint-Invoices-ListInvoices)."
      description: Describes a `CancelInvoice` request.
      example:
        version: 0
      x-release-status: BETA
    CancelInvoiceResponse:
      type: object
      properties:
        invoice:
          $ref: '#/components/schemas/Invoice'
        errors:
          type: array
          description: Information about errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: The response returned by the `CancelInvoice` request.
      example:
        invoice:
          id: gt2zv1z6mnUm1V7KMxxf3w
          version: 1
          location_id: ES0RJRZYEC39A
          order_id: CAISENgvlJ6jLWAzERDzjyHVybY
          payment_requests:
          - uid: 2da7964f-f3d2-4f43-81e8-5aa220bf3355
            request_method: EMAIL
            request_type: BALANCE
            due_date: 2030-01-24
            tipping_enabled: true
            reminders:
            - uid: beebd363-e47f-4075-8785-c235aaa7df11
              relative_scheduled_days: -1
              message: Your invoice is due tomorrow
              status: PENDING
            computed_amount_money:
              amount: 10000
              currency: USD
            total_completed_amount_money:
              amount: 0
              currency: USD
          invoice_number: inv-100
          title: Event Planning Services
          description: We appreciate your business!
          scheduled_at: 2030-01-13T10:00:00Z
          status: CANCELED
          timezone: America/Los_Angeles
          created_at: 2020-06-18T17:45:13Z
          updated_at: 2020-06-18T18:23:11Z
          primary_recipient:
            customer_id: JDKYHBWT1D4F8MFH63DBMEN8Y4
            given_name: Amelia
            family_name: Earhart
            email_address: Amelia.Earhart@example.com
            phone_number: 1-212-555-4240
      x-release-status: BETA
    CancelPaymentByIdempotencyKeyRequest:
      required:
      - idempotency_key
      type: object
      properties:
        idempotency_key:
          maxLength: 45
          minLength: 1
          type: string
          description: '`idempotency_key` identifying the payment to be canceled.'
      description: Specifies idempotency key of a payment to cancel.
      example:
        idempotency_key: a7e36d40-d24b-11e8-b568-0800200c9a66
      x-release-status: PUBLIC
    CancelPaymentByIdempotencyKeyResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: |-
        Return value from the
        [CancelPaymentByIdempotencyKey](#endpoint-payments-cancelpaymentbyidempotencykey) endpoint.
        On success, `errors` will be empty.
      example: {}
      x-release-status: PUBLIC
    CancelPaymentRequest:
      type: object
      properties: {}
      description: |-
        Cancels (voids) a payment before it has been completed.
        Note: only payments created with `autocomplete` set to false can be canceled.
      example: {}
      x-release-status: PUBLIC
    CancelPaymentResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
        payment:
          $ref: '#/components/schemas/Payment'
      description: Return value from the [CancelPayment](#endpoint-payments-cancelpayment)
        endpoint.
      example:
        payment:
          id: GQTFp1ZlXdpoW4o6eGiZhbjosiDFf
          created_at: 2018-10-17T20:38:46.743Z
          updated_at: 2018-10-17T20:38:57.693Z
          amount_money:
            amount: 200
            currency: USD
          app_fee_money:
            amount: 10
            currency: USD
          total_money:
            amount: 200
            currency: USD
          status: CANCELED
          source_type: CARD
          card_details:
            status: VOIDED
            card:
              card_brand: VISA
              last_4: "1234"
              exp_month: 2
              exp_year: 2024
              fingerprint: sq-1-9PP0tWfcM6vIsYmfsesdjfhduHSDFNdJFNDfDNFjdfjpseirDErsaP
              card_type: DEBIT
              prepaid_type: PREPAID
              bin: "411111"
            entry_method: KEYED
            cvv_status: CVV_ACCEPTED
            avs_status: AVS_ACCEPTED
            auth_result_code: eWZBDh
            statement_description: SQ *MY MERCHANT
          location_id: XTI0H92143A39
          order_id: m2Hr8Hk8A3CTyQQ1k4ynExg92tO3
          reference_id: "123456"
          note: Brief description
          customer_id: RDX9Z4XTIZR7MRZJUXNY9HUK6I
      x-release-status: PUBLIC
    CancelSubscriptionRequest:
      type: object
      properties: {}
      description: "Defines parameters in a \n[CancelSubscription](#endpoint-subscriptions-cancelsubscription)\
        \ endpoint request."
      x-release-status: BETA
    CancelSubscriptionResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information about errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
        subscription:
          $ref: '#/components/schemas/Subscription'
      description: "Defines fields that are included in a \n[CancelSubscription](#endpoint-subscriptions-cancelsubscription)\
        \ response."
      example:
        subscription:
          id: 910afd30-464a-4e00-a8d8-2296eEXAMPLE
          location_id: S8GWD5R9QB376
          plan_id: 6JHXF3B2CW3YKHDV4XEM674H
          customer_id: CHFGVKYY8RSV93M5KCYTG4PN0G
          card_id: ccof:qy5x8hHGYsgLrp4Q4GB
          start_date: 2020-04-24
          canceled_date: 2020-05-01
          paid_until_date: 2020-05-01
          status: ACTIVE
          created_at: 2020-08-03T21:53:10Z
          version: 1594311617331
          timezone: America/Los_Angeles
      x-release-status: BETA
    CancelTerminalCheckoutRequest:
      type: object
      properties: {}
      example: {}
      x-release-status: BETA
    CancelTerminalCheckoutResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
        checkout:
          $ref: '#/components/schemas/TerminalCheckout'
      example:
        checkout:
          id: S1yDlPQx7slqO
          amount_money:
            amount: 123
            currency: USD
          reference_id: id36815
          device_options:
            device_id: dbb5d83a-7838-11ea-bc55-0242ac130003
            tip_settings:
              allow_tipping: true
            skip_receipt_screen: true
          status: CANCELED
          cancel_reason: SELLER_CANCELED
          created_at: 2020-03-16T15:31:19.934Z
          updated_at: 2020-03-16T15:31:45.787Z
          app_id: APP_ID
          deadline_duration: PT10M
      x-release-status: BETA
    CaptureTransactionRequest:
      type: object
      properties: {}
      x-release-status: DEPRECATED
      x-sq-sdk-sample-code:
        python: /sdk_samples/CaptureTransaction/CaptureTransactionRequest.python
        csharp: /sdk_samples/CaptureTransaction/CaptureTransactionRequest.csharp
        java: /sdk_samples/CaptureTransaction/CaptureTransactionRequest.java
        php: /sdk_samples/CaptureTransaction/CaptureTransactionRequest.php
        javascript: /sdk_samples/CaptureTransaction/CaptureTransactionRequest.javascript
        ruby: /sdk_samples/CaptureTransaction/CaptureTransactionRequest.ruby
    CaptureTransactionResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: |-
        Defines the fields that are included in the response body of
        a request to the [CaptureTransaction](#endpoint-capturetransaction) endpoint.
      example: {}
      x-release-status: DEPRECATED
      x-sq-sdk-sample-code:
        python: /sdk_samples/CaptureTransaction/CaptureTransactionResponse.python
        csharp: /sdk_samples/CaptureTransaction/CaptureTransactionResponse.csharp
        java: /sdk_samples/CaptureTransaction/CaptureTransactionResponse.java
        php: /sdk_samples/CaptureTransaction/CaptureTransactionResponse.php
        javascript: /sdk_samples/CaptureTransaction/CaptureTransactionResponse.javascript
        ruby: /sdk_samples/CaptureTransaction/CaptureTransactionResponse.ruby
    Card:
      type: object
      properties:
        id:
          maxLength: 64
          type: string
          description: Unique ID for this card. Generated by Square.
          readOnly: true
        card_brand:
          $ref: '#/components/schemas/CardBrand'
        last_4:
          maxLength: 4
          type: string
          description: The last 4 digits of the card number.
          readOnly: true
        exp_month:
          type: integer
          description: The expiration month of the associated card as an integer between
            1 and 12.
          format: int64
        exp_year:
          type: integer
          description: The four-digit year of the card's expiration date.
          format: int64
        cardholder_name:
          maxLength: 96
          type: string
          description: The name of the cardholder.
        billing_address:
          $ref: '#/components/schemas/Address'
        fingerprint:
          maxLength: 255
          type: string
          description: |-
            __Not currently set.__ Intended as a Square-assigned identifier, based
            on the card number, to identify the card across multiple locations within a
            single application.
          readOnly: true
        card_type:
          $ref: '#/components/schemas/CardType'
        prepaid_type:
          $ref: '#/components/schemas/CardPrepaidType'
        bin:
          maxLength: 6
          type: string
          description: |-
            The first six digits of the card number, known as the Bank Identification Number (BIN). Only the Payments API
            returns this field.
          readOnly: true
      description: |-
        Represents the payment details of a card to be used for payments. These
        details are determined by the `card_nonce` generated by `SqPaymentForm`.
      x-release-status: PUBLIC
    CardPaymentDetails:
      type: object
      properties:
        status:
          maxLength: 50
          type: string
          description: |-
            The card payment's current state. It can be one of: `AUTHORIZED`, `CAPTURED`, `VOIDED`,
            `FAILED`.
        card:
          $ref: '#/components/schemas/Card'
        entry_method:
          maxLength: 50
          type: string
          description: |-
            The method used to enter the card's details for the payment.  Can be
            `KEYED`, `SWIPED`, `EMV`, `ON_FILE`, or `CONTACTLESS`.
        cvv_status:
          maxLength: 50
          type: string
          description: |-
            Status code returned from the Card Verification Value (CVV) check. Can be
            `CVV_ACCEPTED`, `CVV_REJECTED`, `CVV_NOT_CHECKED`.
        avs_status:
          maxLength: 50
          type: string
          description: |-
            Status code returned from the Address Verification System (AVS) check. Can be
            `AVS_ACCEPTED`, `AVS_REJECTED`, `AVS_NOT_CHECKED`.
        auth_result_code:
          maxLength: 10
          type: string
          description: |-
            Status code returned by the card issuer that describes the payment's
            authorization status.
        application_identifier:
          maxLength: 32
          type: string
          description: For EMV payments, identifies the EMV application used for the
            payment.
        application_name:
          maxLength: 16
          type: string
          description: For EMV payments, the human-readable name of the EMV application
            used for the payment.
        application_cryptogram:
          maxLength: 16
          type: string
          description: For EMV payments, the cryptogram generated for the payment.
        verification_method:
          maxLength: 50
          type: string
          description: |-
            For EMV payments, method used to verify the cardholder's identity.  Can be one of
            `PIN`, `SIGNATURE`, `PIN_AND_SIGNATURE`, `ON_DEVICE`, or `NONE`.
        verification_results:
          maxLength: 50
          type: string
          description: |-
            For EMV payments, the results of the cardholder verification.  Can be one of
            `SUCCESS`, `FAILURE`, or `UNKNOWN`.
        statement_description:
          maxLength: 50
          type: string
          description: |-
            The statement description sent to the card networks.

            Note: The actual statement description will vary and is likely to be truncated and appended with
            additional information on a per issuer basis.
        device_details:
          $ref: '#/components/schemas/DeviceDetails'
        refund_requires_card_presence:
          type: boolean
          description: |-
            Whether or not the card is required to be physically present in order for the payment to
            be refunded.  If true, the card is required to be present.
          x-release-status: BETA
        errors:
          type: array
          description: Information on errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: Reflects the current status of a card payment.
      x-release-status: PUBLIC
    CashDrawerDevice:
      type: object
      properties:
        id:
          type: string
          description: The device Square-issued ID
        name:
          type: string
          description: The device merchant-specified name.
      example:
        name: name
        id: id
      x-release-status: PUBLIC
    CashDrawerShift:
      type: object
      properties:
        id:
          type: string
          description: The shift unique ID.
        state:
          $ref: '#/components/schemas/CashDrawerShiftState'
        opened_at:
          type: string
          description: The time when the shift began, in ISO 8601 format.
        ended_at:
          type: string
          description: The time when the shift ended, in ISO 8601 format.
        closed_at:
          type: string
          description: The time when the shift was closed, in ISO 8601 format.
        employee_ids:
          type: array
          description: |-
            The IDs of all employees that were logged into Square Point of Sale at any
            point while the cash drawer shift was open.
          items:
            type: string
        opening_employee_id:
          type: string
          description: The ID of the employee that started the cash drawer shift.
        ending_employee_id:
          type: string
          description: The ID of the employee that ended the cash drawer shift.
        closing_employee_id:
          type: string
          description: |-
            The ID of the employee that closed the cash drawer shift by auditing
            the cash drawer contents.
        description:
          type: string
          description: The free-form text description of a cash drawer by an employee.
        opened_cash_money:
          $ref: '#/components/schemas/Money'
        cash_payment_money:
          $ref: '#/components/schemas/Money'
        cash_refunds_money:
          $ref: '#/components/schemas/Money'
        cash_paid_in_money:
          $ref: '#/components/schemas/Money'
        cash_paid_out_money:
          $ref: '#/components/schemas/Money'
        expected_cash_money:
          $ref: '#/components/schemas/Money'
        closed_cash_money:
          $ref: '#/components/schemas/Money'
        device:
          $ref: '#/components/schemas/CashDrawerDevice'
      description: |-
        This model gives the details of a cash drawer shift.
        The cash_payment_money, cash_refund_money, cash_paid_in_money,
        and cash_paid_out_money fields are all computed by summing their respective
        event types.
      example:
        expected_cash_money: null
        closed_at: closed_at
        ending_employee_id: ending_employee_id
        employee_ids:
        - employee_ids
        - employee_ids
        cash_refunds_money: null
        description: description
        closing_employee_id: closing_employee_id
        cash_paid_out_money: null
        closed_cash_money: null
        cash_paid_in_money: null
        opened_at: opened_at
        opened_cash_money:
          amount: 0
          currency: UNKNOWN_CURRENCY
        opening_employee_id: opening_employee_id
        cash_payment_money: null
        id: id
        state: OPEN
        device:
          name: name
          id: id
        ended_at: ended_at
      x-release-status: PUBLIC
    CashDrawerShiftEvent:
      type: object
      properties:
        id:
          type: string
          description: The unique ID of the event.
        employee_id:
          type: string
          description: The ID of the employee that created the event.
        event_type:
          $ref: '#/components/schemas/CashDrawerEventType'
        event_money:
          $ref: '#/components/schemas/Money'
        created_at:
          type: string
          description: The event time in ISO 8601 format.
        description:
          type: string
          description: |-
            An optional description of the event, entered by the employee that
            created the event.
      example:
        event_money:
          amount: 0
          currency: UNKNOWN_CURRENCY
        event_type: NO_SALE
        employee_id: employee_id
        created_at: created_at
        description: description
        id: id
      x-release-status: PUBLIC
    CashDrawerShiftSummary:
      type: object
      properties:
        id:
          type: string
          description: The shift unique ID.
        state:
          $ref: '#/components/schemas/CashDrawerShiftState'
        opened_at:
          type: string
          description: The shift start time in ISO 8601 format.
        ended_at:
          type: string
          description: The shift end time in ISO 8601 format.
        closed_at:
          type: string
          description: The shift close time in ISO 8601 format.
        description:
          type: string
          description: An employee free-text description of a cash drawer shift.
        opened_cash_money:
          $ref: '#/components/schemas/Money'
        expected_cash_money:
          $ref: '#/components/schemas/Money'
        closed_cash_money:
          $ref: '#/components/schemas/Money'
      description: |-
        The summary of a closed cash drawer shift.
        This model contains only the money counted to start a cash drawer shift, counted
        at the end of the shift, and the amount that should be in the drawer at shift
        end based on summing all cash drawer shift events.
      example:
        opened_at: opened_at
        expected_cash_money: null
        closed_at: closed_at
        opened_cash_money:
          amount: 0
          currency: UNKNOWN_CURRENCY
        description: description
        id: id
        state: OPEN
        ended_at: ended_at
        closed_cash_money: null
      x-release-status: PUBLIC
    CatalogCategory:
      type: object
      properties:
        name:
          maxLength: 255
          type: string
          description: The category name. This is a searchable attribute for use in
            applicable query filters, and its value length is of Unicode code points.
      description: A category to which a `CatalogItem` instance belongs.
      example:
        object:
          type: CATEGORY
          id: '#Beverages'
          present_at_all_locations: true
          category_data:
            name: Beverages
      x-release-status: PUBLIC
    CatalogCustomAttributeDefinition:
      required:
      - allowed_object_types
      - name
      - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/CatalogCustomAttributeDefinitionType'
        name:
          maxLength: 255
          minLength: 1
          type: string
          description: |2-
             The name of this definition for API and seller-facing UI purposes.
            The name must be unique within the (merchant, application_id) pair. Required.
            May not be empty and may not exceed 255 characters. Can be modified after creation.
        description:
          maxLength: 255
          type: string
          description: |-
            Seller-oriented description of the meaning of this Custom Attribute,
            any constraints that the seller should observe, etc. May be displayed as a tooltip in Square UIs.
        source_application:
          $ref: '#/components/schemas/SourceApplication'
        allowed_object_types:
          type: array
          description: |-
            The set of Catalog Object Types that this Custom Attribute may be applied to.
            Currently, only `ITEM` and `ITEM_VARIATION` are allowed. At least one type must be included.
            See [CatalogObjectType](#type-catalogobjecttype) for possible values
          items:
            $ref: '#/components/schemas/CatalogObjectType'
        seller_visibility:
          $ref: '#/components/schemas/CatalogCustomAttributeDefinitionSellerVisibility'
        app_visibility:
          $ref: '#/components/schemas/CatalogCustomAttributeDefinitionAppVisibility'
        string_config:
          $ref: '#/components/schemas/CatalogCustomAttributeDefinitionStringConfig'
        number_config:
          $ref: '#/components/schemas/CatalogCustomAttributeDefinitionNumberConfig'
        selection_config:
          $ref: '#/components/schemas/CatalogCustomAttributeDefinitionSelectionConfig'
        custom_attribute_usage_count:
          type: integer
          description: |-
            __Read-only.__ The number of custom attributes that reference this
            custom attribute definition. Set by the server in response to a ListCatalog
            request with `include_counts` set to `true`.  If the actual count is greater
            than 100, `custom_attribute_usage_count` will be set to `100`.
        key:
          maxLength: 60
          minLength: 1
          pattern: ^[a-zA-Z0-9_-]*$
          type: string
          description: |-
            The name of the desired custom attribute key that can be used to access
            the custom attribute value on catalog objects. Cannot be modified after the
            custom attribute definition has been created.
            Must be between 1 and 60 characters, and may only contain the characters [a-zA-Z0-9_-].
      description: |-
        Contains information defining a custom attribute. Custom attributes are
        intended to store additional information about a catalog object or to associate a
        catalog object with an entity in another system. Do not use custom attributes
        to store any sensitive information (personally identifiable information, card details, etc.).
        [Read more about custom attributes](https://developer.squareup.com/docs/catalog-api/add-custom-attributes)
      x-release-status: BETA
    CatalogCustomAttributeDefinitionNumberConfig:
      type: object
      properties:
        precision:
          maximum: 5
          minimum: 0
          type: integer
          description: |-
            An integer between 0 and 5 that represents the maximum number of
            positions allowed after the decimal in number custom attribute values
            For example:

            - if the precision is 0, the quantity can be 1, 2, 3, etc.
            - if the precision is 1, the quantity can be 0.1, 0.2, etc.
            - if the precision is 2, the quantity can be 0.01, 0.12, etc.

            Default: 5
      x-release-status: BETA
    CatalogCustomAttributeDefinitionSelectionConfig:
      type: object
      properties:
        max_allowed_selections:
          maximum: 100
          type: integer
          description: |-
            The maximum number of selections that can be set. The maximum value for this
            attribute is 100. The default value is 1. The value can be modified, but changing the value will not
            affect existing custom attribute values on objects. Clients need to
            handle custom attributes with more selected values than allowed by this limit.
        allowed_selections:
          type: array
          description: |-
            The set of valid `CatalogCustomAttributeSelections`. Up to a maximum of 100
            selections can be defined. Can be modified.
          items:
            $ref: '#/components/schemas/CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection'
      description: Configuration associated with `SELECTION`-type custom attribute
        definitions.
      x-release-status: BETA
    CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection:
      required:
      - name
      type: object
      properties:
        uid:
          type: string
          description: Unique ID set by Square.
        name:
          maxLength: 255
          minLength: 1
          type: string
          description: Selection name, unique within `allowed_selections`.
      description: A named selection for this `SELECTION`-type custom attribute definition.
      x-release-status: BETA
    CatalogCustomAttributeDefinitionStringConfig:
      type: object
      properties:
        enforce_uniqueness:
          type: boolean
          description: |-
            If true, each Custom Attribute instance associated with this Custom Attribute
            Definition must have a unique value within the seller's catalog. For
            example, this may be used for a value like a SKU that should not be
            duplicated within a seller's catalog. May not be modified after the
            definition has been created.
      description: Configuration associated with Custom Attribute Definitions of type
        `STRING`.
      x-release-status: BETA
    CatalogCustomAttributeValue:
      type: object
      properties:
        name:
          type: string
          description: The name of the custom attribute.
        string_value:
          type: string
          description: The string value of the custom attribute.  Populated if `type`
            = `STRING`.
        custom_attribute_definition_id:
          type: string
          description: __Read-only.__ The id of the [CatalogCustomAttributeDefinition](#type-CatalogCustomAttributeDefinition)
            this value belongs to.
        type:
          $ref: '#/components/schemas/CatalogCustomAttributeDefinitionType'
        number_value:
          type: string
          description: |-
            Populated if `type` = `NUMBER`. Contains a string
            representation of a decimal number, using a `.` as the decimal separator.
        boolean_value:
          type: boolean
          description: A `true` or `false` value. Populated if `type` = `BOOLEAN`.
        selection_uid_values:
          type: array
          description: One or more choices from `allowed_selections`. Populated if
            `type` = `SELECTION`.
          items:
            type: string
        key:
          type: string
          description: __Read-only.__ A copy of key from the associated `CatalogCustomAttributeDefinition`.
      description: |-
        An instance of a custom attribute. Custom attributes can be defined and
        added to `ITEM` and `ITEM_VARIATION` type catalog objects.
        [Read more about custom attributes](https://developer.squareup.com/docs/catalog-api/add-custom-attributes).
      x-release-status: BETA
    CatalogDiscount:
      type: object
      properties:
        name:
          maxLength: 255
          type: string
          description: The discount name. This is a searchable attribute for use in
            applicable query filters, and its value length is of Unicode code points.
        discount_type:
          $ref: '#/components/schemas/CatalogDiscountType'
        percentage:
          type: string
          description: |-
            The percentage of the discount as a string representation of a decimal number, using a `.` as the decimal
            separator and without a `%` sign. A value of `7.5` corresponds to `7.5%`. Specify a percentage of `0` if `discount_type`
            is `VARIABLE_PERCENTAGE`.

            Do not use this field for amount-based or variable discounts.
        amount_money:
          $ref: '#/components/schemas/Money'
        pin_required:
          type: boolean
          description: |-
            Indicates whether a mobile staff member needs to enter their PIN to apply the
            discount to a payment in the Square Point of Sale app.
        label_color:
          type: string
          description: The color of the discount display label in the Square Point
            of Sale app. This must be a valid hex color code.
        modify_tax_basis:
          $ref: '#/components/schemas/CatalogDiscountModifyTaxBasis'
      description: A discount applicable to items.
      example:
        object:
          type: DISCOUNT
          id: '#Maythe4th'
          present_at_all_locations: true
          discount_data:
            name: Welcome to the Dark(Roast) Side!
            discount_type: FIXED_PERCENTAGE
            percentage: "5.4"
            pin_required: false
            label_color: red
      x-release-status: PUBLIC
    CatalogIdMapping:
      type: object
      properties:
        client_object_id:
          type: string
          description: The client-supplied temporary `#`-prefixed ID for a new `CatalogObject`.
        object_id:
          type: string
          description: The permanent ID for the CatalogObject created by the server.
      description: "A mapping between a temporary client-supplied ID and a permanent\
        \ server-generated ID. \n\nWhen calling [UpsertCatalogObject](#endpoint-Catalog-UpsertCatalogObject)\
        \ or \n[BatchUpsertCatalogObjects](#endpoint-Catalog-BatchUpsertCatalogObjects)\
        \ to  \ncreate a [CatalogObject](#type-CatalogObject) instance, you can supply\
        \ \na temporary ID for the to-be-created object, especially when the object\
        \ is to be referenced \nelsewhere in the same request body. This temporary\
        \ ID can be any string unique within \nthe call, but must be prefixed by \"\
        #\". \n\nAfter the request is sumbitted and the object created, a permanent\
        \ server-generated ID is assigned \nto the new object. The permanent ID is\
        \ unique across the Square catalog."
      x-release-status: PUBLIC
    CatalogImage:
      type: object
      properties:
        name:
          type: string
          description: The internal name to identify this image in calls to the Square
            API.
        url:
          type: string
          description: |-
            The URL of this image, generated by Square after an image is uploaded
            using the [CreateCatalogImage](#endpoint-Catalog-CreateCatalogImage) endpoint.
        caption:
          type: string
          description: |-
            A caption that describes what is shown in the image. Displayed in the
            Square Online Store. This is a searchable attribute for use in applicable query filters.
      description: |-
        An image file to use in Square catalogs. It can be associated with catalog
        items, item variations, and categories.
      x-release-status: PUBLIC
    CatalogInfoRequest:
      type: object
      properties: {}
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/Catalog/CatalogInfo/CatalogInfoRequest.python
        csharp: /sdk_samples/Catalog/CatalogInfo/CatalogInfoRequest.csharp
        java: /sdk_samples/Catalog/CatalogInfo/CatalogInfoRequest.java
        php: /sdk_samples/Catalog/CatalogInfo/CatalogInfoRequest.php
        javascript: /sdk_samples/Catalog/CatalogInfo/CatalogInfoRequest.javascript
        ruby: /sdk_samples/Catalog/CatalogInfo/CatalogInfoRequest.ruby
    CatalogInfoResponse:
      type: object
      properties:
        errors:
          type: array
          description: The set of errors encountered.
          items:
            $ref: '#/components/schemas/Error'
        limits:
          $ref: '#/components/schemas/CatalogInfoResponseLimits'
        standard_unit_description_group:
          $ref: '#/components/schemas/StandardUnitDescriptionGroup'
      example:
        limits:
          batch_upsert_max_objects_per_batch: 1000
          batch_upsert_max_total_objects: 10000
          batch_retrieve_max_object_ids: 1000
          search_max_page_limit: 1000
          batch_delete_max_object_ids: 200
          update_item_taxes_max_item_ids: 1000
          update_item_taxes_max_taxes_to_enable: 1000
          update_item_taxes_max_taxes_to_disable: 1000
          update_item_modifier_lists_max_item_ids: 1000
          update_item_modifier_lists_max_modifier_lists_to_enable: 1000
          update_item_modifier_lists_max_modifier_lists_to_disable: 1000
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/Catalog/CatalogInfo/CatalogInfoResponse.python
        csharp: /sdk_samples/Catalog/CatalogInfo/CatalogInfoResponse.csharp
        java: /sdk_samples/Catalog/CatalogInfo/CatalogInfoResponse.java
        php: /sdk_samples/Catalog/CatalogInfo/CatalogInfoResponse.php
        javascript: /sdk_samples/Catalog/CatalogInfo/CatalogInfoResponse.javascript
        ruby: /sdk_samples/Catalog/CatalogInfo/CatalogInfoResponse.ruby
    CatalogInfoResponseLimits:
      type: object
      properties:
        batch_upsert_max_objects_per_batch:
          type: integer
          description: |-
            The maximum number of objects that may appear within a single batch in a
            `/v2/catalog/batch-upsert` request.
        batch_upsert_max_total_objects:
          type: integer
          description: |-
            The maximum number of objects that may appear across all batches in a
            `/v2/catalog/batch-upsert` request.
        batch_retrieve_max_object_ids:
          type: integer
          description: |-
            The maximum number of object IDs that may appear in a `/v2/catalog/batch-retrieve`
            request.
        search_max_page_limit:
          type: integer
          description: |-
            The maximum number of results that may be returned in a page of a
            `/v2/catalog/search` response.
        batch_delete_max_object_ids:
          type: integer
          description: |-
            The maximum number of object IDs that may be included in a single
            `/v2/catalog/batch-delete` request.
        update_item_taxes_max_item_ids:
          type: integer
          description: |-
            The maximum number of item IDs that may be included in a single
            `/v2/catalog/update-item-taxes` request.
        update_item_taxes_max_taxes_to_enable:
          type: integer
          description: |-
            The maximum number of tax IDs to be enabled that may be included in a single
            `/v2/catalog/update-item-taxes` request.
        update_item_taxes_max_taxes_to_disable:
          type: integer
          description: |-
            The maximum number of tax IDs to be disabled that may be included in a single
            `/v2/catalog/update-item-taxes` request.
        update_item_modifier_lists_max_item_ids:
          type: integer
          description: |-
            The maximum number of item IDs that may be included in a single
            `/v2/catalog/update-item-modifier-lists` request.
        update_item_modifier_lists_max_modifier_lists_to_enable:
          type: integer
          description: |-
            The maximum number of modifier list IDs to be enabled that may be included in
            a single `/v2/catalog/update-item-modifier-lists` request.
        update_item_modifier_lists_max_modifier_lists_to_disable:
          type: integer
          description: |-
            The maximum number of modifier list IDs to be disabled that may be included in
            a single `/v2/catalog/update-item-modifier-lists` request.
      x-release-status: PUBLIC
    CatalogItem:
      type: object
      properties:
        name:
          maxLength: 512
          type: string
          description: The item's name. This is a searchable attribute for use in
            applicable query filters, its value must not be empty, and the length
            is of Unicode code points.
        description:
          maxLength: 4096
          type: string
          description: The item's description. This is a searchable attribute for
            use in applicable query filters, and its value length is of Unicode code
            points.
        abbreviation:
          maxLength: 24
          type: string
          description: |-
            The text of the item's display label in the Square Point of Sale app. Only up to the first five characters of the string are used.
            This attribute is searchable, and its value length is of Unicode code points.
        label_color:
          type: string
          description: The color of the item's display label in the Square Point of
            Sale app. This must be a valid hex color code.
        available_online:
          type: boolean
          description: If `true`, the item can be added to shipping orders from the
            merchant's online store.
        available_for_pickup:
          type: boolean
          description: If `true`, the item can be added to pickup orders from the
            merchant's online store.
        available_electronically:
          type: boolean
          description: If `true`, the item can be added to electronically fulfilled
            orders from the merchant's online store.
        category_id:
          type: string
          description: The ID of the item's category, if any.
        tax_ids:
          type: array
          description: |-
            A set of IDs indicating the taxes enabled for
            this item. When updating an item, any taxes listed here will be added to the item.
            Taxes may also be added to or deleted from an item using `UpdateItemTaxes`.
          items:
            type: string
        modifier_list_info:
          type: array
          description: |-
            A set of `CatalogItemModifierListInfo` objects
            representing the modifier lists that apply to this item, along with the overrides and min
            and max limits that are specific to this item. Modifier lists
            may also be added to or deleted from an item using `UpdateItemModifierLists`.
          items:
            $ref: '#/components/schemas/CatalogItemModifierListInfo'
        variations:
          type: array
          description: A list of CatalogObjects containing the `CatalogItemVariation`s
            for this item.
          items:
            $ref: '#/components/schemas/CatalogObject'
        product_type:
          $ref: '#/components/schemas/CatalogItemProductType'
        skip_modifier_screen:
          type: boolean
          description: |-
            If `false`, the Square Point of Sale app will present the `CatalogItem`'s
            details screen immediately, allowing the merchant to choose `CatalogModifier`s
            before adding the item to the cart.  This is the default behavior.

            If `true`, the Square Point of Sale app will immediately add the item to the cart with the pre-selected
            modifiers, and merchants can edit modifiers by drilling down onto the item's details.

            Third-party clients are encouraged to implement similar behaviors.
        item_options:
          type: array
          description: |-
            List of item options IDs for this item. Used to manage and group item
            variations in a specified order.

            Maximum: 6 item options.
          items:
            $ref: '#/components/schemas/CatalogItemOptionForItem'
          x-release-status: BETA
      description: An [CatalogObject](#type-CatalogObject) instance of the `ITEM`
        type, also referred to as an item, in the catalog.
      example:
        object:
          type: ITEM
          id: '#Cocoa'
          present_at_all_locations: true
          item_data:
            name: Cocoa
            description: Hot chocolate
            abbreviation: Ch
            visibility: PRIVATE
      x-release-status: PUBLIC
    CatalogItemModifierListInfo:
      required:
      - modifier_list_id
      type: object
      properties:
        modifier_list_id:
          minLength: 1
          type: string
          description: The ID of the `CatalogModifierList` controlled by this `CatalogModifierListInfo`.
        modifier_overrides:
          type: array
          description: A set of `CatalogModifierOverride` objects that override whether
            a given `CatalogModifier` is enabled by default.
          items:
            $ref: '#/components/schemas/CatalogModifierOverride'
        min_selected_modifiers:
          type: integer
          description: If 0 or larger, the smallest number of `CatalogModifier`s that
            must be selected from this `CatalogModifierList`.
        max_selected_modifiers:
          type: integer
          description: If 0 or larger, the largest number of `CatalogModifier`s that
            can be selected from this `CatalogModifierList`.
        enabled:
          type: boolean
          description: If `true`, enable this `CatalogModifierList`. The default value
            is `true`.
      description: Options to control the properties of a `CatalogModifierList` applied
        to a `CatalogItem` instance.
      x-release-status: PUBLIC
    CatalogItemOption:
      type: object
      properties:
        name:
          type: string
          description: |-
            The item option's display name for the seller. Must be unique across
            all item options. This is a searchable attribute for use in applicable query filters.
        display_name:
          type: string
          description: The item option's display name for the customer. This is a
            searchable attribute for use in applicable query filters.
        description:
          type: string
          description: |-
            The item option's human-readable description. Displayed in the Square
            Point of Sale app for the seller and in the Online Store or on receipts for
            the buyer. This is a searchable attribute for use in applicable query filters.
        show_colors:
          type: boolean
          description: If true, display colors for entries in `values` when present.
        values:
          type: array
          description: |-
            A list of CatalogObjects containing the
            `CatalogItemOptionValue`s for this item.
          items:
            $ref: '#/components/schemas/CatalogObject'
        item_count:
          type: integer
          description: |-
            The number of `CatalogItem`s currently associated
            with this item option. Present only if the `include_counts` was specified
            in the request. Any count over 100 will be returned as `100`.
          format: int64
      description: A group of variations for a `CatalogItem`.
      x-release-status: BETA
    CatalogItemOptionForItem:
      type: object
      properties:
        item_option_id:
          type: string
          description: The unique id of the item option, used to form the dimensions
            of the item option matrix in a specified order.
      description: |2-
         An option that can be assigned to an item.
        For example, a t-shirt item may offer a color option or a size option.
      x-release-status: BETA
    CatalogItemOptionValue:
      type: object
      properties:
        item_option_id:
          type: string
          description: Unique ID of the associated item option.
        name:
          type: string
          description: Name of this item option value. This is a searchable attribute
            for use in applicable query filters.
        description:
          type: string
          description: A human-readable description for the option value. This is
            a searchable attribute for use in applicable query filters.
        color:
          type: string
          description: |-
            The HTML-supported hex color for the item option (e.g., "#ff8d4e85").
            Only displayed if `show_colors` is enabled on the parent `ItemOption`. When
            left unset, `color` defaults to white ("#ffffff") when `show_colors` is
            enabled on the parent `ItemOption`.
        ordinal:
          type: integer
          description: Determines where this option value appears in a list of option
            values.
        item_variation_count:
          maximum: 100
          type: integer
          description: |-
            The number of `CatalogItemVariation`s that
            currently use this item option value. Present only if `retrieve_counts`
            was specified on the request used to retrieve the parent item option of this
            value.
          format: int64
      description: |-
        An enumerated value that can link a
        `CatalogItemVariation` to an item option as one of
        its item option values.
      x-release-status: BETA
    CatalogItemOptionValueForItemVariation:
      type: object
      properties:
        item_option_id:
          type: string
          description: The unique id of an item option.
        item_option_value_id:
          type: string
          description: The unique id of the selected value for the item option.
      description: |-
        A `CatalogItemOptionValue` links an item variation to an item option as
        an item option value. For example, a t-shirt item may offer a color option and
        a size option. An item option value would represent each variation of t-shirt:
        For example, "Color:Red, Size:Small" or "Color:Blue, Size:Medium".
      x-release-status: BETA
    CatalogItemVariation:
      type: object
      properties:
        item_id:
          type: string
          description: The ID of the `CatalogItem` associated with this item variation.
        name:
          maxLength: 255
          type: string
          description: The item variation's name. This is a searchable attribute for
            use in applicable query filters, and its value length is of Unicode code
            points.
        sku:
          type: string
          description: The item variation's SKU, if any. This is a searchable attribute
            for use in applicable query filters.
        upc:
          type: string
          description: |-
            The item variation's UPC, if any. This is a searchable attribute for use in applicable query filters.
            It is only accessible through the Square API, and not exposed in the Square Seller Dashboard,
            Square Point of Sale or Retail Point of Sale apps.
        ordinal:
          type: integer
          description: |-
            The order in which this item variation should be displayed. This value is read-only. On writes, the ordinal
            for each item variation within a parent `CatalogItem` is set according to the item variations's
            position. On reads, the value is not guaranteed to be sequential or unique.
          readOnly: true
        pricing_type:
          $ref: '#/components/schemas/CatalogPricingType'
        price_money:
          $ref: '#/components/schemas/Money'
        location_overrides:
          type: array
          description: Per-location price and inventory overrides.
          items:
            $ref: '#/components/schemas/ItemVariationLocationOverrides'
        track_inventory:
          type: boolean
          description: If `true`, inventory tracking is active for the variation.
        inventory_alert_type:
          $ref: '#/components/schemas/InventoryAlertType'
        inventory_alert_threshold:
          type: integer
          description: |-
            If the inventory quantity for the variation is less than or equal to this value and `inventory_alert_type`
            is `LOW_QUANTITY`, the variation displays an alert in the merchant dashboard.

            This value is always an integer.
          format: int64
        user_data:
          maxLength: 255
          type: string
          description: Arbitrary user metadata to associate with the item variation.
            This attribute value length is of Unicode code points.
        service_duration:
          type: integer
          description: |-
            If the `CatalogItem` that owns this item variation is of type
            `APPOINTMENTS_SERVICE`, then this is the duration of the service in milliseconds. For
            example, a 30 minute appointment would have the value `1800000`, which is equal to
            30 (minutes) * 60 (seconds per minute) * 1000 (milliseconds per second).
          format: int64
        item_option_values:
          type: array
          description: |-
            List of item option values associated with this item variation. Listed
            in the same order as the item options of the parent item.
          items:
            $ref: '#/components/schemas/CatalogItemOptionValueForItemVariation'
          x-release-status: BETA
        measurement_unit_id:
          type: string
          description: |-
            ID of the ‘CatalogMeasurementUnit’ that is used to measure the quantity
            sold of this item variation. If left unset, the item will be sold in
            whole quantities.
          x-release-status: BETA
      description: |-
        An item variation (i.e., product) in the Catalog object model. Each item
        may have a maximum of 250 item variations.
      x-release-status: PUBLIC
    CatalogMeasurementUnit:
      type: object
      properties:
        measurement_unit:
          $ref: '#/components/schemas/MeasurementUnit'
        precision:
          type: integer
          description: |-
            An integer between 0 and 5 that represents the maximum number of
            positions allowed after the decimal in quantities measured with this unit.
            For example:

            - if the precision is 0, the quantity can be 1, 2, 3, etc.
            - if the precision is 1, the quantity can be 0.1, 0.2, etc.
            - if the precision is 2, the quantity can be 0.01, 0.12, etc.

            Default: 3
      description: |-
        Represents the unit used to measure a `CatalogItemVariation` and
        specifies the precision for decimal quantities.
      x-release-status: BETA
    CatalogModifier:
      type: object
      properties:
        name:
          maxLength: 255
          type: string
          description: The modifier name.  This is a searchable attribute for use
            in applicable query filters, and its value length is of Unicode code points.
        price_money:
          $ref: '#/components/schemas/Money'
        ordinal:
          type: integer
          description: Determines where this `CatalogModifier` appears in the `CatalogModifierList`.
        modifier_list_id:
          type: string
          description: The ID of the `CatalogModifierList` associated with this modifier.
      description: A modifier applicable to items at the time of sale.
      example:
        object:
          type: MODIFIER
          present_at_all_locations: true
          modifier_data:
            name: Almond Milk
            price_money:
              amount: 250
              currency: USD
      x-release-status: PUBLIC
    CatalogModifierList:
      type: object
      properties:
        name:
          maxLength: 255
          type: string
          description: The name for the `CatalogModifierList` instance. This is a
            searchable attribute for use in applicable query filters, and its value
            length is of Unicode code points.
        ordinal:
          type: integer
          description: Determines where this modifier list appears in a list of `CatalogModifierList`
            values.
        selection_type:
          $ref: '#/components/schemas/CatalogModifierListSelectionType'
        modifiers:
          type: array
          description: |-
            The options included in the `CatalogModifierList`.
            You must include at least one `CatalogModifier`.
            Each CatalogObject must have type `MODIFIER` and contain
            `CatalogModifier` data.
          items:
            $ref: '#/components/schemas/CatalogObject'
      description: |-
        A list of modifiers applicable to items at the time of sale.

        For example, a "Condiments" modifier list applicable to a "Hot Dog" item
        may contain "Ketchup", "Mustard", and "Relish" modifiers.
        Use the `selection_type` field to specify whether or not multiple selections from
        the modifier list are allowed.
      example:
        type: MODIFIER_LIST
        id: '#MilkType'
        present_at_all_locations: true
        modifier_list_data:
          name: Milk Type
          selection_type: SINGLE
          modifiers:
          - type: MODIFIER
            present_at_all_locations: true
            modifier_data:
              name: Whole Milk
              price_money:
                amount: 0
                currency: USD
          - type: MODIFIER
            present_at_all_locations: true
            modifier_data:
              name: Almond Milk
              price_money:
                amount: 250
                currency: USD
          - type: MODIFIER
            present_at_all_locations: true
            modifier_data:
              name: Soy Milk
              price_money:
                amount: 250
                currency: USD
      x-release-status: PUBLIC
    CatalogModifierOverride:
      required:
      - modifier_id
      type: object
      properties:
        modifier_id:
          minLength: 1
          type: string
          description: The ID of the `CatalogModifier` whose default behavior is being
            overridden.
        on_by_default:
          type: boolean
          description: If `true`, this `CatalogModifier` should be selected by default
            for this `CatalogItem`.
      description: Options to control how to override the default behavior of the
        specified modifier.
      x-release-status: PUBLIC
    CatalogObject:
      required:
      - id
      - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/CatalogObjectType'
        id:
          minLength: 1
          type: string
          description: |-
            An identifier to reference this object in the catalog. When a new `CatalogObject`
            is inserted, the client should set the id to a temporary identifier starting with
            a "`#`" character. Other objects being inserted or updated within the same request
            may use this identifier to refer to the new object.

            When the server receives the new object, it will supply a unique identifier that
            replaces the temporary identifier for all future references.
        updated_at:
          type: string
          description: |-
            Last modification [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates) in RFC 3339 format, e.g., `"2016-08-15T23:59:33.123Z"`
            would indicate the UTC time (denoted by `Z`) of August 15, 2016 at 23:59:33 and 123 milliseconds.
        version:
          type: integer
          description: |-
            The version of the object. When updating an object, the version supplied
            must match the version in the database, otherwise the write will be rejected as conflicting.
          format: int64
        is_deleted:
          type: boolean
          description: |-
            If `true`, the object has been deleted from the database. Must be `false` for new objects
            being inserted. When deleted, the `updated_at` field will equal the deletion time.
        custom_attribute_values:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CatalogCustomAttributeValue'
          description: "A map (key-value pairs) of application-defined custom attribute\
            \ values. The value of a key-value pair \nis a [CatalogCustomAttributeValue](#type-CatalogCustomAttributeValue)\
            \ object. The key is the `key` attribute \nvalue defined in the associated\
            \ [CatalogCustomAttributeDefinition](#type-CatalogCustomAttributeDefinition)\
            \ \nobject defined by the application making the request. \n\nIf the `CatalogCustomAttributeDefinition`\
            \ object is \ndefined by another application, the `CatalogCustomAttributeDefinition`'s\
            \ key attribute value is prefixed by \nthe defining application ID. For\
            \ example, if the `CatalogCustomAttributeDefinition` has a `key` attribute\
            \ of \n\"cocoa_brand\" and the defining application ID is \"abcd1234\"\
            , the key in the map is \"abcd1234:cocoa_brand\" if the\napplication making\
            \ the request is different from the application defining the custom attribute\
            \ definition. \nOtherwise, the key used in the map is simply \"cocoa-brand\"\
            .\n\nApplication-defined custom attributes that are set at a global (location-independent)\
            \ level.\nCustom attribute values are intended to store additional information\
            \ about a catalog object\nor associations with an entity in another system.\
            \ Do not use custom attributes\nto store any sensitive information (personally\
            \ identifiable information, card details, etc.)."
          x-release-status: BETA
        catalog_v1_ids:
          type: array
          description: |-
            The Connect v1 IDs for this object at each location where it is present, where they
            differ from the object's Connect V2 ID. The field will only be present for objects that
            have been created or modified by legacy APIs.
          items:
            $ref: '#/components/schemas/CatalogV1Id'
        present_at_all_locations:
          type: boolean
          description: |-
            If `true`, this object is present at all locations (including future locations), except where specified in
            the `absent_at_location_ids` field. If `false`, this object is not present at any locations (including future locations),
            except where specified in the `present_at_location_ids` field. If not specified, defaults to `true`.
        present_at_location_ids:
          type: array
          description: A list of locations where the object is present, even if `present_at_all_locations`
            is `false`.
          items:
            type: string
        absent_at_location_ids:
          type: array
          description: A list of locations where the object is not present, even if
            `present_at_all_locations` is `true`.
          items:
            type: string
        image_id:
          type: string
          description: Identifies the `CatalogImage` attached to this `CatalogObject`.
        item_data:
          $ref: '#/components/schemas/CatalogItem'
        category_data:
          $ref: '#/components/schemas/CatalogCategory'
        item_variation_data:
          $ref: '#/components/schemas/CatalogItemVariation'
        tax_data:
          $ref: '#/components/schemas/CatalogTax'
        discount_data:
          $ref: '#/components/schemas/CatalogDiscount'
        modifier_list_data:
          $ref: '#/components/schemas/CatalogModifierList'
        modifier_data:
          $ref: '#/components/schemas/CatalogModifier'
        time_period_data:
          $ref: '#/components/schemas/CatalogTimePeriod'
        product_set_data:
          $ref: '#/components/schemas/CatalogProductSet'
        pricing_rule_data:
          $ref: '#/components/schemas/CatalogPricingRule'
        image_data:
          $ref: '#/components/schemas/CatalogImage'
        measurement_unit_data:
          $ref: '#/components/schemas/CatalogMeasurementUnit'
        subscription_plan_data:
          $ref: '#/components/schemas/CatalogSubscriptionPlan'
        item_option_data:
          $ref: '#/components/schemas/CatalogItemOption'
        item_option_value_data:
          $ref: '#/components/schemas/CatalogItemOptionValue'
        custom_attribute_definition_data:
          $ref: '#/components/schemas/CatalogCustomAttributeDefinition'
        quick_amounts_settings_data:
          $ref: '#/components/schemas/CatalogQuickAmountsSettings'
      description: "The wrapper object for the Catalog entries of a given object type.\
        \ \n\nThe type of a particular `CatalogObject` is determined by the value\
        \ of the\n`type` attribute and only the corresponding data attribute can be\
        \ set on the `CatalogObject` instance.\nFor example, the following list shows\
        \ some instances of `CatalogObject` of a given `type` and\ntheir corresponding\
        \ data atrribute that can be set:\n- For a `CatalogObject` of the `ITEM` type,\
        \ set the `item_data` attribute to yield the `CatalogItem` object. \n- For\
        \ a `CatalogObject` of the `ITEM_VARIATION` type, set the `item_variation_data`\
        \ attribute to yield the `CatalogItemVariation` object.\n- For a `CatalogObject`\
        \ of the `MODIFIER` type, set the `modifier_data` attribute to yield the `CatalogModifier`\
        \ object.\n- For a `CatalogObject` of the `MODIFIER_LIST` type, set the `modifier_list_data`\
        \ attribute to yield the `CatalogModifierList` object.\n- For a `CatalogObject`\
        \ of the `CATEGORY` type, set the `category_data` attribute to yield the `CatalogCategory`\
        \ object.\n- For a `CatalogObject` of the `DISCOUNT` type, set the `discount_data`\
        \ attribute to yield the `CatalogDiscount` object.\n- For a `CatalogObject`\
        \ of the `TAX` type, set the `tax_data` attribute to yield the `CatalogTax`\
        \ object.\n- For a `CatalogObject` of the `IMAGE` type, set the `image_data`\
        \ attribute to yield the `CatalogImageData`  object.\n- For a `CatalogObject`\
        \ of the `QUICK_AMOUNTS_SETTINGS` type, set the `quick_amounts_settings_data`\
        \ attribute to yield the `CatalogQuickAmountsSettings` object.\n- For a `CatalogObject`\
        \ of the `PRICING_RULE` type, set the `pricing_rule_data` attribute to yield\
        \ the `CatalogPricingRule` object.\n- For a `CatalogObject` of the `TIME_PERIOD`\
        \ type, set the `time_period_data` attribute to yield the `CatalogTimePeriod`\
        \ object.\n- For a `CatalogObject` of the `PRODUCT_SET` type, set the `product_set_data`\
        \ attribute to yield the `CatalogProductSet`  object.\n- For a `CatalogObject`\
        \ of the `SUBSCRIPTION_PLAN` type, set the `subscription_plan_data` attribute\
        \ to yield the `CatalogSubscriptionPlan` object.\n\n\nFor a more detailed\
        \ discussion of the Catalog data model, please see the\n[Design a Catalog](https://developer.squareup.com/docs/catalog-api/design-a-catalog)\
        \ guide."
      example:
        catalog_object:
          type: '{{ [ITEM | ITEM_VARIATION | MODIFIER | MODIFIER_LIST | CATEGORY |
            DISCOUNT | TAX] }}'
          id: '{{ set by Catalog during object creation }}'
          updated_at: '{{ date & time of most recent update }}'
          version: '{{ version of the CatalogObject }}'
          is_deleted: '{{ [true | false] }}'
          connect_v1_ids:
            catalog_v1_id: '{{ itemID from Catalog v1 }}'
            location_id: '{{ location where v1 ID is used }}'
          present_at_all_locations: '{{ [true | false] }}'
          present_at_location_ids:
          - '{{ LOCATIONID-1 }}'
          - '{{ LOCATIONID-N }}'
          absent_at_location_ids:
          - '{{ LOCATIONID-1 }}'
          - '{{ LOCATIONID-N }}'
          item_data: '{{ CatalogItem object only if type=ITEM }}'
          item_variation_data: '{{ CatalogItemVariation object only if type=ITEM_VARIATION
            }}'
          modifier_data: '{{ CatalogModifier object only if type=MODIFIER }}'
          modifier_list_data: '{{ CatalogModifierList object only if type=MODIFIER_LIST
            }}'
          category_data: '{{ CatalogCategory object only if type=CATEGORY }}'
          discount_data: '{{ CatalogDiscount object only if type=DISCOUNT }}'
          tax_data: '{{ CatalogTax object only if type=TAX }}'
      x-release-status: PUBLIC
    CatalogObjectBatch:
      required:
      - objects
      type: object
      properties:
        objects:
          type: array
          description: A list of CatalogObjects belonging to this batch.
          items:
            $ref: '#/components/schemas/CatalogObject'
      description: A batch of catalog objects.
      x-release-status: PUBLIC
    CatalogPricingRule:
      type: object
      properties:
        name:
          type: string
          description: |-
            User-defined name for the pricing rule. For example, "Buy one get one
            free" or "10% off".
        time_period_ids:
          type: array
          description: |-
            A list of unique IDs for the catalog time periods when
            this pricing rule is in effect. If left unset, the pricing rule is always
            in effect.
          items:
            type: string
        discount_id:
          type: string
          description: |-
            Unique ID for the `CatalogDiscount` to take off
            the price of all matched items.
        match_products_id:
          type: string
          description: |-
            Unique ID for the `CatalogProductSet` that will be matched by this rule.
            A match rule matches within the entire cart.
            A match rule can match multiple times in the cart.
            If no `ProductSet` is present, the rule will match all products.
        apply_products_id:
          type: string
          description: |-
            __Deprecated__: Please use the `exclude_products_id` field to apply
            an exclude set instead. Exclude sets allow better control over quantity
            ranges and offer more flexibility for which matched items receive a discount.

            `CatalogProductSet` to apply the pricing to.
            An apply rule matches within the subset of the cart that fits the match rules (the match set).
            An apply rule can only match once in the match set.
            If not supplied, the pricing will be applied to all products in the match set.
            Other products retain their base price, or a price generated by other rules.
          x-release-status: DEPRECATED
        exclude_products_id:
          type: string
          description: |-
            `CatalogProductSet` to exclude from the pricing rule.
            An exclude rule matches within the subset of the cart that fits the match rules (the match set).
            An exclude rule can only match once in the match set.
            If not supplied, the pricing will be applied to all products in the match set.
            Other products retain their base price, or a price generated by other rules.
        valid_from_date:
          type: string
          description: Represents the date the Pricing Rule is valid from. Represented
            in RFC3339 full-date format (YYYY-MM-DD).
        valid_from_local_time:
          type: string
          description: |-
            Represents the local time the pricing rule should be valid from. Represented in RFC3339 partial-time format
            (HH:MM:SS). Partial seconds will be truncated.
        valid_until_date:
          type: string
          description: Represents the date the Pricing Rule is valid until. Represented
            in RFC3339 full-date format (YYYY-MM-DD).
        valid_until_local_time:
          type: string
          description: |-
            Represents the local time the pricing rule should be valid until. Represented in RFC3339 partial-time format
            (HH:MM:SS). Partial seconds will be truncated.
        exclude_strategy:
          $ref: '#/components/schemas/ExcludeStrategy'
      description: "Defines how discounts are automatically applied to a set of items\
        \ that match the pricing rule \nduring the active time period."
      x-release-status: PUBLIC
    CatalogProductSet:
      type: object
      properties:
        name:
          type: string
          description: |-
            User-defined name for the product set. For example, "Clearance Items"
            or "Winter Sale Items".
        product_ids_any:
          type: array
          description: |2-
             Unique IDs for any `CatalogObject` included in this product set. Any
            number of these catalog objects can be in an order for a pricing rule to apply.

            This can be used with `product_ids_all` in a parent `CatalogProductSet` to
            match groups of products for a bulk discount, such as a discount for an
            entree and side combo.

            Only one of `product_ids_all`, `product_ids_any`, or `all_products` can be set.

            Max: 500 catalog object IDs.
          items:
            type: string
        product_ids_all:
          type: array
          description: |-
            Unique IDs for any `CatalogObject` included in this product set.
            All objects in this set must be included in an order for a pricing rule to apply.

            Only one of `product_ids_all`, `product_ids_any`, or `all_products` can be set.

            Max: 500 catalog object IDs.
          items:
            type: string
        quantity_exact:
          type: integer
          description: |-
            If set, there must be exactly this many items from `products_any` or `products_all`
            in the cart for the discount to apply.

            Cannot be combined with either `quantity_min` or `quantity_max`.
          format: int64
        quantity_min:
          type: integer
          description: |-
            If set, there must be at least this many items from `products_any` or `products_all`
            in a cart for the discount to apply. See `quantity_exact`. Defaults to 0 if
            `quantity_exact`, `quantity_min` and `quantity_max` are all unspecified.
          format: int64
        quantity_max:
          type: integer
          description: |-
            If set, the pricing rule will apply to a maximum of this many items from
            `products_any` or `products_all`.
          format: int64
        all_products:
          type: boolean
          description: |-
            If set to `true`, the product set will include every item in the catalog.

            Only one of `product_ids_all`, `product_ids_any`, or `all_products` can be set.
      description: |-
        Represents a collection of catalog objects for the purpose of applying a
        `PricingRule`. Including a catalog object will include all of its subtypes.
        For example, including a category in a product set will include all of its
        items and associated item variations in the product set. Including an item in
        a product set will also include its item variations.
      x-release-status: PUBLIC
    CatalogQuery:
      type: object
      properties:
        sorted_attribute_query:
          $ref: '#/components/schemas/CatalogQuerySortedAttribute'
        exact_query:
          $ref: '#/components/schemas/CatalogQueryExact'
        prefix_query:
          $ref: '#/components/schemas/CatalogQueryPrefix'
        range_query:
          $ref: '#/components/schemas/CatalogQueryRange'
        text_query:
          $ref: '#/components/schemas/CatalogQueryText'
        items_for_tax_query:
          $ref: '#/components/schemas/CatalogQueryItemsForTax'
        items_for_modifier_list_query:
          $ref: '#/components/schemas/CatalogQueryItemsForModifierList'
        items_for_item_options_query:
          $ref: '#/components/schemas/CatalogQueryItemsForItemOptions'
        item_variations_for_item_option_values_query:
          $ref: '#/components/schemas/CatalogQueryItemVariationsForItemOptionValues'
      description: "A query composed of one or more different types of filters to\
        \ narrow the scope of targeted objects when calling the `SearchCatalogObjects`\
        \ endpoint.\n\nAlthough a query can have multiple filters, only one query\
        \ is allowed per call to [SearchCatalogObjects](#endpoint-Catalog-SearchCatalogObjects).\n\
        \nWhen a query filter is based on an attribute, the attribute must be searchable.\
        \ \nSearchable attributes are listed as follows, along their parent types\
        \ that can be searched for with applicable query filters. \n\nSearchable attribute\
        \ and objects queryable by searchable attributes ** \n- `name`:  `CatalogItem`,\
        \ `CatalogItemVariation`, `CatelogCatogry`, `CatalogTax`, `CatalogDiscount`,\
        \ `CatalogModifier`, 'CatalogModifierList`, `CatalogItemOption`, `CatalogItemOptionValue`\
        \ \n- `description`: `CatalogItem`, `CatalogItemOptionValue` \n- `abbreviation`:\
        \ `CatalogItem` \n- `upc`: `CatalogItemVariation` \n- `sku`: `CatalogItemVariation`\
        \ \n- `caption`: `CatalogImage` \n- `display_name`: `CatalogItemOption` \n\
        \nFor example, to search for [CatalogItem](#type-CatalogItem) objects by searchable\
        \ attributes, you can use \nthe `\"name\"`, `\"description\"`, or `\"abbreviation\"\
        ` attribute in an applicable query filter."
      x-release-status: PUBLIC
    CatalogQueryExact:
      required:
      - attribute_name
      - attribute_value
      type: object
      properties:
        attribute_name:
          minLength: 1
          type: string
          description: The name of the attribute to be searched. Matching of the attribute
            name is exact.
        attribute_value:
          type: string
          description: "The desired value of the search attribute. Matching of the\
            \ attribute value is case insensitive and can be partial. \nFor example,\
            \ if a specified value of \"sma\", objects with the named attribute value\
            \ of \"Small\", \"small\" are both matched."
      description: The query filter to return the serch result by exact match of the
        specified attribute name and value.
      x-release-status: PUBLIC
    CatalogQueryItemVariationsForItemOptionValues:
      type: object
      properties:
        item_option_value_ids:
          type: array
          description: |-
            A set of `CatalogItemOptionValue` IDs to be used to find associated
            `CatalogItemVariation`s. All ItemVariations that contain all of the given
            Item Option Values (in any order) will be returned.
          items:
            type: string
      description: The query filter to return the item variations containing the specified
        item option value IDs.
      x-release-status: BETA
    CatalogQueryItemsForItemOptions:
      type: object
      properties:
        item_option_ids:
          type: array
          description: |-
            A set of `CatalogItemOption` IDs to be used to find associated
            `CatalogItem`s. All Items that contain all of the given Item Options (in any order)
            will be returned.
          items:
            type: string
      description: The query filter to return the items containing the specified item
        option IDs.
      x-release-status: BETA
    CatalogQueryItemsForModifierList:
      required:
      - modifier_list_ids
      type: object
      properties:
        modifier_list_ids:
          type: array
          description: A set of `CatalogModifierList` IDs to be used to find associated
            `CatalogItem`s.
          items:
            type: string
      description: The query filter to return the items containing the specified modifier
        list IDs.
      x-release-status: PUBLIC
    CatalogQueryItemsForTax:
      required:
      - tax_ids
      type: object
      properties:
        tax_ids:
          type: array
          description: A set of `CatalogTax` IDs to be used to find associated `CatalogItem`s.
          items:
            type: string
      description: The query filter to return the items containing the specified tax
        IDs.
      x-release-status: PUBLIC
    CatalogQueryPrefix:
      required:
      - attribute_name
      - attribute_prefix
      type: object
      properties:
        attribute_name:
          minLength: 1
          type: string
          description: The name of the attribute to be searched.
        attribute_prefix:
          minLength: 1
          type: string
          description: The desired prefix of the search attribute value.
      description: The query filter to return the search result whose named attribute
        values are prefixed by the specified attribute value.
      x-release-status: PUBLIC
    CatalogQueryRange:
      required:
      - attribute_name
      type: object
      properties:
        attribute_name:
          minLength: 1
          type: string
          description: The name of the attribute to be searched.
        attribute_min_value:
          type: integer
          description: The desired minimum value for the search attribute (inclusive).
          format: int64
        attribute_max_value:
          type: integer
          description: The desired maximum value for the search attribute (inclusive).
          format: int64
      description: The query filter to return the search result whose named attribute
        values fall between the specified range.
      x-release-status: PUBLIC
    CatalogQuerySortedAttribute:
      required:
      - attribute_name
      type: object
      properties:
        attribute_name:
          minLength: 1
          type: string
          description: The attribute whose value is used as the sort key.
        initial_attribute_value:
          type: string
          description: |-
            The first attribute value to be returned by the query. Ascending sorts will return only
            objects with this value or greater, while descending sorts will return only objects with this value
            or less. If unset, start at the beginning (for ascending sorts) or end (for descending sorts).
        sort_order:
          $ref: '#/components/schemas/SortOrder'
      description: The query expression to specify the key to sort search results.
      x-release-status: PUBLIC
    CatalogQueryText:
      required:
      - keywords
      type: object
      properties:
        keywords:
          type: array
          description: A list of 1, 2, or 3 search keywords. Keywords with fewer than
            3 characters are ignored.
          items:
            type: string
      description: The query filter to return the search result whose searchable attribute
        values contain all of the specified keywords or tokens, independent of the
        token order or case.
      x-release-status: PUBLIC
    CatalogQuickAmount:
      required:
      - amount
      - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/CatalogQuickAmountType'
        amount:
          $ref: '#/components/schemas/Money'
        score:
          type: integer
          description: |-
            Describes the ranking of the Quick Amount provided by machine learning model, in the range [0, 100].
            MANUAL type amount will always have score = 100.
          format: int64
        ordinal:
          type: integer
          description: The order in which this Quick Amount should be displayed.
          format: int64
      description: Represents a Quick Amount in the Catalog.
      x-release-status: BETA
    CatalogQuickAmountsSettings:
      required:
      - option
      type: object
      properties:
        option:
          $ref: '#/components/schemas/CatalogQuickAmountsSettingsOption'
        eligible_for_auto_amounts:
          type: boolean
          description: |-
            Represents location's eligibility for auto amounts
            The boolean should be consistent with whether there are AUTO amounts in the `amounts`.
        amounts:
          type: array
          description: Represents a set of Quick Amounts at this location.
          items:
            $ref: '#/components/schemas/CatalogQuickAmount'
      description: A parent Catalog Object model represents a set of Quick Amounts
        and the settings control the amounts.
      x-release-status: BETA
    CatalogSubscriptionPlan:
      type: object
      properties:
        name:
          type: string
          description: The name of the plan.
        phases:
          type: array
          description: A list of SubscriptionPhase containing the [SubscriptionPhase](#type-SubscriptionPhase)
            for this plan.
          items:
            $ref: '#/components/schemas/SubscriptionPhase'
      description: |-
        Describes a subscription plan. For more information, see
        [Set Up and Manage a Subscription Plan](https://developer.squareup.com/docs/docs/subscriptions-api/setup-plan).
      x-release-status: BETA
    CatalogTax:
      type: object
      properties:
        name:
          maxLength: 255
          type: string
          description: The tax's name. This is a searchable attribute for use in applicable
            query filters, and its value length is of Unicode code points.
        calculation_phase:
          $ref: '#/components/schemas/TaxCalculationPhase'
        inclusion_type:
          $ref: '#/components/schemas/TaxInclusionType'
        percentage:
          type: string
          description: |-
            The percentage of the tax in decimal form, using a `'.'` as the decimal separator and without a `'%'` sign.
            A value of `7.5` corresponds to 7.5%.
        applies_to_custom_amounts:
          type: boolean
          description: |-
            If `true`, the fee applies to custom amounts entered into the Square Point of Sale
            app that are not associated with a particular `CatalogItem`.
        enabled:
          type: boolean
          description: If `true`, the tax will be shown as enabled in the Square Point
            of Sale app.
      description: A tax applicable to an item.
      example:
        object:
          type: TAX
          id: '#SalesTax'
          present_at_all_locations: true
          tax_data:
            name: Sales Tax
            calculation_phase: TAX_SUBTOTAL_PHASE
            inclusion_type: ADDITIVE
            percentage: "5.0"
            fee_applies_to_custom_amounts: true
            enabled: true
      x-release-status: PUBLIC
    CatalogTimePeriod:
      type: object
      properties:
        event:
          type: string
          description: |-
            An iCalendar (RFC5545) [event](https://tools.ietf.org/html/rfc5545#section-3.6.1), which
            specifies the name, timing, duration and recurrence of this time period.

            Example:

            ```
            DTSTART:20190707T180000
            DURATION:P2H
            RRULE:FREQ=WEEKLY;BYDAY=MO,WE,FR
            ```

            Only `SUMMARY`, `DTSTART`, `DURATION` and `RRULE` fields are supported.
            `DTSTART` must be in local (unzoned) time format. Note that while `BEGIN:VEVENT`
            and `END:VEVENT` is not required in the request. The response will always
            include them.
      description: Represents a time period - either a single period or a repeating
        period.
      x-release-status: PUBLIC
    CatalogV1Id:
      type: object
      properties:
        catalog_v1_id:
          type: string
          description: The ID for an object used in the Square API V1, if the object
            ID differs from the Square API V2 object ID.
        location_id:
          type: string
          description: The ID of the `Location` this Connect V1 ID is associated with.
      description: A Square API V1 identifier of an item, including the object ID
        and its associated location ID.
      x-release-status: PUBLIC
    CatalogVersionUpdatedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        type:
          type: string
          description: The type of event this represents.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/CatalogVersionUpdatedWebhookData'
      description: Published when the catalog is updated.
      example:
        merchant_id: 6SSW7HV8K2ST5
        type: catalog.version.updated
        event_id: aeaaa5f6-c4fd-4e93-b688-71b50706266f
        created_at: 2019-10-29T17:26:16.808603647Z
        data:
          type: catalog
          id: 732b6677-1acb-4d81-b09c-5a3a49399d8f
          object:
            catalog_version:
              updated_at: 2019-10-29T17:26:16.53Z
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
      x-webhook:
        event: catalog.version.updated
        scopes:
        - ITEMS_READ
      x-api: '#/components/x-apis/Catalog'
      x-since: 2019-09-25
    CatalogVersionUpdatedWebhookCatalogVersion:
      type: object
      properties:
        updated_at:
          type: string
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    CatalogVersionUpdatedWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the affected object’s type.
        id:
          type: string
          description: ID of the affected object.
        object:
          $ref: '#/components/schemas/CatalogVersionUpdatedWebhookObject'
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    CatalogVersionUpdatedWebhookObject:
      type: object
      properties:
        catalog_version:
          $ref: '#/components/schemas/CatalogVersionUpdatedWebhookCatalogVersion'
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    ChargeRequest:
      required:
      - amount_money
      - idempotency_key
      type: object
      properties:
        idempotency_key:
          maxLength: 192
          minLength: 1
          type: string
          description: |-
            A value you specify that uniquely identifies this
            transaction among transactions you've created.

            If you're unsure whether a particular transaction succeeded,
            you can reattempt it with the same idempotency key without
            worrying about double-charging the buyer.

            See [Idempotency keys](#idempotencykeys) for more information.
        amount_money:
          $ref: '#/components/schemas/Money'
        card_nonce:
          maxLength: 192
          type: string
          description: |-
            A nonce generated from the `SqPaymentForm` that represents the card
            to charge.

            The application that provides a nonce to this endpoint must be the
            _same application_ that generated the nonce with the `SqPaymentForm`.
            Otherwise, the nonce is invalid.

            Do not provide a value for this field if you provide a value for
            `customer_card_id`.
        customer_card_id:
          maxLength: 192
          type: string
          description: |-
            The ID of the customer card on file to charge. Do
            not provide a value for this field if you provide a value for `card_nonce`.

            If you provide this value, you _must_ also provide a value for
            `customer_id`.
        delay_capture:
          type: boolean
          description: |-
            If `true`, the request will only perform an Auth on the provided
            card. You can then later perform either a Capture (with the
            [CaptureTransaction](#endpoint-capturetransaction) endpoint) or a Void
            (with the [VoidTransaction](#endpoint-voidtransaction) endpoint).

            Default value: `false`
        reference_id:
          maxLength: 40
          type: string
          description: |-
            An optional ID you can associate with the transaction for your own
            purposes (such as to associate the transaction with an entity ID in your
            own database).

            This value cannot exceed 40 characters.
        note:
          maxLength: 60
          type: string
          description: |-
            An optional note to associate with the transaction.

            This value cannot exceed 60 characters.
        customer_id:
          maxLength: 50
          type: string
          description: |-
            The ID of the customer to associate this transaction with. This field
            is required if you provide a value for `customer_card_id`, and optional
            otherwise.
        billing_address:
          $ref: '#/components/schemas/Address'
        shipping_address:
          $ref: '#/components/schemas/Address'
        buyer_email_address:
          type: string
          description: |-
            The buyer's email address, if available. This value is optional,
            but this transaction is ineligible for chargeback protection if it is not
            provided.
        order_id:
          maxLength: 192
          type: string
          description: |-
            The ID of the order to associate with this transaction.

            If you provide this value, the `amount_money` value of your request must
            __exactly match__ the value of the order's `total_money` field.
        additional_recipients:
          type: array
          description: |-
            The basic primitive of multi-party transaction. The value is optional.
            The transaction facilitated by you can be split from here.

            If you provide this value, the `amount_money` value in your additional_recipients
            must not be more than 90% of the `amount_money` value in the charge request.
            The `location_id` must be the valid location of the app owner merchant.

            This field requires the `PAYMENTS_WRITE_ADDITIONAL_RECIPIENTS` OAuth permission.

            This field is currently not supported in sandbox.
          items:
            $ref: '#/components/schemas/AdditionalRecipient'
        verification_token:
          type: string
          description: |-
            A token generated by SqPaymentForm's verifyBuyer() that represents
            customer's device info and 3ds challenge result.
      description: |-
        Defines the parameters that can be included in the body of
        a request to the [Charge](#endpoint-charge) endpoint.

        Deprecated - recommend using [CreatePayment](#endpoint-payments-createpayment)
      example:
        idempotency_key: 74ae1696-b1e3-4328-af6d-f1e04d947a13
        shipping_address:
          address_line_1: 123 Main St
          locality: San Francisco
          administrative_district_level_1: CA
          postal_code: "94114"
          country: US
        billing_address:
          address_line_1: 500 Electric Ave
          address_line_2: Suite 600
          administrative_district_level_1: NY
          locality: New York
          postal_code: "10003"
          country: US
        amount_money:
          amount: 200
          currency: USD
        additional_recipients:
        - location_id: 057P5VYJ4A5X1
          description: Application fees
          amount_money:
            amount: 20
            currency: USD
        card_nonce: card_nonce_from_square_123
        reference_id: some optional reference id
        note: some optional note
        delay_capture: false
      x-release-status: DEPRECATED
      x-sq-sdk-sample-code:
        python: /sdk_samples/Charge/ChargeRequest.python
        csharp: /sdk_samples/Charge/ChargeRequest.csharp
        java: /sdk_samples/Charge/ChargeRequest.java
        php: /sdk_samples/Charge/ChargeRequest.php
        javascript: /sdk_samples/Charge/ChargeRequest.javascript
        ruby: /sdk_samples/Charge/ChargeRequest.ruby
    ChargeRequestAdditionalRecipient:
      required:
      - amount_money
      - description
      - location_id
      type: object
      properties:
        location_id:
          maxLength: 50
          minLength: 1
          type: string
          description: The location ID for a recipient (other than the merchant) receiving
            a portion of the tender.
        description:
          maxLength: 100
          minLength: 1
          type: string
          description: The description of the additional recipient.
        amount_money:
          $ref: '#/components/schemas/Money'
      description: |-
        Represents an additional recipient (other than the merchant) entitled to a portion of the tender.
        Support is currently limited to USD, CAD and GBP currencies
      x-release-status: DEPRECATED
    ChargeResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        transaction:
          $ref: '#/components/schemas/Transaction'
      description: |-
        Defines the fields that are included in the response body of
        a request to the [Charge](#endpoint-charge) endpoint.

        One of `errors` or `transaction` is present in a given response (never both).
      example:
        transaction:
          id: KnL67ZIwXCPtzOrqj0HrkxMF
          location_id: 18YC4JDH91E1H
          created_at: 2016-03-10T22:57:56Z
          tenders:
          - id: MtZRYYdDrYNQbOvV7nbuBvMF
            location_id: 18YC4JDH91E1H
            transaction_id: KnL67ZIwXCPtzOrqj0HrkxMF
            created_at: 2016-03-10T22:57:56Z
            note: some optional note
            amount_money:
              amount: 200
              currency: USD
            additional_recipients:
            - location_id: 057P5VYJ4A5X1
              description: Application fees
              amount_money:
                amount: 20
                currency: USD
              receivable_id: ISu5xwxJ5v0CMJTQq7RvqyMF
            type: CARD
            card_details:
              status: CAPTURED
              card:
                card_brand: VISA
                last_4: "1111"
              entry_method: KEYED
          reference_id: some optional reference id
          product: EXTERNAL_API
      x-release-status: DEPRECATED
      x-sq-sdk-sample-code:
        python: /sdk_samples/Charge/ChargeResponse.python
        csharp: /sdk_samples/Charge/ChargeResponse.csharp
        java: /sdk_samples/Charge/ChargeResponse.java
        php: /sdk_samples/Charge/ChargeResponse.php
        javascript: /sdk_samples/Charge/ChargeResponse.javascript
        ruby: /sdk_samples/Charge/ChargeResponse.ruby
    Checkout:
      type: object
      properties:
        id:
          type: string
          description: ID generated by Square Checkout when a new checkout is requested.
        checkout_page_url:
          type: string
          description: |-
            The URL that the buyer's browser should be redirected to after the
            checkout is completed.
        ask_for_shipping_address:
          type: boolean
          description: |-
            If `true`, Square Checkout will collect shipping information on your
            behalf and store that information with the transaction information in your
            Square Dashboard.

            Default: `false`.
        merchant_support_email:
          type: string
          description: |-
            The email address to display on the Square Checkout confirmation page
            and confirmation email that the buyer can use to contact the merchant.

            If this value is not set, the confirmation page and email will display the
            primary email address associated with the merchant's Square account.

            Default: none; only exists if explicitly set.
        pre_populate_buyer_email:
          type: string
          description: |-
            If provided, the buyer's email is pre-populated on the checkout page
            as an editable text field.

            Default: none; only exists if explicitly set.
        pre_populate_shipping_address:
          $ref: '#/components/schemas/Address'
        redirect_url:
          type: string
          description: |-
            The URL to redirect to after checkout is completed with `checkoutId`,
            Square's `orderId`, `transactionId`, and `referenceId` appended as URL
            parameters. For example, if the provided redirect_url is
            `http://www.example.com/order-complete`, a successful transaction redirects
            the customer to:

            `http://www.example.com/order-complete?checkoutId=xxxxxx&orderId=xxxxxx&referenceId=xxxxxx&transactionId=xxxxxx`

            If you do not provide a redirect URL, Square Checkout will display an order
            confirmation page on your behalf; however Square strongly recommends that
            you provide a redirect URL so you can verify the transaction results and
            finalize the order through your existing/normal confirmation workflow.
        order:
          $ref: '#/components/schemas/Order'
        created_at:
          type: string
          description: The time when the checkout was created, in RFC 3339 format.
        additional_recipients:
          type: array
          description: |-
            Additional recipients (other than the merchant) receiving a portion of this checkout.
            For example, fees assessed on the purchase by a third party integration.
          items:
            $ref: '#/components/schemas/AdditionalRecipient'
      description: |-
        Square Checkout lets merchants accept online payments for supported
        payment types using a checkout workflow hosted on squareup.com.
      x-release-status: PUBLIC
    CompletePaymentRequest:
      type: object
      properties: {}
      description: |-
        Completes (captures) a payment.

        By default, payments are set to autocomplete immediately after they are created.
        To complete payments manually, set `autocomplete` to false.
      example: {}
      x-release-status: PUBLIC
    CompletePaymentResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on errors encountered during the request
          items:
            $ref: '#/components/schemas/Error'
        payment:
          $ref: '#/components/schemas/Payment'
      description: Return value from a [CompletePayment](#endpoint-payments-completepayment)
        call.
      example:
        payment:
          id: GQTFp1ZlXdpoW4o6eGiZhbjosiDFf
          created_at: 2019-07-10T13:39:55.317Z
          updated_at: 2019-07-10T13:40:05.982Z
          amount_money:
            amount: 200
            currency: USD
          app_fee_money:
            amount: 10
            currency: USD
          total_money:
            amount: 200
            currency: USD
          status: COMPLETED
          source_type: CARD
          card_details:
            status: CAPTURED
            card:
              card_brand: VISA
              last_4: "2796"
              exp_month: 7
              exp_year: 2026
              fingerprint: sq-1-TpmjbNBMFdibiIjpQI5LiRgNUBC7u1689i0TgHjnlyHEWYB7tnn-K4QbW4ttvtaqXw
              card_type: DEBIT
              prepaid_type: PREPAID
              bin: "411111"
            entry_method: ON_FILE
            cvv_status: CVV_ACCEPTED
            avs_status: AVS_ACCEPTED
            auth_result_code: MhIjEN
            statement_description: SQ *MY MERCHANT
          location_id: XTI0H92143A39
          order_id: m2Hr8Hk8A3CTyQQ1k4ynExg92tO3
          reference_id: "123456"
          note: Brief description
          customer_id: RDX9Z4XTIZR7MRZJUXNY9HUK6I
          receipt_number: GQTF
          receipt_url: https://squareup.com/receipt/preview/GQTFp1ZlXdpoW4o6eGiZhbjosiDFf
      x-release-status: PUBLIC
    Coordinates:
      type: object
      properties:
        latitude:
          type: number
          description: The latitude of the coordinate expressed in degrees.
        longitude:
          type: number
          description: The longitude of the coordinate expressed in degrees.
      description: Latitude and longitude coordinates.
      x-release-status: PUBLIC
    CreateBreakTypeRequest:
      required:
      - break_type
      type: object
      properties:
        idempotency_key:
          maxLength: 128
          type: string
          description: Unique string value to insure idempotency of the operation
        break_type:
          $ref: '#/components/schemas/BreakType'
      description: A request to create a new `BreakType`
      example:
        idempotency_key: PAD3NG5KSN2GL
        break_type:
          location_id: CGJN03P1D08GF
          break_name: Lunch Break
          expected_duration: PT30M
          is_paid: true
      x-release-status: PUBLIC
    CreateBreakTypeResponse:
      type: object
      properties:
        break_type:
          $ref: '#/components/schemas/BreakType'
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: |-
        The response to the request to create a `BreakType`. Contains
        the created `BreakType` object. May contain a set of `Error` objects if
        the request resulted in errors.
      example:
        break_type:
          id: 49SSVDJG76WF3
          location_id: CGJN03P1D08GF
          break_name: Lunch Break
          expected_duration: PT30M
          is_paid: true
          version: 1
          created_at: 2019-02-26T22:42:54Z
          updated_at: 2019-02-26T22:42:54Z
      x-release-status: PUBLIC
    CreateCatalogImageRequest:
      required:
      - idempotency_key
      type: object
      properties:
        idempotency_key:
          minLength: 1
          type: string
          description: |-
            A unique string that identifies this CreateCatalogImage request.
            Keys can be any valid string but must be unique for every CreateCatalogImage request.

            See [Idempotency keys](https://developer.squareup.com/docs/basics/api101/idempotency) for more information.
        object_id:
          type: string
          description: |-
            Unique ID of the `CatalogObject` to attach to this `CatalogImage`. Leave this
            field empty to create unattached images, for example if you are building an integration
            where these images can be attached to catalog items at a later time.
        image:
          $ref: '#/components/schemas/CatalogObject'
      example:
        idempotency_key: 528dea59-7bfb-43c1-bd48-4a6bba7dd61f86
        object_id: ND6EA5AAJEO5WL3JNNIAQA32
        image:
          id: '#TEMP_ID'
          type: IMAGE
          image_data:
            caption: A picture of a cup of coffee
      x-release-status: PUBLIC
    CreateCatalogImageResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on any errors encountered.
          items:
            $ref: '#/components/schemas/Error'
        image:
          $ref: '#/components/schemas/CatalogObject'
      example:
        image:
          catalog_object:
            type: '{{ [ITEM | ITEM_VARIATION | MODIFIER | MODIFIER_LIST | CATEGORY
              | DISCOUNT | TAX] }}'
            id: '{{ set by Catalog during object creation }}'
            updated_at: '{{ date & time of most recent update }}'
            version: '{{ version of the CatalogObject }}'
            is_deleted: '{{ [true | false] }}'
            connect_v1_ids:
              catalog_v1_id: '{{ itemID from Catalog v1 }}'
              location_id: '{{ location where v1 ID is used }}'
            present_at_all_locations: '{{ [true | false] }}'
            present_at_location_ids:
            - '{{ LOCATIONID-1 }}'
            - '{{ LOCATIONID-N }}'
            absent_at_location_ids:
            - '{{ LOCATIONID-1 }}'
            - '{{ LOCATIONID-N }}'
            item_data: '{{ CatalogItem object only if type=ITEM }}'
            item_variation_data: '{{ CatalogItemVariation object only if type=ITEM_VARIATION
              }}'
            modifier_data: '{{ CatalogModifier object only if type=MODIFIER }}'
            modifier_list_data: '{{ CatalogModifierList object only if type=MODIFIER_LIST
              }}'
            category_data: '{{ CatalogCategory object only if type=CATEGORY }}'
            discount_data: '{{ CatalogDiscount object only if type=DISCOUNT }}'
            tax_data: '{{ CatalogTax object only if type=TAX }}'
        errors:
        - code: INTERNAL_SERVER_ERROR
          field: field
          detail: detail
          category: API_ERROR
        - code: INTERNAL_SERVER_ERROR
          field: field
          detail: detail
          category: API_ERROR
      x-release-status: PUBLIC
    CreateCheckoutRequest:
      required:
      - idempotency_key
      - order
      type: object
      properties:
        idempotency_key:
          maxLength: 192
          minLength: 1
          type: string
          description: |-
            A unique string that identifies this checkout among others
            you've created. It can be any valid string but must be unique for every
            order sent to Square Checkout for a given location ID.

            The idempotency key is used to avoid processing the same order more than
            once. If you're unsure whether a particular checkout was created
            successfully, you can reattempt it with the same idempotency key and all the
            same other parameters without worrying about creating duplicates.

            We recommend using a random number/string generator native to the language
            you are working in to generate strings for your idempotency keys.

            See the [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency) guide for more information.
        order:
          $ref: '#/components/schemas/CreateOrderRequest'
        ask_for_shipping_address:
          type: boolean
          description: |-
            If `true`, Square Checkout will collect shipping information on your
            behalf and store that information with the transaction information in your
            Square Dashboard.

            Default: `false`.
        merchant_support_email:
          maxLength: 254
          type: string
          description: |-
            The email address to display on the Square Checkout confirmation page
            and confirmation email that the buyer can use to contact the merchant.

            If this value is not set, the confirmation page and email will display the
            primary email address associated with the merchant's Square account.

            Default: none; only exists if explicitly set.
        pre_populate_buyer_email:
          maxLength: 254
          type: string
          description: |-
            If provided, the buyer's email is pre-populated on the checkout page
            as an editable text field.

            Default: none; only exists if explicitly set.
        pre_populate_shipping_address:
          $ref: '#/components/schemas/Address'
        redirect_url:
          maxLength: 800
          type: string
          description: |-
            The URL to redirect to after checkout is completed with `checkoutId`,
            Square's `orderId`, `transactionId`, and `referenceId` appended as URL
            parameters. For example, if the provided redirect_url is
            `http://www.example.com/order-complete`, a successful transaction redirects
            the customer to:

            `http://www.example.com/order-complete?checkoutId=xxxxxx&orderId=xxxxxx&referenceId=xxxxxx&transactionId=xxxxxx`

            If you do not provide a redirect URL, Square Checkout will display an order
            confirmation page on your behalf; however Square strongly recommends that
            you provide a redirect URL so you can verify the transaction results and
            finalize the order through your existing/normal confirmation workflow.

            Default: none; only exists if explicitly set.
        additional_recipients:
          type: array
          description: |-
            The basic primitive of multi-party transaction. The value is optional.
            The transaction facilitated by you can be split from here.

            If you provide this value, the `amount_money` value in your additional_recipients
            must not be more than 90% of the `total_money` calculated by Square for your order.
            The `location_id` must be the valid location of the app owner merchant.

            This field requires `PAYMENTS_WRITE_ADDITIONAL_RECIPIENTS` OAuth permission.

            This field is currently not supported in sandbox.
          items:
            $ref: '#/components/schemas/ChargeRequestAdditionalRecipient'
        note:
          maxLength: 60
          type: string
          description: |-
            An optional note to associate with the checkout object.

            This value cannot exceed 60 characters.
      description: |-
        Defines the parameters that can be included in the body of
        a request to the __CreateCheckout__ endpoint.
      example:
        idempotency_key: 86ae1696-b1e3-4328-af6d-f1e04d947ad6
        redirect_url: https://merchant.website.com/order-confirm
        order:
          idempotency_key: 12ae1696-z1e3-4328-af6d-f1e04d947gd4
          order:
            location_id: location_id
            customer_id: customer_id
            reference_id: reference_id
            line_items:
            - name: Printed T Shirt
              quantity: "2"
              base_price_money:
                amount: 1500
                currency: USD
              applied_discounts:
              - discount_uid: 56ae1696-z1e3-9328-af6d-f1e04d947gd4
              applied_taxes:
              - tax_uid: 38ze1696-z1e3-5628-af6d-f1e04d947fg3
            - name: Slim Jeans
              quantity: "1"
              base_price_money:
                amount: 2500
                currency: USD
            - name: Woven Sweater
              quantity: "3"
              base_price_money:
                amount: 3500
                currency: USD
            taxes:
            - uid: 38ze1696-z1e3-5628-af6d-f1e04d947fg3
              type: INCLUSIVE
              percentage: "7.75"
              scope: LINE_ITEM
            discounts:
            - uid: 56ae1696-z1e3-9328-af6d-f1e04d947gd4
              type: FIXED_AMOUNT
              scope: LINE_ITEM
              amount_money:
                amount: 100
                currency: USD
        additional_recipients:
        - location_id: 057P5VYJ4A5X1
          description: Application fees
          amount_money:
            amount: 60
            currency: USD
        ask_for_shipping_address: true
        merchant_support_email: merchant+support@website.com
        pre_populate_buyer_email: example@email.com
        pre_populate_shipping_address:
          address_line_1: 1455 Market St.
          address_line_2: Suite 600
          locality: San Francisco
          administrative_district_level_1: CA
          postal_code: "94103"
          country: US
          first_name: Jane
          last_name: Doe
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/CreateCheckout/CreateCheckoutRequest.python
        csharp: /sdk_samples/CreateCheckout/CreateCheckoutRequest.csharp
        java: /sdk_samples/CreateCheckout/CreateCheckoutRequest.java
        php: /sdk_samples/CreateCheckout/CreateCheckoutRequest.php
        javascript: /sdk_samples/CreateCheckout/CreateCheckoutRequest.javascript
        ruby: /sdk_samples/CreateCheckout/CreateCheckoutRequest.ruby
    CreateCheckoutResponse:
      type: object
      properties:
        checkout:
          $ref: '#/components/schemas/Checkout'
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: |-
        Defines the fields that are included in the response body of
        a request to the __CreateCheckout__ endpoint.
      example:
        checkout:
          id: CAISEHGimXh-C3RIT4og1a6u1qw
          checkout_page_url: https://connect.squareup.com/v2/checkout?c=CAISEHGimXh-C3RIT4og1a6u1qw&l=CYTKRM7R7JMV8
          ask_for_shipping_address: true
          merchant_support_email: merchant+support@website.com
          pre_populate_buyer_email: example@email.com
          pre_populate_shipping_address:
            address_line_1: 1455 Market St.
            address_line_2: Suite 600
            locality: San Francisco
            administrative_district_level_1: CA
            postal_code: "94103"
            country: US
            first_name: Jane
            last_name: Doe
          redirect_url: https://merchant.website.com/order-confirm
          order:
            location_id: location_id
            customer_id: customer_id
            reference_id: reference_id
            line_items:
            - name: Printed T Shirt
              quantity: "2"
              applied_taxes:
              - tax_uid: 38ze1696-z1e3-5628-af6d-f1e04d947fg3
                applied_money:
                  amount: 103
                  currency: USD
              applied_discounts:
              - discount_uid: 56ae1696-z1e3-9328-af6d-f1e04d947gd4
                applied_money:
                  amount: 100
                  currency: USD
              base_price_money:
                amount: 1500
                currency: USD
              total_tax_money:
                amount: 103
                currency: USD
              total_discount_money:
                amount: 100
                currency: USD
              total_money:
                amount: 1503
                currency: USD
            - name: Slim Jeans
              quantity: "1"
              base_price_money:
                amount: 2500
                currency: USD
              total_money:
                amount: 2500
                currency: USD
            - name: Wooven Sweater
              quantity: "3"
              base_price_money:
                amount: 3500
                currency: USD
              total_money:
                amount: 10500
                currency: USD
            taxes:
            - uid: 38ze1696-z1e3-5628-af6d-f1e04d947fg3
              type: INCLUSIVE
              percentage: "7.75"
              scope: LINE_ITEM
            discounts:
            - uid: 56ae1696-z1e3-9328-af6d-f1e04d947gd4
              type: FIXED_AMOUNT
              scope: LINE_ITEM
              amount_money:
                amount: 100
                currency: USD
              applied_money:
                amount: 100
                currency: USD
            total_money:
              amount: 14503
              currency: USD
            total_tax_money:
              amount: 103
              currency: USD
            total_discount_money:
              amount: 100
              currency: USD
          created_at: 2017-06-16T22:25:35Z
          version: 1
          additional_recipients:
          - location_id: 057P5VYJ4A5X1
            description: Application fees
            amount_money:
              amount: 60
              currency: USD
      x-release-status: PUBLIC
    CreateCustomerCardRequest:
      required:
      - card_nonce
      type: object
      properties:
        card_nonce:
          type: string
          description: |-
            A card nonce representing the credit card to link to the customer.

            Card nonces are generated by the Square Payment Form when customers enter
            their card information. See
            [Embedding the payment form](https://developer.squareup.com/docs/payment-form/payment-form-walkthrough) for
            more information.

            __NOTE:__ Card nonces generated by digital wallets (e.g., Apple Pay)
            cannot be used to create a customer card.
        billing_address:
          $ref: '#/components/schemas/Address'
        cardholder_name:
          type: string
          description: The full name printed on the credit card.
        verification_token:
          type: string
          description: |-
            An identifying token generated by `SqPaymentForm.verifyBuyer()`.
            Verification tokens encapsulate customer device information and 3-D Secure
            challenge results to indicate that Square has verified the buyer identity.
      description: |-
        Defines the fields that are included in the request body of a request
        to the CreateCustomerCard endpoint.
      example:
        card_nonce: YOUR_CARD_NONCE
        billing_address:
          address_line_1: 500 Electric Ave
          address_line_2: Suite 600
          locality: New York
          administrative_district_level_1: NY
          postal_code: "10003"
          country: US
        cardholder_name: Amelia Earhart
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.python
        csharp: /sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.csharp
        java: /sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.java
        php: /sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.php
        javascript: /sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.javascript
        ruby: /sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.ruby
    CreateCustomerCardResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        card:
          $ref: '#/components/schemas/Card'
      description: |-
        Defines the fields that are included in the response body of
        a request to the CreateCustomerCard endpoint.

        One of `errors` or `card` is present in a given response (never both).
      example:
        card:
          id: icard-card_id
          card_brand: VISA
          last_4: "1111"
          exp_month: 11
          exp_year: 2018
          cardholder_name: Amelia Earhart
          billing_address:
            address_line_1: 500 Electric Ave
            address_line_2: Suite 600
            locality: New York
            administrative_district_level_1: NY
            postal_code: "10003"
            country: US
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.python
        csharp: /sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.csharp
        java: /sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.java
        php: /sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.php
        javascript: /sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.javascript
        ruby: /sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.ruby
    CreateCustomerGroupRequest:
      required:
      - group
      type: object
      properties:
        idempotency_key:
          type: string
          description: |-
            The idempotency key for the request. See the [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency)
            guide for more information.
        group:
          $ref: '#/components/schemas/CustomerGroup'
      description: |-
        Defines the body parameters that can be provided in a request to the
        [CreateCustomerGroup](#endpoint-createcustomegroup) endpoint.
      example:
        group:
          name: Loyal Customers
      x-release-status: BETA
    CreateCustomerGroupResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        group:
          $ref: '#/components/schemas/CustomerGroup'
      description: |-
        Defines the fields that are included in the response body of
        a request to the [CreateCustomerGroup](#endpoint-createcustomergroup) endpoint.

        One of `errors` or `group` is present in a given response (never both).
      example:
        group:
          id: 2TAT3CMH4Q0A9M87XJZED0WMR3
          name: Loyal Customers
          created_at: 2020-04-13T21:54:57.863Z
          updated_at: 2020-04-13T21:54:58Z
      x-release-status: BETA
    CreateCustomerRequest:
      type: object
      properties:
        idempotency_key:
          type: string
          description: |-
            The idempotency key for the request. See the
            [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency) guide for more information.
        given_name:
          type: string
          description: The given (i.e., first) name associated with the customer profile.
        family_name:
          type: string
          description: The family (i.e., last) name associated with the customer profile.
        company_name:
          type: string
          description: A business name associated with the customer profile.
        nickname:
          type: string
          description: A nickname for the customer profile.
        email_address:
          type: string
          description: The email address associated with the customer profile.
        address:
          $ref: '#/components/schemas/Address'
        phone_number:
          type: string
          description: The 11-digit phone number associated with the customer profile.
        reference_id:
          type: string
          description: |-
            An optional, second ID used to associate the customer profile with an
            entity in another system.
        note:
          type: string
          description: A custom note associated with the customer profile.
        birthday:
          type: string
          description: |-
            The birthday associated with the customer profile, in RFC-3339 format.
            Year is optional, timezone and times are not allowed.
            For example: `0000-09-01T00:00:00-00:00` indicates a birthday on September 1st.
            `1998-09-01T00:00:00-00:00` indications a birthday on September 1st __1998__.
      description: |-
        Defines the body parameters that can be provided in a request to the
        CreateCustomer endpoint.
      example:
        given_name: Amelia
        family_name: Earhart
        email_address: Amelia.Earhart@example.com
        address:
          address_line_1: 500 Electric Ave
          address_line_2: Suite 600
          locality: New York
          administrative_district_level_1: NY
          postal_code: "10003"
          country: US
        phone_number: 1-212-555-4240
        reference_id: YOUR_REFERENCE_ID
        note: a customer
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/CreateCustomer/CreateCustomerRequest.python
        csharp: /sdk_samples/CreateCustomer/CreateCustomerRequest.csharp
        java: /sdk_samples/CreateCustomer/CreateCustomerRequest.java
        php: /sdk_samples/CreateCustomer/CreateCustomerRequest.php
        javascript: /sdk_samples/CreateCustomer/CreateCustomerRequest.javascript
        ruby: /sdk_samples/CreateCustomer/CreateCustomerRequest.ruby
    CreateCustomerResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        customer:
          $ref: '#/components/schemas/Customer'
      description: |-
        Defines the fields that are included in the response body of
        a request to the CreateCustomer endpoint.

        One of `errors` or `customer` is present in a given response (never both).
      example:
        customer:
          id: JDKYHBWT1D4F8MFH63DBMEN8Y4
          created_at: 2016-03-23T20:21:54.859Z
          updated_at: 2016-03-23T20:21:54.859Z
          given_name: Amelia
          family_name: Earhart
          email_address: Amelia.Earhart@example.com
          address:
            address_line_1: 500 Electric Ave
            address_line_2: Suite 600
            locality: New York
            administrative_district_level_1: NY
            postal_code: "10003"
            country: US
          phone_number: 1-212-555-4240
          reference_id: YOUR_REFERENCE_ID
          note: a customer
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/CreateCustomer/CreateCustomerResponse.python
        csharp: /sdk_samples/CreateCustomer/CreateCustomerResponse.csharp
        java: /sdk_samples/CreateCustomer/CreateCustomerResponse.java
        php: /sdk_samples/CreateCustomer/CreateCustomerResponse.php
        javascript: /sdk_samples/CreateCustomer/CreateCustomerResponse.javascript
        ruby: /sdk_samples/CreateCustomer/CreateCustomerResponse.ruby
    CreateDeviceCodeRequest:
      required:
      - device_code
      - idempotency_key
      type: object
      properties:
        idempotency_key:
          maxLength: 128
          minLength: 1
          type: string
          description: |-
            A unique string that identifies this CreateCheckout request. Keys can be any valid string but
            must be unique for every CreateCheckout request.

            See [Idempotency keys](https://developer.squareup.com/docs/basics/api101/idempotency) for more information.
        device_code:
          $ref: '#/components/schemas/DeviceCode'
      example:
        idempotency_key: 01bb00a6-0c86-4770-94ed-f5fca973cd56
        device_code:
          name: Counter 1
          location_id: B5E4484SHHNYH
          product_type: TERMINAL_API
      x-release-status: BETA
    CreateDeviceCodeResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        device_code:
          $ref: '#/components/schemas/DeviceCode'
      example:
        device_code:
          id: B3Z6NAMYQSMTM
          name: Counter 1
          code: EBCARJ
          product_type: TERMINAL_API
          location_id: B5E4484SHHNYH
          created_at: 2020-02-06T18:44:33.000Z
          pair_by: 2020-02-06T18:49:33.000Z
          status: UNPAIRED
          status_changed_at: 2020-02-06T18:44:33.000Z
      x-release-status: BETA
    CreateDisputeEvidenceFileRequest:
      required:
      - idempotency_key
      type: object
      properties:
        idempotency_key:
          maxLength: 45
          minLength: 1
          type: string
          description: |-
            Unique ID. For more information,
            see [Idempotency](https://developer.squareup.com/docs/docs/working-with-apis/idempotency).
        evidence_type:
          $ref: '#/components/schemas/DisputeEvidenceType'
        content_type:
          maxLength: 40
          minLength: 1
          type: string
          description: |-
            The MIME type of the uploaded file.
            One of image/heic, image/heif, image/jpeg, application/pdf,  image/png, image/tiff.
      description: Defines parameters for a CreateDisputeEvidenceFile request.
      x-release-status: BETA
    CreateDisputeEvidenceFileResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        evidence:
          $ref: '#/components/schemas/DisputeEvidence'
      description: Defines fields in a CreateDisputeEvidenceFile response.
      example:
        evidence:
          evidence_id: TOomLInj6iWmP3N8qfCXrB
          dispute_id: bVTprrwk0gygTLZ96VX1oB
          evidence_file:
            filename: evidence.tiff
            filetype: image/tiff
          uploaded_at: 2018-10-18T16:01:10.000Z
      x-release-status: BETA
    CreateDisputeEvidenceTextRequest:
      required:
      - evidence_text
      - idempotency_key
      type: object
      properties:
        idempotency_key:
          maxLength: 45
          minLength: 1
          type: string
          description: |-
            Unique ID. For more information,
            see [Idempotency](https://developer.squareup.com/docs/docs/working-with-apis/idempotency).
        evidence_type:
          $ref: '#/components/schemas/DisputeEvidenceType'
        evidence_text:
          maxLength: 500
          minLength: 1
          type: string
          description: The evidence string.
      description: Defines parameters for a CreateDisputeEvidenceText request.
      example:
        evidence_type: TRACKING_NUMBER
        evidence_text: 1Z8888888888888888
        idempotency_key: ed3ee3933d946f1514d505d173c82648
      x-release-status: BETA
    CreateDisputeEvidenceTextResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        evidence:
          $ref: '#/components/schemas/DisputeEvidence'
      description: Defines fields in a CreateDisputeEvidenceText response.
      example:
        evidence:
          evidence_id: TOomLInj6iWmP3N8qfCXrB
          dispute_id: bVTprrwk0gygTLZ96VX1oB
          evidence_text: 1Z8888888888888888
          uploaded_at: 2018-10-18T16:01:10.000Z
      x-release-status: BETA
    CreateInvoiceRequest:
      required:
      - invoice
      type: object
      properties:
        invoice:
          $ref: '#/components/schemas/Invoice'
        idempotency_key:
          maxLength: 128
          type: string
          description: "A unique string that identifies the `CreateInvoice` request.\
            \ If you do not \nprovide `idempotency_key` (or provide an empty string\
            \ as the value), the endpoint \ntreats each request as independent.\n\n\
            For more information, see [Idempotency](https://developer.squareup.com/docs/docs/working-with-apis/idempotency)."
      description: Describes a `CreateInvoice` request.
      example:
        idempotency_key: ce3748f9-5fc1-4762-aa12-aae5e843f1f4
        invoice:
          location_id: ES0RJRZYEC39A
          order_id: CAISENgvlJ6jLWAzERDzjyHVybY
          scheduled_at: 2030-01-13T10:00:00Z
          primary_recipient:
            customer_id: JDKYHBWT1D4F8MFH63DBMEN8Y4
          payment_requests:
          - request_method: EMAIL
            request_type: BALANCE
            due_date: 2030-01-24
            tipping_enabled: true
            reminders:
            - message: Your invoice is due tomorrow
              relative_scheduled_days: -1
          invoice_number: inv-100
          title: Event Planning Services
          description: We appreciate your business!
      x-release-status: BETA
    CreateInvoiceResponse:
      type: object
      properties:
        invoice:
          $ref: '#/components/schemas/Invoice'
        errors:
          type: array
          description: Information about errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: The response returned by the `CreateInvoice` request.
      example:
        invoice:
          id: gt2zv1z6mnUm1V7KMxxf3w
          version: 0
          location_id: ES0RJRZYEC39A
          order_id: CAISENgvlJ6jLWAzERDzjyHVybY
          payment_requests:
          - uid: 2da7964f-f3d2-4f43-81e8-5aa220bf3355
            request_method: EMAIL
            request_type: BALANCE
            due_date: 2030-01-24
            tipping_enabled: true
            reminders:
            - uid: beebd363-e47f-4075-8785-c235aaa7df11
              relative_scheduled_days: -1
              message: Your invoice is due tomorrow
              status: PENDING
            computed_amount_money:
              amount: 10000
              currency: USD
            total_completed_amount_money:
              amount: 0
              currency: USD
          invoice_number: inv-100
          title: Event Planning Services
          description: We appreciate your business!
          scheduled_at: 2030-01-13T10:00:00Z
          status: DRAFT
          timezone: America/Los_Angeles
          created_at: 2020-06-18T17:45:13Z
          updated_at: 2020-06-18T17:45:13Z
          primary_recipient:
            customer_id: JDKYHBWT1D4F8MFH63DBMEN8Y4
            given_name: Amelia
            family_name: Earhart
            email_address: Amelia.Earhart@example.com
            phone_number: 1-212-555-4240
      x-release-status: BETA
    CreateLocationRequest:
      type: object
      properties:
        location:
          $ref: '#/components/schemas/Location'
      description: Request object for the [CreateLocation](#endpoint-createlocation)
        endpoint.
      example:
        location:
          name: New location name
          description: My new location.
          facebook_url: null
          address:
            address_line_1: 1234 Peachtree St. NE
            administrative_district_level_1: GA
            locality: Atlanta
            postal_code: "30309"
      x-release-status: BETA
    CreateLocationResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
        location:
          $ref: '#/components/schemas/Location'
      description: Response object returned by the [CreateLocation](#endpoint-createlocation)
        endpoint.
      example:
        location:
          id: LOCATION_ID
          name: New location name
          address:
            address_line_1: 1234 Peachtree St. NE
            locality: Atlanta
            administrative_district_level_1: GA
            postal_code: "30309"
          capabilities:
          - CREDIT_CARD_PROCESSING
          status: ACTIVE
          created_at: 2019-07-19T17:58:25Z
          merchant_id: MERCHANT_ID
          country: US
          language_code: en-US
          currency: USD
          type: PHYSICAL
          description: My new location.
          website_url: examplewebsite.com
          twitter_username: twitter
          instagram_username: instagram
          coordinates:
            latitude: 33.788567
            longitude: -84.466947
          mcc: "1234"
      x-release-status: BETA
    CreateLoyaltyAccountRequest:
      required:
      - idempotency_key
      - loyalty_account
      type: object
      properties:
        loyalty_account:
          $ref: '#/components/schemas/LoyaltyAccount'
        idempotency_key:
          maxLength: 128
          minLength: 1
          type: string
          description: "A unique string that identifies this `CreateLoyaltyAccount`\
            \ request. \nKeys can be any valid string, but must be unique for every\
            \ request."
      description: A request to create a new loyalty account.
      example:
        loyalty_account:
          mappings:
          - type: PHONE
            value: +14155551234
          program_id: d619f755-2d17-41f3-990d-c04ecedd64dd
        idempotency_key: ec78c477-b1c3-4899-a209-a4e71337c996
      x-release-status: BETA
    CreateLoyaltyAccountResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        loyalty_account:
          $ref: '#/components/schemas/LoyaltyAccount'
      description: A response that includes loyalty account created.
      example:
        loyalty_account:
          id: 79b807d2-d786-46a9-933b-918028d7a8c5
          mappings:
          - id: 66aaab3f-da99-49ed-8b19-b87f851c844f
            type: PHONE
            value: +14155551234
            created_at: 2020-05-08T21:44:32Z
          program_id: d619f755-2d17-41f3-990d-c04ecedd64dd
          balance: 0
          lifetime_points: 0
          created_at: 2020-05-08T21:44:32Z
          updated_at: 2020-05-08T21:44:32Z
      x-release-status: BETA
    CreateLoyaltyRewardRequest:
      required:
      - idempotency_key
      - reward
      type: object
      properties:
        reward:
          $ref: '#/components/schemas/LoyaltyReward'
        idempotency_key:
          maxLength: 128
          minLength: 1
          type: string
          description: "A unique string that identifies this `CreateLoyaltyReward`\
            \ request. \nKeys can be any valid string, but must be unique for every\
            \ request."
      description: A request to create a loyalty reward.
      example:
        reward:
          loyalty_account_id: 5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd
          reward_tier_id: e1b39225-9da5-43d1-a5db-782cdd8ad94f
          order_id: RFZfrdtm3mhO1oGzf5Cx7fEMsmGZY
        idempotency_key: 18c2e5ea-a620-4b1f-ad60-7b167285e451
      x-release-status: BETA
    CreateLoyaltyRewardResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        reward:
          $ref: '#/components/schemas/LoyaltyReward'
      description: A response that includes the loyalty reward created.
      example:
        reward:
          id: a8f43ebe-2ad6-3001-bdd5-7d7c2da08943
          status: ISSUED
          loyalty_account_id: 5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd
          reward_tier_id: e1b39225-9da5-43d1-a5db-782cdd8ad94f
          points: 10
          order_id: RFZfrdtm3mhO1oGzf5Cx7fEMsmGZY
          created_at: 2020-05-01T21:49:54Z
          updated_at: 2020-05-01T21:49:54Z
      x-release-status: BETA
    CreateMobileAuthorizationCodeRequest:
      type: object
      properties:
        location_id:
          type: string
          description: The Square location ID the authorization code should be tied
            to.
      description: |-
        Defines the body parameters that can be provided in a request to the
        __CreateMobileAuthorizationCode__ endpoint.
      example:
        location_id: YOUR_LOCATION_ID
      x-release-status: PUBLIC
    CreateMobileAuthorizationCodeResponse:
      type: object
      properties:
        authorization_code:
          type: string
          description: |-
            Generated authorization code that connects a mobile application instance
            to a Square account.
        expires_at:
          type: string
          description: |-
            The timestamp when `authorization_code` expires in
            [RFC 3339](https://tools.ietf.org/html/rfc3339) format, e.g., "2016-09-04T23:59:33.123Z".
        error:
          $ref: '#/components/schemas/Error'
      description: |-
        Defines the fields that are included in the response body of
        a request to the __CreateMobileAuthorizationCode__ endpoint.
      example:
        authorization_code: YOUR_MOBILE_AUTHORIZATION_CODE
        expires_at: 2019-01-10T19:42:08Z
      x-release-status: PUBLIC
    CreateOrderRequest:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/Order'
        location_id:
          type: string
          description: The ID of the business location to associate the order with.
        idempotency_key:
          maxLength: 192
          type: string
          description: |-
            A value you specify that uniquely identifies this
            order among orders you've created.

            If you're unsure whether a particular order was created successfully,
            you can reattempt it with the same idempotency key without
            worrying about creating duplicate orders.

            See [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency) for more information.
      example:
        idempotency_key: 8193148c-9586-11e6-99f9-28cfe92138cf
        order:
          reference_id: my-order-001
          location_id: 057P5VYJ4A5X1
          line_items:
          - name: New York Strip Steak
            quantity: "1"
            base_price_money:
              amount: 1599
              currency: USD
          - quantity: "2"
            catalog_object_id: BEMYCSMIJL46OCDV4KYIKXIB
            modifiers:
            - catalog_object_id: CHQX7Y4KY6N5KINJKZCFURPZ
            applied_discounts:
            - discount_uid: one-dollar-off
          taxes:
          - uid: state-sales-tax
            name: State Sales Tax
            percentage: "9"
            scope: ORDER
          discounts:
          - uid: labor-day-sale
            name: Labor Day Sale
            percentage: "5"
            scope: ORDER
          - uid: membership-discount
            catalog_object_id: DB7L55ZH2BGWI4H23ULIWOQ7
            scope: ORDER
          - uid: one-dollar-off
            name: Sale - $1.00 off
            amount_money:
              amount: 100
              currency: USD
            scope: LINE_ITEM
      x-release-status: PUBLIC
    CreateOrderResponse:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/Order'
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: |-
        Defines the fields that are included in the response body of
        a request to the CreateOrder endpoint.

        One of `errors` or `order` is present in a given response (never both).
      example:
        order:
          id: CAISENgvlJ6jLWAzERDzjyHVybY
          location_id: 057P5VYJ4A5X1
          line_items:
          - uid: 8uSwfzvUImn3IRrvciqlXC
            name: New York Strip Steak
            quantity: "1"
            applied_taxes:
            - uid: aKG87ArnDpvMLSZJHxWUl
              tax_uid: state-sales-tax
              applied_money:
                amount: 136
                currency: USD
            applied_discounts:
            - uid: jWdgP1TpHPFBuVrz81mXVC
              discount_uid: membership-discount
              applied_money:
                amount: 8
                currency: USD
            - uid: jnZOjjVY57eRcQAVgEwFuC
              discount_uid: labor-day-sale
              applied_money:
                amount: 79
                currency: USD
            base_price_money:
              amount: 1599
              currency: USD
            gross_sales_money:
              amount: 1599
              currency: USD
            total_tax_money:
              amount: 136
              currency: USD
            total_discount_money:
              amount: 87
              currency: USD
            total_money:
              amount: 1648
              currency: USD
            variation_total_price_money:
              amount: 1599
              currency: USD
          - uid: v8ZuEXpOJpb0bazLuvrLDB
            name: New York Steak
            quantity: "2"
            catalog_object_id: BEMYCSMIJL46OCDV4KYIKXIB
            variation_name: Larger
            modifiers:
            - uid: Lo3qMMckDluu9Qsb58d4CC
              catalog_object_id: CHQX7Y4KY6N5KINJKZCFURPZ
              name: Well
              base_price_money:
                amount: 50
                currency: USD
              total_price_money:
                amount: 100
                currency: USD
            applied_taxes:
            - uid: v1dAgrfUVUPTnVTf9sRPz
              tax_uid: state-sales-tax
              applied_money:
                amount: 374
                currency: USD
            applied_discounts:
            - uid: nUXvdsIItfKko0dbYtY58C
              discount_uid: membership-discount
              applied_money:
                amount: 22
                currency: USD
            - uid: qSdkOOOernlVQqsJ94SPjB
              discount_uid: labor-day-sale
              applied_money:
                amount: 224
                currency: USD
            - uid: y7bVl4njrWAnfDwmz19izB
              discount_uid: one-dollar-off
              applied_money:
                amount: 100
                currency: USD
            base_price_money:
              amount: 2200
              currency: USD
            gross_sales_money:
              amount: 4500
              currency: USD
            total_tax_money:
              amount: 374
              currency: USD
            total_discount_money:
              amount: 346
              currency: USD
            total_money:
              amount: 4528
              currency: USD
            variation_total_price_money:
              amount: 4400
              currency: USD
          taxes:
          - uid: state-sales-tax
            name: State Sales Tax
            type: ADDITIVE
            percentage: "9"
            applied_money:
              amount: 510
              currency: USD
            scope: ORDER
          discounts:
          - uid: membership-discount
            catalog_object_id: DB7L55ZH2BGWI4H23ULIWOQ7
            name: Membership Discount
            type: FIXED_PERCENTAGE
            percentage: "0.5"
            applied_money:
              amount: 30
              currency: USD
            scope: ORDER
          - uid: labor-day-sale
            name: Labor Day Sale
            type: FIXED_PERCENTAGE
            percentage: "5"
            applied_money:
              amount: 303
              currency: USD
            scope: ORDER
          - uid: one-dollar-off
            name: Sale - $1.00 off
            type: FIXED_AMOUNT
            amount_money:
              amount: 100
              currency: USD
            applied_money:
              amount: 100
              currency: USD
            scope: LINE_ITEM
          created_at: 2020-01-17T20:47:53.293Z
          updated_at: 2020-01-17T20:47:53.293Z
          state: OPEN
          version: 1
          reference_id: my-order-001
          total_money:
            amount: 6176
            currency: USD
          total_tax_money:
            amount: 510
            currency: USD
          total_discount_money:
            amount: 433
            currency: USD
          total_tip_money:
            amount: 0
            currency: USD
          total_service_charge_money:
            amount: 0
            currency: USD
          net_amounts:
            total_money:
              amount: 6176
              currency: USD
            tax_money:
              amount: 510
              currency: USD
            discount_money:
              amount: 433
              currency: USD
            tip_money:
              amount: 0
              currency: USD
            service_charge_money:
              amount: 0
              currency: USD
          source:
            name: My App
      x-release-status: PUBLIC
    CreatePaymentRequest:
      required:
      - amount_money
      - idempotency_key
      - source_id
      type: object
      properties:
        source_id:
          minLength: 1
          type: string
          description: |-
            The ID for the source of funds for this payment.  This can be a nonce
            generated by the Payment Form or a card on file made with the Customers API.
        idempotency_key:
          maxLength: 45
          minLength: 1
          type: string
          description: |-
            A unique string that identifies this CreatePayment request. Keys can be any valid string
            but must be unique for every CreatePayment request.

            Max: 45 characters

            Note: The number of allowed characters might be less than the stated maximum, if multi-byte
            characters are used.

            See [Idempotency keys](https://developer.squareup.com/docs/basics/api101/idempotency) for more information.
        amount_money:
          $ref: '#/components/schemas/Money'
        tip_money:
          $ref: '#/components/schemas/Money'
        app_fee_money:
          $ref: '#/components/schemas/Money'
        delay_duration:
          type: string
          description: |-
            The duration of time after the payment's creation when Square automatically cancels the
            payment. This automatic cancellation applies only to payments that don't reach a terminal state
            (COMPLETED, CANCELED, or FAILED) before the `delay_duration` time period.

            This parameter should be specified as a time duration, in RFC 3339 format, with a minimum value
            of 1 minute.

            Notes:
            This feature is only supported for card payments. This parameter can only be set for a delayed
            capture payment (`autocomplete=false`).

            Default:

            - Card Present payments: "PT36H" (36 hours) from the creation time.
            - Card Not Present payments: "P7D" (7 days) from the creation time.
          x-release-status: BETA
        autocomplete:
          type: boolean
          description: |-
            If set to `true`, this payment will be completed when possible. If
            set to `false`, this payment will be held in an approved state until either
            explicitly completed (captured) or canceled (voided). For more information, see
            [Delayed Payments](https://developer.squareup.com/docs/payments-api/take-payments#delayed-payments).

            Default: true
        order_id:
          type: string
          description: Associate a previously created order with this payment
        customer_id:
          type: string
          description: |-
            The [Customer](#type-customer) ID of the customer associated with the payment.
            Required if the `source_id` refers to a card on file created using the Customers API.
        location_id:
          type: string
          description: |-
            The location ID to associate with the payment. If not specified, the default location is
            used.
        reference_id:
          maxLength: 40
          type: string
          description: |-
            A user-defined ID to associate with the payment.
            You can use this field to associate the payment to an entity in an external system.
            For example, you might specify an order ID that is generated by a third-party shopping cart.

            Limit 40 characters.
        verification_token:
          type: string
          description: |-
            An identifying token generated by `SqPaymentForm.verifyBuyer()`.
            Verification tokens encapsulate customer device information and 3-D Secure
            challenge results to indicate that Square has verified the buyer identity.

            See the [SCA Overview](https://developer.squareup.com/docs/sca-overview).
        accept_partial_authorization:
          type: boolean
          description: |-
            If set to true and charging a Square Gift Card, a payment may be returned with
            amount_money equal to less than what was requested.  Example, a request for $20 when charging
            a Square Gift Card with balance of $5 wil result in an APPROVED payment of $5.  You may choose
            to prompt the buyer for an additional payment to cover the remainder, or cancel the gift card
            payment.  Cannot be `true` when `autocomplete = true`.

            For more information, see
            [Partial amount with Square gift cards](https://developer.squareup.com/docs/payments-api/take-payments#partial-payment-gift-card).

            Default: false
          x-release-status: BETA
        buyer_email_address:
          maxLength: 255
          type: string
          description: The buyer's e-mail address
        billing_address:
          $ref: '#/components/schemas/Address'
        shipping_address:
          $ref: '#/components/schemas/Address'
        note:
          maxLength: 500
          type: string
          description: |-
            An optional note to be entered by the developer when creating a payment

            Limit 500 characters.
        statement_description_identifier:
          maxLength: 20
          type: string
          description: |-
            Optional additional payment information to include on the customer's card statement
            as part of statement description. This can be, for example, an invoice number, ticket number,
            or short description that uniquely identifies the purchase.

            Note that the `statement_description_identifier` may get truncated on the statement description
            to fit the required information including the Square identifier (SQ *) and name of the
            merchant taking the payment.
          x-release-status: BETA
      description: |-
        Creates a payment from the source (nonce, card on file, etc.)

        The `PAYMENTS_WRITE_ADDITIONAL_RECIPIENTS` OAuth permission is required
        to enable application fees.

        For more information, see [Payments and Refunds Overview](https://developer.squareup.com/docs/payments-api/overview).

        For information about application fees in a payment, see
        [Collect Fees](https://developer.squareup.com/docs/payments-api/take-payments-and-collect-fees).
      example:
        idempotency_key: 4935a656-a929-4792-b97c-8848be85c27c
        amount_money:
          amount: 200
          currency: USD
        source_id: ccof:uIbfJXhXETSP197M3GB
        autocomplete: true
        customer_id: VDKXEEKPJN48QDG3BGGFAK05P8
        location_id: XK3DBG77NJBFX
        reference_id: "123456"
        note: Brief description
        app_fee_money:
          amount: 10
          currency: USD
      x-release-status: PUBLIC
    CreatePaymentResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
        payment:
          $ref: '#/components/schemas/Payment'
      description: |-
        Defines the fields that are included in the response body of
        a request to the [CreatePayment](#endpoint-payments-createpayment) endpoint.

        Note: if there are errors processing the request, the payment field may not be
        present, or it may be present with a status of `FAILED`.
      example:
        payment:
          id: GQTFp1ZlXdpoW4o6eGiZhbjosiDFf
          created_at: 2019-07-10T13:23:49.154Z
          updated_at: 2019-07-10T13:23:49.446Z
          amount_money:
            amount: 200
            currency: USD
          app_fee_money:
            amount: 10
            currency: USD
          total_money:
            amount: 200
            currency: USD
          status: COMPLETED
          source_type: CARD
          card_details:
            status: CAPTURED
            card:
              card_brand: VISA
              last_4: "1111"
              exp_month: 7
              exp_year: 2026
              fingerprint: sq-1-TpmjbNBMFdibiIjpQI5LiRgNUBC7u1689i0TgHjnlyHEWYB7tnn-K4QbW4ttvtaqXw
              card_type: DEBIT
              prepaid_type: PREPAID
              bin: "411111"
            entry_method: ON_FILE
            cvv_status: CVV_ACCEPTED
            avs_status: AVS_ACCEPTED
            auth_result_code: nsAyY2
            statement_description: SQ *MY MERCHANT
          location_id: XTI0H92143A39
          order_id: m2Hr8Hk8A3CTyQQ1k4ynExg92tO3
          reference_id: "123456"
          note: Brief description
          customer_id: RDX9Z4XTIZR7MRZJUXNY9HUK6I
          receipt_number: GQTF
          receipt_url: https://squareup.com/receipt/preview/GQTFp1ZlXdpoW4o6eGiZhbjosiDFf
      x-release-status: PUBLIC
    CreateRefundRequest:
      required:
      - amount_money
      - idempotency_key
      - tender_id
      type: object
      properties:
        idempotency_key:
          maxLength: 192
          minLength: 1
          type: string
          description: |-
            A value you specify that uniquely identifies this
            refund among refunds you've created for the tender.

            If you're unsure whether a particular refund succeeded,
            you can reattempt it with the same idempotency key without
            worrying about duplicating the refund.

            See [Idempotency keys](#idempotencykeys) for more information.
        tender_id:
          maxLength: 192
          minLength: 1
          type: string
          description: |-
            The ID of the tender to refund.

            A [`Transaction`](#type-transaction) has one or more `tenders` (i.e., methods
            of payment) associated with it, and you refund each tender separately with
            the Connect API.
        reason:
          maxLength: 192
          type: string
          description: |-
            A description of the reason for the refund.

            Default value: `Refund via API`
        amount_money:
          $ref: '#/components/schemas/Money'
      description: |-
        Defines the body parameters that can be included in
        a request to the [CreateRefund](#endpoint-createrefund) endpoint.

        Deprecated - recommend using [RefundPayment](#endpoint-refunds-refundpayment)
      example:
        idempotency_key: 86ae1696-b1e3-4328-af6d-f1e04d947ad2
        tender_id: MtZRYYdDrYNQbOvV7nbuBvMF
        reason: a reason
        amount_money:
          amount: 100
          currency: USD
      x-release-status: DEPRECATED
      x-sq-sdk-sample-code:
        python: /sdk_samples/CreateRefund/CreateRefundRequest.python
        csharp: /sdk_samples/CreateRefund/CreateRefundRequest.csharp
        java: /sdk_samples/CreateRefund/CreateRefundRequest.java
        php: /sdk_samples/CreateRefund/CreateRefundRequest.php
        javascript: /sdk_samples/CreateRefund/CreateRefundRequest.javascript
        ruby: /sdk_samples/CreateRefund/CreateRefundRequest.ruby
    CreateRefundResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        refund:
          $ref: '#/components/schemas/Refund'
      description: |-
        Defines the fields that are included in the response body of
        a request to the [CreateRefund](#endpoint-createrefund) endpoint.

        One of `errors` or `refund` is present in a given response (never both).
      example:
        refund:
          id: b27436d1-7f8e-5610-45c6-417ef71434b4-SW
          location_id: 18YC4JDH91E1H
          transaction_id: KnL67ZIwXCPtzOrqj0HrkxMF
          tender_id: MtZRYYdDrYNQbOvV7nbuBvMF
          created_at: 2016-02-12T00:28:18Z
          reason: some reason
          amount_money:
            amount: 100
            currency: USD
          additional_recipients:
          - location_id: 057P5VYJ4A5X1
            description: Application fees
            amount_money:
              amount: 10
              currency: USD
            receivable_id: ISu5xwxJ5v0CMJTQq7RvqyMF
          status: PENDING
      x-release-status: DEPRECATED
      x-sq-sdk-sample-code:
        python: /sdk_samples/CreateRefund/CreateRefundResponse.python
        csharp: /sdk_samples/CreateRefund/CreateRefundResponse.csharp
        java: /sdk_samples/CreateRefund/CreateRefundResponse.java
        php: /sdk_samples/CreateRefund/CreateRefundResponse.php
        javascript: /sdk_samples/CreateRefund/CreateRefundResponse.javascript
        ruby: /sdk_samples/CreateRefund/CreateRefundResponse.ruby
    CreateShiftRequest:
      required:
      - shift
      type: object
      properties:
        idempotency_key:
          maxLength: 128
          type: string
          description: Unique string value to insure the idempotency of the operation.
        shift:
          $ref: '#/components/schemas/Shift'
      description: Represents a request to create a `Shift`
      example:
        idempotency_key: HIDSNG5KS478L
        shift:
          team_member_id: ormj0jJJZ5OZIzxrZYJI
          location_id: PAA1RJZZKXBFG
          start_at: 2019-01-25T03:11:00-05:00
          end_at: 2019-01-25T13:11:00-05:00
          wage:
            title: Barista
            hourly_rate:
              amount: 1100
              currency: USD
          breaks:
          - start_at: 2019-01-25T06:11:00-05:00
            end_at: 2019-01-25T06:16:00-05:00
            break_type_id: REGS1EQR1TPZ5
            name: Tea Break
            expected_duration: PT5M
            is_paid: true
      x-release-status: PUBLIC
    CreateShiftResponse:
      type: object
      properties:
        shift:
          $ref: '#/components/schemas/Shift'
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: |-
        The response to the request to create a `Shift`. Contains
        the created `Shift` object. May contain a set of `Error` objects if
        the request resulted in errors.
      example:
        shift:
          id: K0YH4CV5462JB
          team_member_id: ormj0jJJZ5OZIzxrZYJI
          employee_id: ormj0jJJZ5OZIzxrZYJI
          location_id: PAA1RJZZKXBFG
          timezone: America/New_York
          start_at: 2019-01-25T03:11:00-05:00
          end_at: 2019-01-25T13:11:00-05:00
          wage:
            title: Barista
            hourly_rate:
              amount: 1100
              currency: USD
          breaks:
          - id: X7GAQYVVRRG6P
            start_at: 2019-01-25T06:11:00-05:00
            end_at: 2019-01-25T06:16:00-05:00
            break_type_id: REGS1EQR1TPZ5
            name: Tea Break
            expected_duration: PT5M
            is_paid: true
          status: CLOSED
          version: 1
          created_at: 2019-02-28T00:39:02Z
          updated_at: 2019-02-28T00:39:02Z
      x-release-status: PUBLIC
    CreateSubscriptionRequest:
      required:
      - customer_id
      - idempotency_key
      - location_id
      - plan_id
      type: object
      properties:
        idempotency_key:
          minLength: 1
          type: string
          description: |-
            A unique string that identifies this `CreateSubscription` request.
            If you do not provide a unique string (or provide an empty string as the value),
            the endpoint treats each request as independent.

            For more information, see [Idempotency keys](https://developer.squareup.com/docs/docs/working-with-apis/idempotency).
        location_id:
          minLength: 1
          type: string
          description: The ID of the location the subscription is associated with.
        plan_id:
          minLength: 1
          type: string
          description: "The ID of the subscription plan. For more information, see\
            \ \n[Subscription Plan Overview](https://developer.squareup.com/docs/docs/subscriptions/overview)."
        customer_id:
          minLength: 1
          type: string
          description: The ID of the [customer](#type-customer) profile.
        start_date:
          type: string
          description: "The start date of the subscription, in YYYY-MM-DD format.\
            \ For example,\n2013-01-15. If the start date is left empty, the subscription\
            \ begins \nimmediately."
        canceled_date:
          type: string
          description: "The date when the subscription should be canceled, in \nYYYY-MM-DD\
            \ format (for example, 2025-02-29). This overrides the plan configuration\
            \ \nif it comes before the date the subscription would otherwise end."
        tax_percentage:
          maxLength: 10
          type: string
          description: |-
            The tax to add when billing the subscription.
            The percentage is expressed in decimal form, using a `'.'` as the decimal
            separator and without a `'%'` sign. For example, a value of 7.5
            corresponds to 7.5%.
        price_override_money:
          $ref: '#/components/schemas/Money'
        card_id:
          type: string
          description: |-
            The ID of the [customer](#type-customer) [card](#type-card) to charge.
            If not specified, Square sends an invoice via email. For an example to
            create a customer and add a card on file, see [Subscriptions Walkthrough](https://developer.squareup.com/docs/docs/subscriptions-api/walkthrough).
        timezone:
          type: string
          description: |-
            The timezone that is used in date calculations for the subscription. If unset, defaults to
            the location timezone. If a timezone is not configured for the location, defaults to "America/New_York".
            Format: the IANA Timezone Database identifier for the location timezone. For
            a list of time zones, see [List of tz database time zones](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).
      description: "Defines parameters in a \n[CreateSubscription](#endpoint-subscriptions-createsubscription)\
        \ endpoint request."
      example:
        idempotency_key: 8193148c-9586-11e6-99f9-28cfe92138cf
        location_id: S8GWD5R9QB376
        plan_id: 6JHXF3B2CW3YKHDV4XEM674H
        customer_id: CHFGVKYY8RSV93M5KCYTG4PN0G
        card_id: ccof:qy5x8hHGYsgLrp4Q4GB
        start_date: 2020-08-01
        tax_percentage: "5"
        price_override_money:
          amount: 100
          currency: USD
        timezone: America/Los_Angeles
      x-release-status: BETA
    CreateSubscriptionResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information about errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
        subscription:
          $ref: '#/components/schemas/Subscription'
      description: |-
        Defines the fields that are included in the response from the
        [CreateSubscription](#endpoint-subscriptions-createsubscription) endpoint.
      example:
        subscription:
          id: 56214fb2-cc85-47a1-93bc-44f3766bb56f
          location_id: S8GWD5R9QB376
          plan_id: 6JHXF3B2CW3YKHDV4XEM674H
          customer_id: CHFGVKYY8RSV93M5KCYTG4PN0G
          start_date: 2020-08-01
          status: PENDING
          tax_percentage: "5"
          price_override_money:
            amount: 100
            currency: USD
          version: 1594155459464
          created_at: 2020-08-03T21:53:10Z
          card_id: ccof:qy5x8hHGYsgLrp4Q4GB
          timezone: America/Los_Angeles
      x-release-status: BETA
    CreateTeamMemberRequest:
      type: object
      properties:
        idempotency_key:
          type: string
          description: |-
            A unique string that identifies this CreateTeamMember request.
            Keys can be any valid string but must be unique for every request.
            See [Idempotency keys](https://developer.squareup.com/docs/basics/api101/idempotency) for more information.
            <br>
            <b>Min Length 1    Max Length 45</b>
        team_member:
          $ref: '#/components/schemas/TeamMember'
      description: Represents a create request for a `TeamMember` object.
      example:
        idempotency_key: idempotency-key-0
        team_member:
          reference_id: reference_id_1
          status: ACTIVE
          given_name: Joe
          family_name: Doe
          email_address: joe_doe@gmail.com
          phone_number: +14159283333
          assigned_locations:
            location_ids:
            - YSGH2WBKG94QZ
            - GA2Y9HSJ8KRYT
            assignment_type: EXPLICIT_LOCATIONS
      x-release-status: PUBLIC
    CreateTeamMemberResponse:
      type: object
      properties:
        team_member:
          $ref: '#/components/schemas/TeamMember'
        errors:
          type: array
          description: The errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: Represents a response from a create request, containing the created
        `TeamMember` object or error messages.
      example:
        team_member:
          id: 1yJlHapkseYnNPETIU1B
          reference_id: reference_id_1
          is_owner: false
          status: ACTIVE
          given_name: Joe
          family_name: Doe
          email_address: joe_doe@gmail.com
          phone_number: +14159283333
          assigned_locations:
            assignment_type: EXPLICIT_LOCATIONS
            location_ids:
            - GA2Y9HSJ8KRYT
            - YSGH2WBKG94QZ
      x-release-status: PUBLIC
    CreateTerminalCheckoutRequest:
      required:
      - checkout
      - idempotency_key
      type: object
      properties:
        idempotency_key:
          maxLength: 64
          minLength: 1
          type: string
          description: |-
            A unique string that identifies this CreateCheckout request. Keys can be any valid string but
            must be unique for every CreateCheckout request.

            See [Idempotency keys](https://developer.squareup.com/docs/basics/api101/idempotency) for more information.
        checkout:
          $ref: '#/components/schemas/TerminalCheckout'
      example:
        idempotency_key: 28a0c3bc-7839-11ea-bc55-0242ac130003
        checkout:
          amount_money:
            amount: 2610
            currency: USD
          reference_id: id11572
          device_options:
            device_id: dbb5d83a-7838-11ea-bc55-0242ac130003
          note: A brief note
      x-release-status: BETA
    CreateTerminalCheckoutResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
        checkout:
          $ref: '#/components/schemas/TerminalCheckout'
      example:
        checkout:
          id: 08YceKh7B3ZqO
          amount_money:
            amount: 2610
            currency: USD
          reference_id: id11572
          note: A brief note
          device_options:
            device_id: dbb5d83a-7838-11ea-bc55-0242ac130003
            tip_settings:
              allow_tipping: false
            skip_receipt_screen: false
          status: PENDING
          created_at: 2020-04-06T16:39:32.545Z
          updated_at: 2020-04-06T16:39:32.545Z
          app_id: APP_ID
          deadline_duration: PT10M
      x-release-status: BETA
    CustomAttributeFilter:
      type: object
      properties:
        custom_attribute_definition_id:
          type: string
          description: "A query expression to filter items or item variations by matching\
            \ their custom attributes' \n`custom_attribute_definition_id`  \nproperty\
            \ value against the the specified id."
        key:
          type: string
          description: "A query expression to filter items or item variations by matching\
            \ their custom attributes'\n`key` property value against \nthe specified\
            \ key."
        string_filter:
          type: string
          description: "A query expression to filter items or item variations by matching\
            \ their custom attributes' \n`string_value`  property value \nagainst\
            \ the specified text."
        number_filter:
          $ref: '#/components/schemas/Range'
        selection_uids_filter:
          type: array
          description: "A query expression to filter items or item variations by matching\
            \  their custom attributes' \n`selection_uid_values` \nvalues against\
            \ the specified selection uids."
          items:
            type: string
        bool_filter:
          type: boolean
          description: "A query expression to filter items or item variations by matching\
            \ their custom attributes'\n`boolean_value` property values \nagainst\
            \ the specified Boolean expression."
      description: "Supported custom attribute query expressions for calling the \n\
        [SearchCatalogItems](#endpoint-Catalog-SearchCatalogItems) \nendpoint to search\
        \ for items or item variations."
      x-release-status: BETA
    Customer:
      type: object
      properties:
        id:
          type: string
          description: A unique Square-assigned ID for the customer profile.
        created_at:
          type: string
          description: The timestamp when the customer profile was created, in RFC
            3339 format.
        updated_at:
          type: string
          description: The timestamp when the customer profile was last updated, in
            RFC 3339 format.
        cards:
          type: array
          description: Payment details of cards stored on file for the customer profile.
          items:
            $ref: '#/components/schemas/Card'
        given_name:
          type: string
          description: The given (i.e., first) name associated with the customer profile.
        family_name:
          type: string
          description: The family (i.e., last) name associated with the customer profile.
        nickname:
          type: string
          description: A nickname for the customer profile.
        company_name:
          type: string
          description: A business name associated with the customer profile.
        email_address:
          type: string
          description: The email address associated with the customer profile.
        address:
          $ref: '#/components/schemas/Address'
        phone_number:
          type: string
          description: The 11-digit phone number associated with the customer profile.
        birthday:
          type: string
          description: |-
            The birthday associated with the customer profile, in RFC-3339 format.
            Year is optional, timezone and times are not allowed.
            For example: `0000-09-01T00:00:00-00:00` indicates a birthday on September 1st.
            `1998-09-01T00:00:00-00:00` indications a birthday on September 1st __1998__.
        reference_id:
          type: string
          description: |-
            An optional, second ID used to associate the customer profile with an
            entity in another system.
        note:
          type: string
          description: A custom note associated with the customer profile.
        preferences:
          $ref: '#/components/schemas/CustomerPreferences'
        groups:
          type: array
          description: The customer groups and segments the customer belongs to. This
            deprecated field has been replaced with  the dedicated `group_ids` for
            customer groups and the dedicated `segment_ids` field for customer segments.
            You can retrieve information about a given customer group and segment
            respectively using the Customer Groups API and Customer Segments API.
          items:
            $ref: '#/components/schemas/CustomerGroupInfo'
          x-release-status: DEPRECATED
        creation_source:
          $ref: '#/components/schemas/CustomerCreationSource'
        group_ids:
          type: array
          description: The IDs of customer groups the customer belongs to.
          items:
            type: string
          x-release-status: BETA
        segment_ids:
          type: array
          description: The IDs of segments the customer belongs to.
          items:
            type: string
          x-release-status: BETA
      description: |-
        Represents a Square customer profile, which can have one or more
        cards on file associated with it.
      x-release-status: PUBLIC
    CustomerCreationSourceFilter:
      type: object
      properties:
        values:
          type: array
          description: |-
            The list of creation sources used as filtering criteria.
            See [CustomerCreationSource](#type-customercreationsource) for possible values
          items:
            $ref: '#/components/schemas/CustomerCreationSource'
        rule:
          $ref: '#/components/schemas/CustomerInclusionExclusion'
      description: |-
        Creation source filter.

        If one or more creation sources are set, customer profiles are included in,
        or excluded from, the result if they match at least one of the filter
        criteria.
      x-release-status: PUBLIC
    CustomerFilter:
      type: object
      properties:
        creation_source:
          $ref: '#/components/schemas/CustomerCreationSourceFilter'
        created_at:
          $ref: '#/components/schemas/TimeRange'
        updated_at:
          $ref: '#/components/schemas/TimeRange'
        email_address:
          $ref: '#/components/schemas/CustomerTextFilter'
        phone_number:
          $ref: '#/components/schemas/CustomerTextFilter'
        reference_id:
          $ref: '#/components/schemas/CustomerTextFilter'
        group_ids:
          $ref: '#/components/schemas/FilterValue'
      description: |-
        Represents a set of `CustomerQuery` filters used to limit the set of
        `Customers` returned by `SearchCustomers`.
      x-release-status: PUBLIC
    CustomerGroup:
      required:
      - name
      type: object
      properties:
        id:
          maxLength: 255
          type: string
          description: Unique Square-generated ID for the customer group.
          readOnly: true
        name:
          type: string
          description: Name of the customer group.
        created_at:
          type: string
          description: The timestamp when the customer group was created, in RFC 3339
            format.
          readOnly: true
        updated_at:
          type: string
          description: The timesamp when the customer group was last updated, in RFC
            3339 format.
          readOnly: true
      description: "Represents a group of customer profiles. \n\nCustomer groups can\
        \ be created, modified, and have their membership defined either via \nthe\
        \ Customers API or within Customer Directory in the Square Dashboard or Point\
        \ of Sale."
      x-release-status: BETA
    CustomerGroupInfo:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: string
          description: The ID of the Customer Group.
        name:
          type: string
          description: The name of the Customer Group.
      description: Contains some brief information about a Customer Group with its
        identifier included.
      x-release-status: PUBLIC
    CustomerPreferences:
      type: object
      properties:
        email_unsubscribed:
          type: boolean
          description: The customer has unsubscribed from receiving marketing campaign
            emails.
      description: Represents communication preferences for the customer profile.
      x-release-status: PUBLIC
    CustomerQuery:
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/CustomerFilter'
        sort:
          $ref: '#/components/schemas/CustomerSort'
      description: |-
        Represents a query (including filtering criteria, sorting criteria, or both) used to search
        for customer profiles.
      x-release-status: PUBLIC
    CustomerSegment:
      required:
      - name
      type: object
      properties:
        id:
          maxLength: 255
          type: string
          description: Unique Square-generated ID for the segment.
          readOnly: true
        name:
          type: string
          description: Name of the segment.
          readOnly: true
        created_at:
          type: string
          description: The timestamp when the segment was created, in RFC 3339 format.
          readOnly: true
        updated_at:
          type: string
          description: The timestamp when the segment was last updated, in RFC 3339
            format.
          readOnly: true
      description: "Represents a group of customer profiles that match one or more\
        \ predefined filter criteria. \n\nSegments (also known as Smart Groups) are\
        \ defined and created within Customer Directory in the Square Dashboard or\
        \ Point of Sale."
      x-release-status: BETA
    CustomerSort:
      type: object
      properties:
        field:
          $ref: '#/components/schemas/CustomerSortField'
        order:
          $ref: '#/components/schemas/SortOrder'
      description: Specifies how searched customers profiles are sorted, including
        the sort key and sort order.
      x-release-status: PUBLIC
    CustomerTextFilter:
      type: object
      properties:
        exact:
          type: string
          description: Use the exact filter to select customers whose attributes match
            exactly the specified query.
        fuzzy:
          type: string
          description: "Use the fuzzy filter to select customers whose attributes\
            \ match the specified query \nin a fuzzy manner. When the fuzzy option\
            \ is used, search queries are tokenized, and then \neach query token must\
            \ be matched somewhere in the searched attribute. For single token queries,\
            \ \nthis is effectively the same behavior as a partial match operation."
      description: "A filter to select customers based on exact or fuzzy matching\
        \ of\ncustomer attributes against a specified query. Depending on customer\
        \ attributes, \nthe filter can be case sensitive. This filter can be either\
        \ exact or fuzzy. It cannot be both."
      x-release-status: BETA
    DateRange:
      type: object
      properties:
        start_date:
          type: string
          description: |-
            String in `YYYY-MM-DD` format, e.g. `2017-10-31` per the ISO 8601
            extended format for calendar dates.
            The beginning of a date range (inclusive)
        end_date:
          type: string
          description: |-
            String in `YYYY-MM-DD` format, e.g. `2017-10-31` per the ISO 8601
            extended format for calendar dates.
            The end of a date range (inclusive)
      description: |-
        A range defined by two dates. Used for filtering a query for Connect v2
        objects that have date properties.
      x-release-status: PUBLIC
    DeleteBreakTypeRequest:
      type: object
      properties: {}
      description: A request to delete a `BreakType`
      x-release-status: PUBLIC
    DeleteBreakTypeResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: "The response to a request to delete a `BreakType`. May contain\
        \ a set \nof `Error` objects if the request resulted in errors."
      example: {}
      x-release-status: PUBLIC
    DeleteCatalogObjectRequest:
      type: object
      properties: {}
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectRequest.python
        csharp: /sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectRequest.csharp
        java: /sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectRequest.java
        php: /sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectRequest.php
        javascript: /sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectRequest.javascript
        ruby: /sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectRequest.ruby
    DeleteCatalogObjectResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on any errors encountered.
          items:
            $ref: '#/components/schemas/Error'
        deleted_object_ids:
          type: array
          description: |-
            The IDs of all catalog objects deleted by this request.
            Multiple IDs may be returned when associated objects are also deleted, for example
            a catalog item variation will be deleted (and its ID included in this field)
            when its parent catalog item is deleted.
          items:
            type: string
        deleted_at:
          type: string
          description: |-
            The database [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
            of this deletion in RFC 3339 format, e.g., `2016-09-04T23:59:33.123Z`.
      example:
        deleted_object_ids:
        - 7SB3ZQYJ5GDMVFL7JK46JCHT
        - KQLFFHA6K6J3YQAQAWDQAL57
        deleted_at: 2016-11-16T22:25:24.878Z
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectResponse.python
        csharp: /sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectResponse.csharp
        java: /sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectResponse.java
        php: /sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectResponse.php
        javascript: /sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectResponse.javascript
        ruby: /sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectResponse.ruby
    DeleteCustomerCardRequest:
      type: object
      properties: {}
      description: |-
        Defines the fields that are included in requests to the
        DeleteCustomerCard endpoint.
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.python
        csharp: /sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.csharp
        java: /sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.java
        php: /sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.php
        javascript: /sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.javascript
        ruby: /sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.ruby
    DeleteCustomerCardResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: |-
        Defines the fields that are included in the response body of
        a request to the DeleteCustomerCard endpoint.
      example: {}
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.python
        csharp: /sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.csharp
        java: /sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.java
        php: /sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.php
        javascript: /sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.javascript
        ruby: /sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.ruby
    DeleteCustomerGroupRequest:
      type: object
      properties: {}
      description: |-
        Defines the fields that can be provided in a request to the
        [DeleteCustomerGroup](#endpoint-deletecustomergroup) endpoint.
      example: {}
      x-release-status: BETA
    DeleteCustomerGroupResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: |-
        Defines the fields that are included in the response body of
        a request to the [DeleteCustomerGroup](#endpoint-deletecustomergroup) endpoint.
      example: {}
      x-release-status: BETA
    DeleteCustomerRequest:
      type: object
      properties: {}
      description: |-
        Defines the fields that are included in a request to the DeleteCustomer
        endpoint.
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/DeleteCustomer/DeleteCustomerRequest.python
        csharp: /sdk_samples/DeleteCustomer/DeleteCustomerRequest.csharp
        java: /sdk_samples/DeleteCustomer/DeleteCustomerRequest.java
        php: /sdk_samples/DeleteCustomer/DeleteCustomerRequest.php
        javascript: /sdk_samples/DeleteCustomer/DeleteCustomerRequest.javascript
        ruby: /sdk_samples/DeleteCustomer/DeleteCustomerRequest.ruby
    DeleteCustomerResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: |-
        Defines the fields that are included in the response body of
        a request to the DeleteCustomer endpoint.
      example: {}
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/DeleteCustomer/DeleteCustomerResponse.python
        csharp: /sdk_samples/DeleteCustomer/DeleteCustomerResponse.csharp
        java: /sdk_samples/DeleteCustomer/DeleteCustomerResponse.java
        php: /sdk_samples/DeleteCustomer/DeleteCustomerResponse.php
        javascript: /sdk_samples/DeleteCustomer/DeleteCustomerResponse.javascript
        ruby: /sdk_samples/DeleteCustomer/DeleteCustomerResponse.ruby
    DeleteInvoiceRequest:
      type: object
      properties:
        version:
          minimum: 0
          type: integer
          description: "The version of the [invoice](#type-invoice) to delete.\nIf\
            \ you do not know the version, you can call [GetInvoice](#endpoint-Invoices-GetInvoice)\
            \ or \n[ListInvoices](#endpoint-Invoices-ListInvoices)."
      description: Describes a `DeleteInvoice` request.
      x-release-status: BETA
    DeleteInvoiceResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information about errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: Describes a `DeleteInvoice` response.
      example:
        errors:
        - code: INTERNAL_SERVER_ERROR
          field: field
          detail: detail
          category: API_ERROR
        - code: INTERNAL_SERVER_ERROR
          field: field
          detail: detail
          category: API_ERROR
      x-release-status: BETA
    DeleteLoyaltyRewardRequest:
      type: object
      properties: {}
      description: A request to delete a loyalty reward.
      x-release-status: BETA
      x-params-example: ?reward_id=9f18ac21-233a-31c3-be77-b45840f5a810
    DeleteLoyaltyRewardResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: A response returned by the API call.
      example: {}
      x-release-status: BETA
    DeleteShiftRequest:
      type: object
      properties: {}
      description: A request to delete a `Shift`
      x-release-status: PUBLIC
    DeleteShiftResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: "The response to a request to delete a `Shift`. May contain a set\
        \ of \n`Error` objects if the request resulted in errors."
      example: {}
      x-release-status: PUBLIC
    Device:
      type: object
      properties:
        id:
          type: string
          description: The device's Square-issued ID.
        name:
          type: string
          description: The device's merchant-specified name.
      example:
        name: name
        id: id
      x-release-status: DEPRECATED
    DeviceCheckoutOptions:
      required:
      - device_id
      type: object
      properties:
        device_id:
          type: string
          description: |-
            The unique Id of the device intended for this `TerminalCheckout`.
            The Id can be retrieved from /v2/devices api.
        skip_receipt_screen:
          type: boolean
          description: Instruct the device to skip the receipt screen. Defaults to
            false.
        tip_settings:
          $ref: '#/components/schemas/TipSettings'
      x-release-status: BETA
    DeviceCode:
      required:
      - product_type
      type: object
      properties:
        id:
          type: string
          description: The unique id for this device code.
          readOnly: true
        name:
          maxLength: 128
          type: string
          description: An optional user-defined name for the device code.
        code:
          type: string
          description: The unique code that can be used to login.
          readOnly: true
        device_id:
          type: string
          description: The unique id of the device that used this code. Populated
            when the device is paired up.
          readOnly: true
        product_type:
          $ref: '#/components/schemas/ProductType'
        location_id:
          maxLength: 50
          type: string
          description: The location assigned to this code.
        status:
          $ref: '#/components/schemas/DeviceCodeStatus'
        pair_by:
          type: string
          description: When this DeviceCode will expire and no longer login. Timestamp
            in RFC 3339 format.
          readOnly: true
        created_at:
          type: string
          description: When this DeviceCode was created. Timestamp in RFC 3339 format.
          readOnly: true
        status_changed_at:
          type: string
          description: When this DeviceCode's status was last changed. Timestamp in
            RFC 3339 format.
          readOnly: true
        paired_at:
          type: string
          description: When this DeviceCode was paired. Timestamp in RFC 3339 format.
          readOnly: true
      x-release-status: BETA
    DeviceCodePairedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        location_id:
          type: string
          description: The ID of the target location associated with the event.
        type:
          type: string
          description: The type of event this represents, `"device.code.paired"`.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: RFC 3339 timestamp of when the webhook event was created.
        data:
          $ref: '#/components/schemas/DeviceCodePairedWebhookData'
      description: |-
        Published when a Square Terminal has been paired with a
        Terminal API client and the device_id of the paired Square Terminal is
        available.
      example:
        merchant_id: 7NZR58EPNGNPC
        location_id: AR63EC48VXVBN
        type: device.code.paired
        event_id: 84ccdb8a-da90-4b14-b6b0-c5a5abbccfe6
        created_at: 2020-04-10T14:41:58.036Z
        data:
          type: device.code
          id: 05NK80TRSC2ZF
          object:
            device_code:
              code: ABCDEF
              created_at: 2020-04-10T14:41:20.000Z
              device_id: 907CS13101300122
              id: 05NK80TRSC2ZF
              location_id: AR63EC48VXVBN
              name: Terminal API Device created on Apr 10, 2020
              paired_at: 2020-04-10T14:41:50.000Z
              product_type: TERMINAL_API
              status: PAIRED
              status_changed_at: 2020-04-10T14:41:50.000Z
      x-release-status: BETA
      x-visibility: DOC_ONLY
      x-webhook:
        event: device.code.paired
        scopes:
        - DEVICE_CREDENTIAL_MANAGEMENT
      x-api: '#/components/x-apis/Devices'
      x-since: 2020-04-22
    DeviceCodePairedWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the paired object’s type, `"device.code"`.
        id:
          type: string
          description: ID of the paired device code.
        object:
          $ref: '#/components/schemas/DeviceCodePairedWebhookObject'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    DeviceCodePairedWebhookObject:
      type: object
      properties:
        device_code:
          $ref: '#/components/schemas/DeviceCode'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    DeviceDetails:
      type: object
      properties:
        device_id:
          maxLength: 255
          type: string
          description: Square-issued ID of the device.
        device_installation_id:
          maxLength: 255
          type: string
          description: Square-issued installation ID for the device.
        device_name:
          maxLength: 255
          type: string
          description: The name of the device set by the merchant.
      description: Details about the device that took the payment.
      x-release-status: PUBLIC
    Dispute:
      type: object
      properties:
        dispute_id:
          maxLength: 40
          minLength: 1
          type: string
          description: Unique ID for this `Dispute`, generated by Square.
        amount_money:
          $ref: '#/components/schemas/Money'
        reason:
          $ref: '#/components/schemas/DisputeReason'
        state:
          $ref: '#/components/schemas/DisputeState'
        due_at:
          maxLength: 40
          minLength: 1
          type: string
          description: The time when the next action is due, in RFC 3339 format.
        disputed_payment:
          $ref: '#/components/schemas/DisputedPayment'
        evidence_ids:
          type: array
          description: The IDs of the evidence associated with the dispute.
          items:
            maxLength: 40
            minLength: 1
            type: string
        card_brand:
          $ref: '#/components/schemas/CardBrand'
        created_at:
          maxLength: 40
          minLength: 1
          type: string
          description: Timestamp when the dispute was created, in RFC 3339 format.
          readOnly: true
        updated_at:
          maxLength: 40
          minLength: 1
          type: string
          description: Timestamp when dispute was last updated, in RFC 3339 format.
          readOnly: true
        brand_dispute_id:
          maxLength: 40
          minLength: 1
          type: string
          description: ID of the dispute in the card brand system, generated by the
            card brand.
        reported_date:
          maxLength: 40
          minLength: 1
          type: string
          description: Timestamp when the dispute was reported, in RFC 3339 format.
        version:
          type: integer
          description: The current version of the `Dispute`.
        location_id:
          maxLength: 40
          minLength: 1
          type: string
          description: The ID of location where dispute originated.
      description: Represents a dispute a cardholder initiated with their bank.
      x-release-status: BETA
    DisputeCreatedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        location_id:
          type: string
          description: The ID of the target location associated with the event.
        type:
          type: string
          description: The type of event this represents.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/DisputeCreatedWebhookData'
      description: Published when a [Dispute](#type-Dispute) is created.
      example:
        merchant_id: 0HPGX5JYE6EE1
        location_id: VJDQQP3CG14EY
        type: dispute.created
        event_id: ce8464b5-6628-4ac2-9264-e06c34df3e82
        created_at: 2020-02-19T21:24:53.258Z
        data:
          type: dispute
          id: ORSEVtZAJxb37RA1EiGw
          object:
            dispute:
              amount_money:
                amount: 8801
                currency: USD
              brand_dispute_id: r9rKGSBBQbywBNnWWIiGFg
              card_brand: VISA
              created_at: 2020-02-19T21:24:53.258Z
              dispute_id: ORSEVtZAJxb37RA1EiGw
              disputed_payment:
                payment_id: fbmsaEOpoARDKxiSGH1fqPuqoqFZY
              due_at: 2020-03-04T00:00:00.000Z
              location_id: VJDQQP3CG14EY
              reason: AMOUNT_DIFFERS
              reported_date: 2020-02-19T00:00:00.000Z
              state: EVIDENCE_REQUIRED
              updated_at: 2020-02-19T21:24:53.258Z
      x-release-status: BETA
      x-visibility: DOC_ONLY
      x-webhook:
        event: dispute.created
        scopes:
        - PAYMENTS_READ
      x-api: '#/components/x-apis/Disputes'
      x-since: 2020-02-26
    DisputeCreatedWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the affected dispute's type.
        id:
          type: string
          description: ID of the affected dispute.
        object:
          $ref: '#/components/schemas/DisputeCreatedWebhookObject'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    DisputeCreatedWebhookObject:
      type: object
      properties:
        object:
          $ref: '#/components/schemas/Dispute'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    DisputeEvidence:
      type: object
      properties:
        evidence_id:
          maxLength: 40
          minLength: 1
          type: string
          description: The Square-generated ID of the evidence.
        dispute_id:
          maxLength: 40
          minLength: 1
          type: string
          description: The ID of the dispute the evidence is associated with.
        uploaded_at:
          maxLength: 40
          minLength: 1
          type: string
          description: The time when the next action is due, in RFC 3339 format.
        evidence_type:
          $ref: '#/components/schemas/DisputeEvidenceType'
      example:
        evidence_type: GENERIC_EVIDENCE
        uploaded_at: uploaded_at
        evidence_id: evidence_id
        dispute_id: dispute_id
      x-release-status: BETA
    DisputeEvidenceAddedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        location_id:
          type: string
          description: The ID of the target location associated with the event.
        type:
          type: string
          description: The type of event this represents.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/DisputeEvidenceAddedWebhookData'
      description: |-
        Published when evidence is added to a [Dispute](#type-Dispute)
        from the Disputes Dashboard in the Seller Dashboard, the Square Point of Sale app,
        or by calling [CreateDisputeEvidence](#endpoint-Disputes-CreateDisputeEvidence).
      example:
        merchant_id: 0HPGX5JYE6EE1
        location_id: VJDQQP3CG14EY
        type: dispute.evidence.added
        event_id: 6f606f30-53d0-495a-87f0-958576fc954f
        created_at: 2020-02-19T21:27:28.851Z
        data:
          type: dispute
          id: ORSEVtZAJxb37RA1EiGw
          object:
            dispute:
              amount_money:
                amount: 8801
                currency: USD
              brand_dispute_id: r9rKGSBBQbywBNnWWIiGFg
              card_brand: VISA
              created_at: 2020-02-19T21:24:53.258Z
              dispute_id: ORSEVtZAJxb37RA1EiGw
              disputed_payment:
                payment_id: fbmsaEOpoARDKxiSGH1fqPuqoqFZY
              due_at: 2020-03-04T00:00:00.000Z
              evidence_ids:
              - oThqMsDS9bM0LdjZzVB4qB
              location_id: VJDQQP3CG14EY
              reason: AMOUNT_DIFFERS
              reported_date: 2020-02-19T00:00:00.000Z
              state: EVIDENCE_REQUIRED
              updated_at: 2020-02-19T21:27:28.851Z
              version: 2
      x-release-status: BETA
      x-visibility: DOC_ONLY
      x-webhook:
        event: dispute.evidence.added
        scopes:
        - PAYMENTS_READ
      x-api: '#/components/x-apis/Disputes'
      x-since: 2020-02-26
    DisputeEvidenceAddedWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the affected dispute's type.
        id:
          type: string
          description: ID of the affected dispute.
        object:
          $ref: '#/components/schemas/DisputeEvidenceAddedWebhookObject'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    DisputeEvidenceAddedWebhookObject:
      type: object
      properties:
        object:
          $ref: '#/components/schemas/Dispute'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    DisputeEvidenceFile:
      type: object
      properties:
        filename:
          maxLength: 40
          minLength: 1
          type: string
          description: 'The file name including the file extension. For example: "receipt.tiff".'
        filetype:
          maxLength: 40
          minLength: 1
          type: string
          description: Dispute evidence files must one of application/pdf, image/heic,
            image/heif, image/jpeg, image/png, image/tiff formats.
      description: A file to be uploaded as dispute evidence.
      x-release-status: BETA
    DisputeEvidenceRemovedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        location_id:
          type: string
          description: The ID of the target location associated with the event.
        type:
          type: string
          description: The type of event this represents.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/DisputeEvidenceRemovedWebhookData'
      description: |-
        Published when evidence is removed from a [Dispute](#type-Dispute)
        from the Disputes Dashboard in the Seller Dashboard, the Square Point of Sale app,
        or by calling [RemoveDisputeEvidence](#endpoint-Disputes-RemoveDisputeEvidence).
      example:
        merchant_id: 0HPGX5JYE6EE1
        location_id: VJDQQP3CG14EY
        type: dispute.evidence.removed
        event_id: e3fd10cc-953b-4f97-83cd-d5b7fa799a8c
        created_at: 2020-02-19T21:31:55.186Z
        data:
          type: dispute
          id: ORSEVtZAJxb37RA1EiGw
          object:
            dispute:
              amount_money:
                amount: 8801
                currency: USD
              brand_dispute_id: r9rKGSBBQbywBNnWWIiGFg
              card_brand: VISA
              created_at: 2020-02-19T21:24:53.258Z
              dispute_id: ORSEVtZAJxb37RA1EiGw
              disputed_payment:
                payment_id: fbmsaEOpoARDKxiSGH1fqPuqoqFZY
              due_at: 2020-03-04T00:00:00.000Z
              location_id: VJDQQP3CG14EY
              reason: AMOUNT_DIFFERS
              reported_date: 2020-02-19T00:00:00.000Z
              state: EVIDENCE_REQUIRED
              updated_at: 2020-02-19T21:31:55.186Z
              version: 3
      x-release-status: BETA
      x-visibility: DOC_ONLY
      x-webhook:
        event: dispute.evidence.removed
        scopes:
        - PAYMENTS_READ
      x-api: '#/components/x-apis/Disputes'
      x-since: 2020-02-26
    DisputeEvidenceRemovedWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the affected dispute's type.
        id:
          type: string
          description: ID of the affected dispute.
        object:
          $ref: '#/components/schemas/DisputeEvidenceRemovedWebhookObject'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    DisputeEvidenceRemovedWebhookObject:
      type: object
      properties:
        object:
          $ref: '#/components/schemas/Dispute'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    DisputeStateChangedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        location_id:
          type: string
          description: The ID of the target location associated with the event.
        type:
          type: string
          description: The type of event this represents.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/DisputeStateChangedWebhookData'
      description: |-
        Published when the state of a [Dispute](#type-Dispute) changes.
        This includes the dispute resolution (WON, LOST) reported by the bank. The event
        data includes details of what changed.
      example:
        merchant_id: 0HPGX5JYE6EE1
        location_id: VJDQQP3CG14EY
        type: dispute.state.changed
        event_id: e89ff114-1972-4be0-9481-a621f2385fff
        created_at: 2020-02-19T21:34:41.851Z
        data:
          type: dispute
          id: ORSEVtZAJxb37RA1EiGw
          object:
            dispute:
              amount_money:
                amount: 8801
                currency: USD
              brand_dispute_id: r9rKGSBBQbywBNnWWIiGFg
              card_brand: VISA
              created_at: 2020-02-19T21:24:53.258Z
              dispute_id: ORSEVtZAJxb37RA1EiGw
              disputed_payment:
                payment_id: fbmsaEOpoARDKxiSGH1fqPuqoqFZY
              due_at: 2020-03-04T00:00:00.000Z
              evidence_ids:
              - Vjq6LG8b95cnnq1AoG5bP
              location_id: VJDQQP3CG14EY
              reason: AMOUNT_DIFFERS
              reported_date: 2020-02-19T00:00:00.000Z
              state: WON
              updated_at: 2020-02-19T21:34:41.851Z
              version: 6
      x-release-status: BETA
      x-visibility: DOC_ONLY
      x-webhook:
        event: dispute.state.changed
        scopes:
        - PAYMENTS_READ
      x-api: '#/components/x-apis/Disputes'
      x-since: 2020-02-26
    DisputeStateChangedWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the affected dispute's type.
        id:
          type: string
          description: ID of the affected dispute.
        object:
          $ref: '#/components/schemas/DisputeStateChangedWebhookObject'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    DisputeStateChangedWebhookObject:
      type: object
      properties:
        object:
          $ref: '#/components/schemas/Dispute'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    DisputedPayment:
      type: object
      properties:
        payment_id:
          maxLength: 192
          minLength: 1
          type: string
          description: Square-generated unique ID of the payment being disputed.
      description: The payment the cardholder disputed.
      x-release-status: BETA
    Employee:
      type: object
      properties:
        id:
          type: string
          description: UUID for this object.
        first_name:
          type: string
          description: The employee's first name.
        last_name:
          type: string
          description: The employee's last name.
        email:
          type: string
          description: The employee's email address
        phone_number:
          type: string
          description: The employee's phone number in E.164 format, i.e. "+12125554250"
        location_ids:
          type: array
          description: A list of location IDs where this employee has access to.
          items:
            type: string
        status:
          $ref: '#/components/schemas/EmployeeStatus'
        is_owner:
          type: boolean
          description: |-
            Whether this employee is the owner of the merchant. Each merchant
            has one owner employee, and that employee has full authority over
            the account.
        created_at:
          type: string
          description: A read-only timestamp in RFC 3339 format.
          readOnly: true
        updated_at:
          type: string
          description: A read-only timestamp in RFC 3339 format.
          readOnly: true
      description: An employee object that is used by the external API.
      example:
        updated_at: updated_at
        location_ids:
        - location_ids
        - location_ids
        is_owner: true
        last_name: last_name
        created_at: created_at
        phone_number: phone_number
        id: id
        first_name: first_name
        email: email
        status: ACTIVE
      x-release-status: DEPRECATED
    EmployeeWage:
      type: object
      properties:
        id:
          type: string
          description: UUID for this object.
        employee_id:
          type: string
          description: The `Employee` that this wage is assigned to.
        title:
          type: string
          description: The job title that this wage relates to.
        hourly_rate:
          $ref: '#/components/schemas/Money'
      description: |-
        The hourly wage rate that an employee will earn on a `Shift` for doing the job
        specified by the `title` property of this object. Deprecated at verison 2020-08-26. Use `TeamMemberWage` instead.
      x-release-status: DEPRECATED
    Error:
      required:
      - category
      - code
      type: object
      properties:
        category:
          $ref: '#/components/schemas/ErrorCategory'
        code:
          $ref: '#/components/schemas/ErrorCode'
        detail:
          type: string
          description: A human-readable description of the error for debugging purposes.
        field:
          type: string
          description: |-
            The name of the field provided in the original request (if any) that
            the error pertains to.
      description: |-
        Represents an error encountered during a request to the Connect API.

        See [Handling errors](#handlingerrors) for more information.
      example:
        code: INTERNAL_SERVER_ERROR
        field: field
        detail: detail
        category: API_ERROR
      x-release-status: PUBLIC
    FilterValue:
      type: object
      properties:
        all:
          type: array
          description: A list of terms that must be present on the field of the resource.
          items:
            type: string
        any:
          type: array
          description: |-
            A list of terms where at least one of them must be present on the
            field of the resource.
          items:
            type: string
        none:
          type: array
          description: A list of terms that must not be present on the field the resource
          items:
            type: string
      description: |-
        A filter to select resources based on an exact field value. For any given
        value, the value can only be in one property. Depending on the field, either
        all properties can be set or only a subset will be available.

        Refer to the documentation of the field.
      x-release-status: BETA
    GetBankAccountByV1IdRequest:
      type: object
      properties: {}
      description: |-
        Request object for fetching a specific `BankAccount`
        by the object ID.
      x-release-status: PUBLIC
    GetBankAccountByV1IdResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
        bank_account:
          $ref: '#/components/schemas/BankAccount'
      description: Response object returned by GetBankAccountByV1Id.
      example:
        bank_account:
          id: w3yRgCGYQnwmdl0R3GB
          account_number_suffix: "971"
          country: US
          currency: USD
          account_type: CHECKING
          holder_name: Jane Doe
          primary_bank_identification_number: "112200303"
          location_id: S8GWD5example
          status: VERIFICATION_IN_PROGRESS
          creditable: false
          debitable: false
          version: 5
          bank_name: Bank Name
      x-release-status: PUBLIC
    GetBankAccountRequest:
      type: object
      properties: {}
      description: |-
        Request object to fetch a specific `BankAccount`
        by the object ID.
      x-release-status: PUBLIC
    GetBankAccountResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
        bank_account:
          $ref: '#/components/schemas/BankAccount'
      description: Response object returned by `GetBankAccount`.
      example:
        bank_account:
          id: w3yRgCGYQnwmdl0R3GB
          account_number_suffix: "971"
          country: US
          currency: USD
          account_type: CHECKING
          holder_name: Jane Doe
          primary_bank_identification_number: "112200303"
          location_id: S8GWD5example
          status: VERIFICATION_IN_PROGRESS
          creditable: false
          debitable: false
          version: 5
          bank_name: Bank Name
      x-release-status: PUBLIC
    GetBreakTypeRequest:
      type: object
      properties: {}
      description: A request to GET a `BreakType` by ID
      x-release-status: PUBLIC
    GetBreakTypeResponse:
      type: object
      properties:
        break_type:
          $ref: '#/components/schemas/BreakType'
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: |-
        The response to a request to get a `BreakType`. Contains
        the requested `BreakType` objects. May contain a set of `Error` objects if
        the request resulted in errors.
      example:
        break_type:
          id: lA0mj_RSOprNPwMUXdYp
          location_id: 059SB0E0WCNWS
          break_name: Lunch Break
          expected_duration: PT30M
          is_paid: true
          version: 1
          created_at: 2019-02-21T17:50:00Z
          updated_at: 2019-02-21T17:50:00Z
      x-release-status: PUBLIC
    GetDeviceCodeRequest:
      type: object
      properties: {}
      example: {}
      x-release-status: BETA
    GetDeviceCodeResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        device_code:
          $ref: '#/components/schemas/DeviceCode'
      example:
        device_code:
          id: B3Z6NAMYQSMTM
          name: Counter 1
          code: EBCARJ
          product_type: TERMINAL_API
          location_id: B5E4484SHHNYH
          created_at: 2020-02-06T18:44:33.000Z
          pair_by: 2020-02-06T18:49:33.000Z
          status: PAIRED
          device_id: 907CS13101300122
          status_changed_at: 2020-02-06T18:47:28.000Z
      x-release-status: BETA
    GetEmployeeWageRequest:
      type: object
      properties: {}
      description: A request to get an `EmployeeWage`
      x-release-status: DEPRECATED
    GetEmployeeWageResponse:
      type: object
      properties:
        employee_wage:
          $ref: '#/components/schemas/EmployeeWage'
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: |-
        A response to a request to get an `EmployeeWage`. Contains
        the requested `EmployeeWage` objects. May contain a set of `Error` objects if
        the request resulted in errors.
      example:
        employee_wage:
          id: pXS3qCv7BERPnEGedM4S8mhm
          employee_id: 33fJchumvVdJwxV0H6L9
          title: Manager
          hourly_rate:
            amount: 2000
            currency: USD
      x-release-status: DEPRECATED
    GetInvoiceRequest:
      type: object
      properties: {}
      description: Describes a `GetInvoice` request.
      x-release-status: BETA
    GetInvoiceResponse:
      type: object
      properties:
        invoice:
          $ref: '#/components/schemas/Invoice'
        errors:
          type: array
          description: Information about errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: Describes a `GetInvoice` response.
      example:
        invoice:
          id: gt2zv1z6mnUm1V7KMxxf3w
          version: 0
          location_id: ES0RJRZYEC39A
          order_id: CAISENgvlJ6jLWAzERDzjyHVybY
          payment_requests:
          - uid: 2da7964f-f3d2-4f43-81e8-5aa220bf3355
            request_method: EMAIL
            request_type: BALANCE
            due_date: 2030-01-24
            tipping_enabled: true
            reminders:
            - uid: beebd363-e47f-4075-8785-c235aaa7df11
              relative_scheduled_days: -1
              message: Your invoice is due tomorrow
              status: PENDING
            computed_amount_money:
              amount: 10000
              currency: USD
            total_completed_amount_money:
              amount: 0
              currency: USD
          invoice_number: inv-100
          title: Event Planning Services
          description: We appreciate your business!
          scheduled_at: 2030-01-13T10:00:00Z
          status: DRAFT
          timezone: America/Los_Angeles
          created_at: 2020-06-18T17:45:13Z
          updated_at: 2020-06-18T17:45:13Z
          primary_recipient:
            customer_id: JDKYHBWT1D4F8MFH63DBMEN8Y4
            given_name: Amelia
            family_name: Earhart
            email_address: Amelia.Earhart@example.com
            phone_number: 1-212-555-4240
      x-release-status: BETA
    GetPaymentRefundRequest:
      type: object
      properties: {}
      description: Retrieves a specific `Refund` using the `refund_id`.
      example: {}
      x-release-status: PUBLIC
    GetPaymentRefundResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
        refund:
          $ref: '#/components/schemas/PaymentRefund'
      description: |-
        Defines the fields that are included in the response body of
        a request to the [GetRefund](#endpoint-refunds-getpaymentrefund) endpoint.

        Note: if there are errors processing the request, the refund field may not be
        present, or it may be present in a FAILED state.
      example:
        refund:
          id: O2QAAhTYs7rUfzlxT38GMO7LvaB_q7JwCHtxmgXrh8fAhV468WQ44VxDtL7CU4yVRlsbXmI
          created_at: 2019-07-06T18:01:22.123Z
          updated_at: 2019-07-06T18:06:03.874Z
          status: COMPLETED
          amount_money:
            amount: 1000
            currency: USD
          payment_id: O2QAAhTYs7rUfzlxT38GMO7LvaB
          order_id: 2duiyoqbfeXY0DBi15GEyk5Epa4F
          location_id: XK3DBG77NJBFX
          processing_fee:
          - effective_at: 2019-07-06T20:01:12.000Z
            type: INITIAL
            amount_money:
              amount: -59
              currency: USD
      x-release-status: PUBLIC
    GetPaymentRequest:
      type: object
      properties: {}
      description: Retrieve details for a specific Payment.
      example: {}
      x-release-status: PUBLIC
    GetPaymentResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
        payment:
          $ref: '#/components/schemas/Payment'
      description: |-
        Defines the fields that are included in the response body of
        a request to the [GetPayment](#endpoint-payments-getpayment) endpoint.
      example:
        payment:
          id: GQTFp1ZlXdpoW4o6eGiZhbjosiDFf
          created_at: 2019-07-10T13:23:49.154Z
          updated_at: 2019-07-10T13:23:49.446Z
          amount_money:
            amount: 200
            currency: USD
          app_fee_money:
            amount: 10
            currency: USD
          total_money:
            amount: 200
            currency: USD
          status: COMPLETED
          source_type: CARD
          card_details:
            status: CAPTURED
            card:
              card_brand: VISA
              last_4: "1111"
              exp_month: 7
              exp_year: 2026
              fingerprint: sq-1-TpmjbNBMFdibiIjpQI5LiRgNUBC7u1689i0TgHjnlyHEWYB7tnn-K4QbW4ttvtaqXw
              card_type: DEBIT
              prepaid_type: PREPAID
              bin: "411111"
            entry_method: ON_FILE
            cvv_status: CVV_ACCEPTED
            avs_status: AVS_ACCEPTED
            auth_result_code: nsAyY2
            statement_description: SQ *MY MERCHANT
          location_id: XTI0H92143A39
          order_id: m2Hr8Hk8A3CTyQQ1k4ynExg92tO3
          reference_id: "123456"
          note: Brief description
          customer_id: RDX9Z4XTIZR7MRZJUXNY9HUK6I
          processing_fee:
          - effective_at: 2019-07-10T15:23:49.000Z
            type: INITIAL
            amount_money:
              amount: 36
              currency: USD
          receipt_number: GQTF
          receipt_url: https://squareup.com/receipt/preview/GQTFp1ZlXdpoW4o6eGiZhbjosiDFf
      x-release-status: PUBLIC
    GetShiftRequest:
      type: object
      properties: {}
      description: A request to get a `Shift` by ID
      x-release-status: PUBLIC
    GetShiftResponse:
      type: object
      properties:
        shift:
          $ref: '#/components/schemas/Shift'
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: |-
        A response to request to get a `Shift`. Contains
        the requested `Shift` object. May contain a set of `Error` objects if
        the request resulted in errors.
      example:
        shift:
          id: T35HMQSN89SV4
          team_member_id: D71KRMQof6cXGUW0aAv7
          employee_id: D71KRMQof6cXGUW0aAv7
          location_id: PAA1RJZZKXBFG
          timezone: America/New_York
          start_at: 2019-02-23T18:00:00-05:00
          end_at: 2019-02-23T21:00:00-05:00
          wage:
            title: Cashier
            hourly_rate:
              amount: 1457
              currency: USD
          breaks:
          - id: M9BBKEPQAQD2T
            start_at: 2019-02-23T19:00:00-05:00
            end_at: 2019-02-23T20:00:00-05:00
            break_type_id: 92EPDRQKJ5088
            name: Lunch Break
            expected_duration: PT1H
            is_paid: true
          status: CLOSED
          version: 1
          created_at: 2019-02-27T00:12:12Z
          updated_at: 2019-02-27T00:12:12Z
      x-release-status: PUBLIC
    GetTeamMemberWageRequest:
      type: object
      properties: {}
      description: A request to get an `TeamMemberWage`
      x-release-status: PUBLIC
    GetTeamMemberWageResponse:
      type: object
      properties:
        team_member_wage:
          $ref: '#/components/schemas/TeamMemberWage'
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: |-
        A response to a request to get a `TeamMemberWage`. Contains
        the requested `TeamMemberWage` objects. May contain a set of `Error` objects if
        the request resulted in errors.
      example:
        team_member_wage:
          id: pXS3qCv7BERPnEGedM4S8mhm
          team_member_id: 33fJchumvVdJwxV0H6L9
          title: Manager
          hourly_rate:
            amount: 2000
            currency: USD
      x-release-status: PUBLIC
    GetTerminalCheckoutRequest:
      type: object
      properties: {}
      example: {}
      x-release-status: BETA
    GetTerminalCheckoutResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
        checkout:
          $ref: '#/components/schemas/TerminalCheckout'
      example:
        checkout:
          id: 08YceKh7B3ZqO
          amount_money:
            amount: 2610
            currency: USD
          reference_id: id11572
          note: A brief note
          device_options:
            device_id: dbb5d83a-7838-11ea-bc55-0242ac130003
            tip_settings:
              allow_tipping: false
            skip_receipt_screen: false
          status: IN_PROGRESS
          created_at: 2020-04-06T16:39:32.545Z
          updated_at: 2020-04-06T16:39:323.001Z
          app_id: APP_ID
          deadline_duration: PT10M
      x-release-status: BETA
    InventoryAdjustment:
      type: object
      properties:
        id:
          maxLength: 100
          type: string
          description: |-
            A unique ID generated by Square for the
            `InventoryAdjustment`.
        reference_id:
          maxLength: 255
          type: string
          description: |-
            An optional ID provided by the application to tie the
            `InventoryAdjustment` to an external
            system.
        from_status:
          $ref: '#/components/schemas/InventoryState'
        to_status:
          $ref: '#/components/schemas/InventoryState'
        from_state:
          $ref: '#/components/schemas/InventoryState'
        to_state:
          $ref: '#/components/schemas/InventoryState'
        from_location_id:
          type: string
          description: |-
            The Square ID of the [Location](#type-location) where the related
            quantity of items are being tracked before the adjustment. Replaced by
            `from_location_id` in `InventoryTransfer`.
          x-release-status: RETIRED
        to_location_id:
          type: string
          description: |-
            The Square ID of the [Location](#type-location) where the related
            quantity of items are being tracked after the adjustment. Replaced by
            `to_location_id` in `InventoryTransfer`.
          x-release-status: RETIRED
        location_id:
          maxLength: 100
          type: string
          description: |-
            The Square ID of the [Location](#type-location) where the related
            quantity of items are being tracked.
        catalog_object_id:
          maxLength: 100
          type: string
          description: |-
            The Square generated ID of the
            `CatalogObject` being tracked.
        catalog_object_type:
          maxLength: 14
          type: string
          description: |-
            The `CatalogObjectType` of the
            `CatalogObject` being tracked. Tracking is only
            supported for the `ITEM_VARIATION` type.
        quantity:
          maxLength: 26
          type: string
          description: |-
            The number of items affected by the adjustment as a decimal string.
            Can support up to 5 digits after the decimal point.
        total_price_money:
          $ref: '#/components/schemas/Money'
        occurred_at:
          maxLength: 34
          type: string
          description: |-
            A client-generated timestamp in RFC 3339 format that indicates when
            the adjustment took place. For write actions, the `occurred_at`
            timestamp cannot be older than 24 hours or in the future relative to the
            time of the request.
        created_at:
          maxLength: 34
          type: string
          description: |-
            A read-only timestamp in RFC 3339 format that indicates when Square
            received the adjustment.
          readOnly: true
        source:
          $ref: '#/components/schemas/SourceApplication'
        employee_id:
          maxLength: 100
          type: string
          description: |-
            The Square ID of the [Employee](#type-employee) responsible for the
            inventory adjustment.
        transaction_id:
          maxLength: 255
          type: string
          description: |-
            The read-only Square ID of the [Transaction][#type-transaction] that
            caused the adjustment. Only relevant for payment-related state
            transitions.
        refund_id:
          maxLength: 255
          type: string
          description: |-
            The read-only Square ID of the [Refund][#type-refund] that
            caused the adjustment. Only relevant for refund-related state
            transitions.
        purchase_order_id:
          maxLength: 100
          type: string
          description: |-
            The read-only Square ID of the purchase order that caused the
            adjustment. Only relevant for state transitions from the Square for Retail
            app.
        goods_receipt_id:
          maxLength: 100
          type: string
          description: |-
            The read-only Square ID of the Square goods receipt that caused the
            adjustment. Only relevant for state transitions from the Square for Retail
            app.
      description: |-
        Represents a change in state or quantity of product inventory at a
        particular time and location.
      x-release-status: PUBLIC
    InventoryChange:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/InventoryChangeType'
        physical_count:
          $ref: '#/components/schemas/InventoryPhysicalCount'
        adjustment:
          $ref: '#/components/schemas/InventoryAdjustment'
        transfer:
          $ref: '#/components/schemas/InventoryTransfer'
      description: |-
        Represents a single physical count, inventory, adjustment, or transfer
        that is part of the history of inventory changes for a particular
        `CatalogObject`.
      x-release-status: PUBLIC
    InventoryCount:
      type: object
      properties:
        catalog_object_id:
          maxLength: 100
          type: string
          description: |-
            The Square generated ID of the
            `CatalogObject` being tracked.
        catalog_object_type:
          maxLength: 14
          type: string
          description: |-
            The `CatalogObjectType` of the
            `CatalogObject` being tracked. Tracking is only
            supported for the `ITEM_VARIATION` type.
        status:
          $ref: '#/components/schemas/InventoryState'
        state:
          $ref: '#/components/schemas/InventoryState'
        location_id:
          maxLength: 100
          type: string
          description: |-
            The Square ID of the [Location](#type-location) where the related
            quantity of items are being tracked.
        quantity:
          maxLength: 26
          type: string
          description: |-
            The number of items affected by the estimated count as a decimal string.
            Can support up to 5 digits after the decimal point.
        calculated_at:
          maxLength: 34
          type: string
          description: |-
            A read-only timestamp in RFC 3339 format that indicates when Square
            received the most recent physical count or adjustment that had an affect
            on the estimated count.
      description: |-
        Represents Square's estimated quantity of items in a particular state at a
        particular location based on the known history of physical counts and
        inventory adjustments.
      x-release-status: PUBLIC
    InventoryCountUpdatedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        type:
          type: string
          description: The type of event this represents.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/InventoryCountUpdatedWebhookData'
      description: |-
        Published when the quantity is updated for a
        [CatalogItemVariation](#type-CatalogItemVariation).
      example:
        merchant_id: 6SSW7HV8K2ST5
        type: inventory.count.updated
        event_id: df5f3813-a913-45a1-94e9-fdc3f7d5e3b6
        created_at: 2019-10-29T18:38:45.455006797Z
        data:
          type: inventory
          id: 84e4ac73-d605-4dbd-a9e5-ffff794ddb9d
          object:
            inventory_counts:
            - calculated_at: 2019-10-29T18:38:45.10296Z
              catalog_object_id: FGQ5JJWT2PYTHF35CKZ2DSKP
              catalog_object_type: ITEM_VARIATION
              location_id: YYQR03DGCTXA4
              quantity: "10"
              state: IN_STOCK
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
      x-webhook:
        event: inventory.count.updated
        scopes:
        - INVENTORY_READ
      x-api: '#/components/x-apis/Inventory'
      x-since: 2019-06-12
    InventoryCountUpdatedWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the affected object’s type.
        id:
          type: string
          description: ID of the affected object.
        object:
          $ref: '#/components/schemas/InventoryCountUpdatedWebhookObject'
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    InventoryCountUpdatedWebhookObject:
      type: object
      properties:
        inventory_counts:
          type: array
          items:
            $ref: '#/components/schemas/InventoryCount'
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    InventoryPhysicalCount:
      type: object
      properties:
        id:
          maxLength: 100
          type: string
          description: |-
            A unique ID generated by Square for the
            [InventoryPhysicalCount](#type-inventoryphysicalcount).
        reference_id:
          maxLength: 255
          type: string
          description: |-
            An optional ID provided by the application to tie the
            [InventoryPhysicalCount](#type-inventoryphysicalcount) to an external
            system.
        catalog_object_id:
          maxLength: 100
          type: string
          description: |-
            The Square generated ID of the
            `CatalogObject` being tracked.
        catalog_object_type:
          maxLength: 14
          type: string
          description: |-
            The `CatalogObjectType` of the
            `CatalogObject` being tracked. Tracking is only
            supported for the `ITEM_VARIATION` type.
        status:
          $ref: '#/components/schemas/InventoryState'
        state:
          $ref: '#/components/schemas/InventoryState'
        location_id:
          maxLength: 100
          type: string
          description: |-
            The Square ID of the [Location](#type-location) where the related
            quantity of items are being tracked.
        quantity:
          maxLength: 26
          type: string
          description: |-
            The number of items affected by the physical count as a decimal string.
            Can support up to 5 digits after the decimal point.
        source:
          $ref: '#/components/schemas/SourceApplication'
        employee_id:
          maxLength: 100
          type: string
          description: |-
            The Square ID of the [Employee](#type-employee) responsible for the
            physical count.
        occurred_at:
          maxLength: 34
          type: string
          description: |-
            A client-generated timestamp in RFC 3339 format that indicates when
            the physical count took place. For write actions, the `occurred_at`
            timestamp cannot be older than 24 hours or in the future relative to the
            time of the request.
        created_at:
          maxLength: 34
          type: string
          description: |-
            A read-only timestamp in RFC 3339 format that indicates when Square
            received the physical count.
          readOnly: true
      description: |-
        Represents the quantity of an item variation that is physically present
        at a specific location, verified by a seller or a seller's employee. For example,
        a physical count might come from an employee counting the item variations on
        hand or from syncing with an external system.
      x-release-status: PUBLIC
    InventoryTransfer:
      type: object
      properties:
        id:
          maxLength: 100
          type: string
          description: |-
            A unique ID generated by Square for the
            `InventoryTransfer`.
        reference_id:
          maxLength: 255
          type: string
          description: |-
            An optional ID provided by the application to tie the
            `InventoryTransfer` to an external system.
        state:
          $ref: '#/components/schemas/InventoryState'
        from_location_id:
          maxLength: 100
          type: string
          description: |-
            The Square ID of the [Location](#type-location) where the related
            quantity of items were tracked before the transfer.
        to_location_id:
          maxLength: 100
          type: string
          description: |-
            The Square ID of the [Location](#type-location) where the related
            quantity of items were tracked after the transfer.
        catalog_object_id:
          maxLength: 100
          type: string
          description: |-
            The Square generated ID of the
            `CatalogObject` being tracked.
        catalog_object_type:
          maxLength: 14
          type: string
          description: |-
            The `CatalogObjectType` of the
            `CatalogObject` being tracked.Tracking is only
            supported for the `ITEM_VARIATION` type.
        quantity:
          maxLength: 26
          type: string
          description: |-
            The number of items affected by the transfer as a decimal string.
            Can support up to 5 digits after the decimal point.
        occurred_at:
          maxLength: 34
          type: string
          description: |-
            A client-generated timestamp in RFC 3339 format that indicates when
            the transfer took place. For write actions, the `occurred_at` timestamp
            cannot be older than 24 hours or in the future relative to the time of the
            request.
        created_at:
          maxLength: 34
          type: string
          description: |-
            A read-only timestamp in RFC 3339 format that indicates when Square
            received the transfer request.
          readOnly: true
        source:
          $ref: '#/components/schemas/SourceApplication'
        employee_id:
          maxLength: 100
          type: string
          description: |-
            The Square ID of the [Employee](#type-employee) responsible for the
            inventory transfer.
      description: |-
        Represents the transfer of a quantity of product inventory at a
        particular time from one location to another.
      x-release-status: PUBLIC
    Invoice:
      type: object
      properties:
        id:
          type: string
          description: The Square-assigned ID of the invoice.
          readOnly: true
        version:
          minimum: 0
          type: integer
          description: The version number, which is incremented each time an update
            is committed to the invoice.
          readOnly: true
        location_id:
          maxLength: 255
          minLength: 1
          type: string
          description: |-
            The ID of the location that this invoice is associated with.
            This field is required when creating an invoice.
        order_id:
          maxLength: 255
          minLength: 1
          type: string
          description: |-
            The ID of the [order](#type-order) for which the invoice is created.

            This order must be in the `OPEN` state and must belong to the `location_id`
            specified for this invoice. This field is required when creating an invoice.
        primary_recipient:
          $ref: '#/components/schemas/InvoiceRecipient'
        payment_requests:
          type: array
          description: |-
            An array of `InvoicePaymentRequest` objects. Each object defines
            a payment request in an invoice payment schedule. It provides information
            such as when and how Square processes payments. You can specify maximum of
            nine payment requests. All all the payment requests must specify the
            same `request_method`.

            This field is required when creating an invoice.
          items:
            $ref: '#/components/schemas/InvoicePaymentRequest'
        invoice_number:
          maxLength: 191
          minLength: 1
          type: string
          description: |-
            A user-friendly invoice number. The value is unique within a location.
            If not provided when creating an invoice, Square assigns a value.
            It increments from 1 and padded with zeros making it 7 characters long
            for example, 0000001, 0000002.
        title:
          maxLength: 255
          minLength: 1
          type: string
          description: The title of the invoice.
        description:
          maxLength: 65536
          minLength: 1
          type: string
          description: The description of the invoice. This is visible the customer
            receiving the invoice.
        scheduled_at:
          type: string
          description: |-
            The timestamp when the invoice is scheduled for processing, in RFC 3339 format.
            At the specified time, depending on the `request_method`, Square sends the
            invoice to the customer's email address or charge the customer's card on file.

            If the field is not set, Square processes the invoice immediately after publication.
        public_url:
          type: string
          description: |-
            The URL of the Square-hosted invoice page.
            After you publish the invoice using the `PublishInvoice` endpoint, Square hosts the invoice
            page and returns the page URL in the response.
          readOnly: true
        next_payment_amount_money:
          $ref: '#/components/schemas/Money'
        status:
          $ref: '#/components/schemas/InvoiceStatus'
        timezone:
          type: string
          description: The time zone of the date values (for example, `due_date`)
            specified in the invoice.
          readOnly: true
        created_at:
          type: string
          description: The timestamp when the invoice was created, in RFC 3339 format.
          readOnly: true
        updated_at:
          type: string
          description: The timestamp when the invoice was last updated, in RFC 3339
            format.
          readOnly: true
      description: |-
        Stores information about an invoice. You use the Invoices API to create and process
        invoices. For more information, see [Manage Invoices Using the Invoices API](https://developer.squareup.com/docs/docs/invoices-api/overview).
      x-release-status: BETA
    InvoiceCanceledWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        type:
          type: string
          description: The type of event this represents, `"invoice.canceled"`.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/InvoiceCanceledWebhookData'
      description: Published when an [Invoice](#type-Invoice) is canceled.
      example:
        merchant_id: 031FEV2Q6VMPK
        location_id: ES0RJRZYEC39A
        type: invoice.canceled
        event_id: 742ef00c-446b-4fca-b3d5-f177d816ee54
        created_at: 2020-06-18T18:23:11Z
        data:
          type: invoice
          id: gt2zv1z6mnUm1V7KMxxf3w
          object:
            invoice:
              id: gt2zv1z6mnUm1V7KMxxf3w
              version: 1
              location_id: ES0RJRZYEC39A
              order_id: CAISENgvlJ6jLWAzERDzjyHVybY
              payment_requests:
              - uid: 2da7964f-f3d2-4f43-81e8-5aa220bf3355
                request_method: EMAIL
                request_type: BALANCE
                due_date: 2030-01-24
                tipping_enabled: true
                reminders:
                - uid: beebd363-e47f-4075-8785-c235aaa7df11
                  relative_scheduled_days: -1
                  message: Your invoice is due tomorrow
                  status: PENDING
                computed_amount_money:
                  amount: 10000
                  currency: USD
                total_completed_amount_money:
                  amount: 0
                  currency: USD
              invoice_number: inv-100
              title: Event Planning Services
              description: We appreciate your business!
              scheduled_at: 2030-01-13T10:00:00Z
              status: CANCELED
              timezone: America/Los_Angeles
              created_at: 2020-06-18T17:45:13Z
              updated_at: 2020-06-18T18:23:11Z
              primary_recipient:
                customer_id: JDKYHBWT1D4F8MFH63DBMEN8Y4
                given_name: Amelia
                family_name: Earhart
                email_address: Amelia.Earhart@example.com
                phone_number: 1-212-555-4240
      x-release-status: BETA
      x-visibility: DOC_ONLY
      x-webhook:
        event: invoice.canceled
        scopes:
        - INVOICES_READ
      x-api: '#/components/x-apis/Invoices'
      x-since: 2020-07-22
    InvoiceCanceledWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the affected object’s type, `"invoice"`.
        id:
          type: string
          description: ID of the affected invoice.
        object:
          $ref: '#/components/schemas/InvoiceCanceledWebhookObject'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    InvoiceCanceledWebhookObject:
      type: object
      properties:
        invoice:
          $ref: '#/components/schemas/Invoice'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    InvoiceCreatedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        type:
          type: string
          description: The type of event this represents, `"invoice.created"`.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/InvoiceCreatedWebhookData'
      description: Published when an [Invoice](#type-Invoice) is created.
      example:
        merchant_id: 031FEV2Q6VMPK
        location_id: ES0RJRZYEC39A
        type: invoice.created
        event_id: 012c1bfa-c239-4fc0-b16d-5809928b54fe
        created_at: 2020-06-18T17:45:13Z
        data:
          type: invoice
          id: gt2zv1z6mnUm1V7KMxxf3w
          object:
            invoice:
              id: gt2zv1z6mnUm1V7KMxxf3w
              version: 0
              location_id: ES0RJRZYEC39A
              order_id: CAISENgvlJ6jLWAzERDzjyHVybY
              payment_requests:
              - uid: 2da7964f-f3d2-4f43-81e8-5aa220bf3355
                request_method: EMAIL
                request_type: BALANCE
                due_date: 2030-01-24
                tipping_enabled: true
                reminders:
                - uid: beebd363-e47f-4075-8785-c235aaa7df11
                  relative_scheduled_days: -1
                  message: Your invoice is due tomorrow
                  status: PENDING
                computed_amount_money:
                  amount: 10000
                  currency: USD
                total_completed_amount_money:
                  amount: 0
                  currency: USD
              invoice_number: inv-100
              title: Event Planning Services
              description: We appreciate your business!
              scheduled_at: 2030-01-13T10:00:00Z
              status: DRAFT
              timezone: America/Los_Angeles
              created_at: 2020-06-18T17:45:13Z
              updated_at: 2020-06-18T17:45:13Z
              primary_recipient:
                customer_id: JDKYHBWT1D4F8MFH63DBMEN8Y4
                given_name: Amelia
                family_name: Earhart
                email_address: Amelia.Earhart@example.com
                phone_number: 1-212-555-4240
      x-release-status: BETA
      x-visibility: DOC_ONLY
      x-webhook:
        event: invoice.created
        scopes:
        - INVOICES_READ
      x-api: '#/components/x-apis/Invoices'
      x-since: 2020-07-22
    InvoiceCreatedWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the affected object’s type, `"invoice"`.
        id:
          type: string
          description: ID of the affected invoice.
        object:
          $ref: '#/components/schemas/InvoiceCreatedWebhookObject'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    InvoiceCreatedWebhookObject:
      type: object
      properties:
        invoice:
          $ref: '#/components/schemas/Invoice'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    InvoiceDeletedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        type:
          type: string
          description: The type of event this represents, `"invoice.deleted"`.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/InvoiceDeletedWebhookData'
      description: Published when a draft [Invoice](#type-Invoice) is deleted.
      example:
        merchant_id: 031FEV2Q6VMPK
        location_id: ES0RJRZYEC39A
        type: invoice.deleted
        event_id: 742ef00c-446b-4fca-b3d5-f177d816ee54
        created_at: 2020-06-18T18:23:11Z
        data:
          type: invoice
          id: gt2zv1z6mnUm1V7KMxxf3w
          deleted: true
      x-release-status: BETA
      x-visibility: DOC_ONLY
      x-webhook:
        event: invoice.deleted
        scopes:
        - INVOICES_READ
      x-api: '#/components/x-apis/Invoices'
      x-since: 2020-07-22
    InvoiceDeletedWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the affected object’s type, `"invoice"`.
        id:
          type: string
          description: ID of the affected invoice.
        deleted:
          type: boolean
          description: Indicates that the invoice was deleted.
      x-release-status: BETA
      x-visibility: DOC_ONLY
    InvoiceFilter:
      required:
      - location_ids
      type: object
      properties:
        location_ids:
          type: array
          description: "Limits the search to the specified locations. A location is\
            \ required. \nIn the current implementation, only one location can be\
            \ specified."
          items:
            type: string
        customer_ids:
          type: array
          description: "Limits the search to the specified customers, within the specified\
            \ locations. \nSpecifying a customer is optional. In the current implementation,\
            \ \na maximum of one customer can be specified."
          items:
            type: string
      description: Describes query filters to apply.
      x-release-status: BETA
    InvoicePaymentMadeWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        type:
          type: string
          description: The type of event this represents, `"invoice.payment_made"`.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/InvoicePaymentMadeWebhookData'
      description: Published when a payment that is associated with an [Invoice](#type-Invoice)
        is completed.
      example:
        merchant_id: 031FEV2Q6VMPK
        location_id: ES0RJRZYEC39A
        type: invoice.payment_made
        event_id: 891e3589-462f-4215-9b61-f6df2d4432b7
        created_at: 2020-06-18T18:23:11Z
        data:
          type: invoice
          id: gt2zv1z6mnUm1V7KMxxf3w
          object:
            invoice:
              id: gt2zv1z6mnUm1V7KMxxf3w
              version: 3
              location_id: ES0RJRZYEC39A
              order_id: CAISENgvlJ6jLWAzERDzjyHVybY
              payment_requests:
              - uid: 2da7964f-f3d2-4f43-81e8-5aa220bf3355
                request_method: EMAIL
                request_type: BALANCE
                due_date: 2030-01-24
                tipping_enabled: false
                computed_amount_money:
                  amount: 10000
                  currency: USD
                total_completed_amount_money:
                  amount: 10000
                  currency: USD
              invoice_number: inv-100
              title: Event Planning Services
              description: We appreciate your business!
              status: PAID
              timezone: America/Los_Angeles
              created_at: 2020-06-18T17:45:13Z
              updated_at: 2020-06-18T18:23:11Z
              primary_recipient:
                customer_id: JDKYHBWT1D4F8MFH63DBMEN8Y4
                given_name: Amelia
                family_name: Earhart
                email_address: Amelia.Earhart@example.com
                phone_number: 1-212-555-4240
      x-release-status: BETA
      x-visibility: DOC_ONLY
      x-webhook:
        event: invoice.payment_made
        scopes:
        - INVOICES_READ
      x-api: '#/components/x-apis/Invoices'
      x-since: 2020-07-22
    InvoicePaymentMadeWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the affected object’s type, `"invoice"`.
        id:
          type: string
          description: ID of the affected invoice.
        object:
          $ref: '#/components/schemas/InvoicePaymentMadeWebhookObject'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    InvoicePaymentMadeWebhookObject:
      type: object
      properties:
        invoice:
          $ref: '#/components/schemas/Invoice'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    InvoicePaymentReminder:
      type: object
      properties:
        uid:
          type: string
          description: |-
            A Square-assigned ID that uniquely identifies the reminder within the
            `InvoicePaymentRequest`.
          readOnly: true
        relative_scheduled_days:
          maximum: 32767
          minimum: -32767
          type: integer
          description: |-
            The number of days before (a negative number) or after (a positive number)
            the payment request `due_date` when the reminder is sent. For example, -3 indicates that
            the reminder should be sent 3 days before the payment request `due_date`.
        message:
          maxLength: 1000
          minLength: 1
          type: string
          description: The reminder message.
        status:
          $ref: '#/components/schemas/InvoicePaymentReminderStatus'
        sent_at:
          type: string
          description: If sent, the timestamp when the reminder was sent, in RFC 3339
            format.
          readOnly: true
      description: |-
        Describes a payment request reminder (automatic notification) that Square sends
        to the customer. You configure a reminder relative to the payment request
        `due_date`.
      x-release-status: BETA
    InvoicePaymentRequest:
      type: object
      properties:
        uid:
          maxLength: 255
          minLength: 1
          type: string
          description: The Square-generated ID of the payment request in an [invoice](#type-invoice).
          readOnly: true
        request_method:
          $ref: '#/components/schemas/InvoiceRequestMethod'
        request_type:
          $ref: '#/components/schemas/InvoiceRequestType'
        due_date:
          type: string
          description: "The due date (in the invoice location's time zone) for the\
            \ payment request. \nAfter this date, the invoice becomes overdue."
        fixed_amount_requested_money:
          $ref: '#/components/schemas/Money'
        percentage_requested:
          type: string
          description: "Specifies the amount for the payment request in percentage:\n\
            \n- When the payment `request_type` is `DEPOSIT`, it is the percentage\
            \ of the order total amount.\n- When the payment `request_type` is `INSTALLMENT`,\
            \ it is the percentage of the order total less \nthe deposit, if requested.\
            \ The sum of the `percentage_requested` in all installment \npayment requests\
            \ must be equal to 100.\n\nYou cannot specify this when the payment `request_type`\
            \ is `BALANCE` or when the \npayment request specifies the `fixed_amount_requested_money`\
            \ field."
        tipping_enabled:
          type: boolean
          description: "If set to true, the Square-hosted invoice page (the `public_url`\
            \ field of the invoice) \nprovides a place for the customer to pay a tip.\
            \ \n\nThis field is allowed only on the final payment request  \nand the\
            \ payment `request_type` must be `BALANCE` or `INSTALLMENT`."
        card_id:
          maxLength: 255
          minLength: 1
          type: string
          description: "If the request method is `CHARGE_CARD_ON_FILE`, this field\
            \ provides the \ncard to charge."
        reminders:
          type: array
          description: A list of one or more reminders to send for the payment request.
          items:
            $ref: '#/components/schemas/InvoicePaymentReminder'
        computed_amount_money:
          $ref: '#/components/schemas/Money'
        total_completed_amount_money:
          $ref: '#/components/schemas/Money'
        rounding_adjustment_included_money:
          $ref: '#/components/schemas/Money'
      description: "Describes a specific payment request in an invoice. You can have\
        \ \nup to nine payment requests for an invoice."
      x-release-status: BETA
    InvoicePublishedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        type:
          type: string
          description: The type of event this represents, `"invoice.published"`.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/InvoicePublishedWebhookData'
      description: Published when an [Invoice](#type-Invoice) transitions from a draft
        to a non-draft status.
      example:
        merchant_id: 031FEV2Q6VMPK
        location_id: ES0RJRZYEC39A
        type: invoice.published
        event_id: 52246644-98ba-411a-874c-ba35ccdb831c
        created_at: 2020-06-18T18:23:11Z
        data:
          type: invoice
          id: gt2zv1z6mnUm1V7KMxxf3w
          object:
            invoice:
              id: gt2zv1z6mnUm1V7KMxxf3w
              version: 1
              location_id: ES0RJRZYEC39A
              order_id: CAISENgvlJ6jLWAzERDzjyHVybY
              payment_requests:
              - uid: 2da7964f-f3d2-4f43-81e8-5aa220bf3355
                request_method: EMAIL
                request_type: BALANCE
                due_date: 2030-01-24
                tipping_enabled: true
                reminders:
                - uid: beebd363-e47f-4075-8785-c235aaa7df11
                  relative_scheduled_days: -1
                  message: Your invoice is due tomorrow
                  status: PENDING
                computed_amount_money:
                  amount: 10000
                  currency: USD
                total_completed_amount_money:
                  amount: 0
                  currency: USD
              invoice_number: inv-100
              title: Event Planning Services
              description: We appreciate your business!
              scheduled_at: 2030-01-13T10:00:00Z
              status: SCHEDULED
              timezone: America/Los_Angeles
              created_at: 2020-06-18T17:45:13Z
              updated_at: 2020-06-18T18:23:11Z
              primary_recipient:
                customer_id: JDKYHBWT1D4F8MFH63DBMEN8Y4
                given_name: Amelia
                family_name: Earhart
                email_address: Amelia.Earhart@example.com
                phone_number: 1-212-555-4240
      x-release-status: BETA
      x-visibility: DOC_ONLY
      x-webhook:
        event: invoice.published
        scopes:
        - INVOICES_READ
      x-api: '#/components/x-apis/Invoices'
      x-since: 2020-07-22
    InvoicePublishedWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the affected object’s type, `"invoice"`.
        id:
          type: string
          description: ID of the affected invoice.
        object:
          $ref: '#/components/schemas/InvoicePublishedWebhookObject'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    InvoicePublishedWebhookObject:
      type: object
      properties:
        invoice:
          $ref: '#/components/schemas/Invoice'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    InvoiceQuery:
      required:
      - filter
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/InvoiceFilter'
        sort:
          $ref: '#/components/schemas/InvoiceSort'
      description: Describes query criteria for searching invoices.
      x-release-status: BETA
    InvoiceRecipient:
      type: object
      properties:
        customer_id:
          maxLength: 255
          minLength: 1
          type: string
          description: "The ID of the customer. This is the customer profile ID that\
            \ \nyou provide when creating a draft invoice."
        given_name:
          type: string
          description: The recipient's given (that is, first) name.
          readOnly: true
        family_name:
          type: string
          description: The recipient's family (that is, last) name.
          readOnly: true
        email_address:
          type: string
          description: The recipient's email address.
          readOnly: true
        address:
          $ref: '#/components/schemas/Address'
        phone_number:
          type: string
          description: The recipient's phone number.
          readOnly: true
        company_name:
          type: string
          description: The name of the recipient's company.
          readOnly: true
      description: Provides customer data that Square uses to deliver an invoice.
      x-release-status: BETA
    InvoiceRefundedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        type:
          type: string
          description: The type of event this represents, `"invoice.refunded"`.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/InvoiceRefundedWebhookData'
      description: Published when a refund is applied towards a payment of an [Invoice](#type-Invoice).
      example:
        merchant_id: 031FEV2Q6VMPK
        location_id: ES0RJRZYEC39A
        type: invoice.refunded
        event_id: aedeb1fb-6c7d-4484-8106-866d97652388
        created_at: 2020-06-18T18:23:11Z
        data:
          type: invoice
          id: gt2zv1z6mnUm1V7KMxxf3w
          object:
            invoice:
              id: gt2zv1z6mnUm1V7KMxxf3w
              version: 4
              location_id: ES0RJRZYEC39A
              order_id: CAISENgvlJ6jLWAzERDzjyHVybY
              payment_requests:
              - uid: 2da7964f-f3d2-4f43-81e8-5aa220bf3355
                request_method: EMAIL
                request_type: BALANCE
                due_date: 2030-01-24
                tipping_enabled: false
                computed_amount_money:
                  amount: 10000
                  currency: USD
                total_completed_amount_money:
                  amount: 10000
                  currency: USD
              invoice_number: inv-100
              title: Event Planning Services
              description: We appreciate your business!
              status: REFUNDED
              timezone: America/Los_Angeles
              created_at: 2020-06-18T17:45:13Z
              updated_at: 2020-06-18T18:23:11Z
              primary_recipient:
                customer_id: JDKYHBWT1D4F8MFH63DBMEN8Y4
                given_name: Amelia
                family_name: Earhart
                email_address: Amelia.Earhart@example.com
                phone_number: 1-212-555-4240
      x-release-status: BETA
      x-visibility: DOC_ONLY
      x-webhook:
        event: invoice.refunded
        scopes:
        - INVOICES_READ
      x-api: '#/components/x-apis/Invoices'
      x-since: 2020-07-22
    InvoiceRefundedWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the affected object’s type, `"invoice"`.
        id:
          type: string
          description: ID of the affected invoice.
        object:
          $ref: '#/components/schemas/InvoiceRefundedWebhookObject'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    InvoiceRefundedWebhookObject:
      type: object
      properties:
        invoice:
          $ref: '#/components/schemas/Invoice'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    InvoiceScheduledChargeFailedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        type:
          type: string
          description: The type of event this represents, `"invoice.scheduled_charge_failed"`.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/InvoiceScheduledChargeFailedWebhookData'
      description: Published when an automatic scheduled payment for an [Invoice](#type-Invoice)
        has failed.
      example:
        merchant_id: 031FEV2Q6VMPK
        location_id: ES0RJRZYEC39A
        type: invoice.schdeuled_charge_failed
        event_id: 3cabb64e-16ba-40c2-b605-5c51a06ec794
        created_at: 2020-06-18T18:23:11Z
        data:
          type: invoice
          id: gt2zv1z6mnUm1V7KMxxf3w
          object:
            invoice:
              id: gt2zv1z6mnUm1V7KMxxf3w
              version: 4
              location_id: ES0RJRZYEC39A
              order_id: CAISENgvlJ6jLWAzERDzjyHVybY
              payment_requests:
              - uid: 2da7964f-f3d2-4f43-81e8-5aa220bf3355
                request_method: EMAIL
                request_type: BALANCE
                due_date: 2030-01-24
                tipping_enabled: false
                reminders:
                - uid: beebd363-e47f-4075-8785-c235aaa7df11
                  relative_scheduled_days: -1
                  message: Your invoice is due tomorrow
                  status: PENDING
                computed_amount_money:
                  amount: 10000
                  currency: USD
                total_completed_amount_money:
                  amount: 0
                  currency: USD
              invoice_number: inv-100
              title: Event Planning Services
              description: We appreciate your business!
              scheduled_at: 2030-01-13T10:00:00Z
              status: UNPAID
              timezone: America/Los_Angeles
              created_at: 2020-06-18T17:45:13Z
              updated_at: 2020-06-18T18:23:11Z
              primary_recipient:
                customer_id: JDKYHBWT1D4F8MFH63DBMEN8Y4
                given_name: Amelia
                family_name: Earhart
                email_address: Amelia.Earhart@example.com
                phone_number: 1-212-555-4240
              next_payment_amount_money:
                amount: 10000
                currency: USD
      x-release-status: BETA
      x-visibility: DOC_ONLY
      x-webhook:
        event: invoice.scheduled_charge_failed
        scopes:
        - INVOICES_READ
      x-api: '#/components/x-apis/Invoices'
      x-since: 2020-07-22
    InvoiceScheduledChargeFailedWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the affected object’s type, `"invoice"`.
        id:
          type: string
          description: ID of the affected invoice.
        object:
          $ref: '#/components/schemas/InvoiceScheduledChargeFailedWebhookObject'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    InvoiceScheduledChargeFailedWebhookObject:
      type: object
      properties:
        invoice:
          $ref: '#/components/schemas/Invoice'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    InvoiceSort:
      required:
      - field
      type: object
      properties:
        field:
          $ref: '#/components/schemas/InvoiceSortField'
        order:
          $ref: '#/components/schemas/SortOrder'
      description: Identifies the  sort field and sort order.
      x-release-status: BETA
    InvoiceUpdatedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        type:
          type: string
          description: The type of event this represents, `"invoice.updated"`.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/InvoiceUpdatedWebhookData'
      description: Published when an [Invoice](#type-Invoice) is updated.
      example:
        merchant_id: 031FEV2Q6VMPK
        location_id: ES0RJRZYEC39A
        type: invoice.updated
        event_id: 0312a8c5-af0f-49f4-ba29-291ef08dcd7e
        created_at: 2020-06-18T18:23:11Z
        data:
          type: invoice
          id: gt2zv1z6mnUm1V7KMxxf3w
          object:
            invoice:
              id: gt2zv1z6mnUm1V7KMxxf3w
              version: 2
              location_id: ES0RJRZYEC39A
              order_id: CAISENgvlJ6jLWAzERDzjyHVybY
              payment_requests:
              - uid: 2da7964f-f3d2-4f43-81e8-5aa220bf3355
                request_method: EMAIL
                request_type: BALANCE
                due_date: 2030-01-24
                tipping_enabled: false
                reminders:
                - uid: beebd363-e47f-4075-8785-c235aaa7df11
                  relative_scheduled_days: -1
                  message: Your invoice is due tomorrow
                  status: PENDING
                computed_amount_money:
                  amount: 10000
                  currency: USD
                total_completed_amount_money:
                  amount: 0
                  currency: USD
              invoice_number: inv-100
              title: Event Planning Services
              description: We appreciate your business!
              scheduled_at: 2030-01-13T10:00:00Z
              status: UNPAID
              timezone: America/Los_Angeles
              created_at: 2020-06-18T17:45:13Z
              updated_at: 2020-06-18T18:23:11Z
              primary_recipient:
                customer_id: JDKYHBWT1D4F8MFH63DBMEN8Y4
                given_name: Amelia
                family_name: Earhart
                email_address: Amelia.Earhart@example.com
                phone_number: 1-212-555-4240
              next_payment_amount_money:
                amount: 10000
                currency: USD
      x-release-status: BETA
      x-visibility: DOC_ONLY
      x-webhook:
        event: invoice.updated
        scopes:
        - INVOICES_READ
      x-api: '#/components/x-apis/Invoices'
      x-since: 2020-07-22
    InvoiceUpdatedWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the affected object’s type, `"invoice"`.
        id:
          type: string
          description: ID of the affected invoice.
        object:
          $ref: '#/components/schemas/InvoiceUpdatedWebhookObject'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    InvoiceUpdatedWebhookObject:
      type: object
      properties:
        invoice:
          $ref: '#/components/schemas/Invoice'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    ItemVariationLocationOverrides:
      type: object
      properties:
        location_id:
          type: string
          description: The ID of the `Location`.
        price_money:
          $ref: '#/components/schemas/Money'
        pricing_type:
          $ref: '#/components/schemas/CatalogPricingType'
        track_inventory:
          type: boolean
          description: If `true`, inventory tracking is active for the `CatalogItemVariation`
            at this `Location`.
        inventory_alert_type:
          $ref: '#/components/schemas/InventoryAlertType'
        inventory_alert_threshold:
          type: integer
          description: |-
            If the inventory quantity for the variation is less than or equal to this value and `inventory_alert_type`
            is `LOW_QUANTITY`, the variation displays an alert in the merchant dashboard.

            This value is always an integer.
          format: int64
      description: Price and inventory alerting overrides for a `CatalogItemVariation`
        at a specific `Location`.
      x-release-status: PUBLIC
    JobAssignment:
      required:
      - job_title
      - pay_type
      type: object
      properties:
        job_title:
          minLength: 1
          type: string
          description: The title of the job.
        pay_type:
          $ref: '#/components/schemas/JobAssignmentPayType'
        hourly_rate:
          $ref: '#/components/schemas/Money'
        annual_rate:
          $ref: '#/components/schemas/Money'
        weekly_hours:
          minimum: 0
          type: integer
          description: The planned hours per week for the job. Set if the job `PayType`
            is `SALARY`.
      description: An object describing a job that a team member is assigned to.
      x-release-status: PUBLIC
    LaborShiftCreatedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        type:
          type: string
          description: The type of event this represents.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/LaborShiftCreatedWebhookData'
      description: Published when a worker starts a [Shift](#type-Shift).
      example:
        merchant_id: 6SSW7HV8K2ST5
        type: labor.shift.created
        event_id: aeaaa5f6-c4fd-4e93-b688-71b50706266f
        created_at: 2019-10-29T17:26:16.808603647Z
        data:
          type: labor
          id: PY4YSMVKXFY9E
          object:
            shift:
              id: PY4YSMVKXFY9E
              employee_id: AnuhZhsN95oT8f-eCn9D
              team_member_id: AnuhZhsN95oT8f-eCn9D
              location_id: NAQ1FHV6ZJ8YV
              timezone: Etc/UTC
              start_at: 2019-01-25T08:11:00Z
              end_at: 2019-01-25T18:11:00Z
              wage:
                title: Barista
                hourly_rate:
                  amount: 1100
                  currency: USD
              status: OPEN
              version: 1
              created_at: 2019-11-06T19:14:55Z
              updated_at: 2019-11-06T19:14:55Z
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
      x-webhook:
        event: labor.shift.created
        scopes:
        - TIMECARDS_READ
      x-api: '#/components/x-apis/Labor'
      x-since: 2019-11-20
    LaborShiftCreatedWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the affected object’s type.
        id:
          type: string
          description: ID of the affected object.
        object:
          $ref: '#/components/schemas/LaborShiftCreatedWebhookObject'
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    LaborShiftCreatedWebhookObject:
      type: object
      properties:
        shift:
          $ref: '#/components/schemas/Shift'
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    LaborShiftDeletedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        type:
          type: string
          description: The type of event this represents.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/LaborShiftDeletedWebhookData'
      description: Published when a [Shift](#type-Shift) is deleted.
      example:
        merchant_id: 6SSW7HV8K2ST5
        type: labor.shift.deleted
        event_id: aeaaa5f6-c4fd-4e93-b688-71b50706266f
        created_at: 2019-10-29T17:26:16.808603647Z
        data:
          type: labor
          id: PY4YSMVKXFY9E
          deleted: true
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
      x-webhook:
        event: labor.shift.deleted
        scopes:
        - TIMECARDS_READ
      x-api: '#/components/x-apis/Labor'
      x-since: 2019-11-20
    LaborShiftDeletedWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the affected object’s type.
        id:
          type: string
          description: ID of the affected object.
        deleted:
          type: boolean
          description: Is true if the affected object was deleted. Otherwise absent.
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    LaborShiftUpdatedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        type:
          type: string
          description: The type of event this represents.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/LaborShiftUpdatedWebhookData'
      description: Published when a [Shift](#type-Shift) is updated.
      example:
        merchant_id: 6SSW7HV8K2ST5
        type: labor.shift.updated
        event_id: aeaaa5f6-c4fd-4e93-b688-71b50706266f
        created_at: 2019-10-29T17:26:16.808603647Z
        data:
          type: labor
          id: PY4YSMVKXFY9E
          object:
            shift:
              id: PY4YSMVKXFY9E
              employee_id: AnuhZhsN95oT8f-eCn9D
              team_member_id: AnuhZhsN95oT8f-eCn9D
              location_id: NAQ1FHV6ZJ8YV
              timezone: Etc/UTC
              start_at: 2019-01-25T08:11:00Z
              end_at: 2019-01-25T18:11:00Z
              wage:
                title: Barista
                hourly_rate:
                  amount: 1100
                  currency: USD
              breaks:
              - id: 0EGK74E8BJF62
                start_at: 2019-01-25T11:11:00Z
                end_at: 2019-01-25T11:16:00Z
                break_type_id: REGS1EQR1TPZ5
                name: Tea Break
                expected_duration: PT5M
                is_paid: true
              status: CLOSED
              version: 1
              created_at: 2019-11-06T19:14:55Z
              updated_at: 2019-11-06T19:14:55Z
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
      x-webhook:
        event: labor.shift.updated
        scopes:
        - TIMECARDS_READ
      x-api: '#/components/x-apis/Labor'
      x-since: 2019-11-20
    LaborShiftUpdatedWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the affected object’s type.
        id:
          type: string
          description: ID of the affected object.
        object:
          $ref: '#/components/schemas/LaborShiftUpdatedWebhookObject'
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    LaborShiftUpdatedWebhookObject:
      type: object
      properties:
        shift:
          $ref: '#/components/schemas/Shift'
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    ListAdditionalRecipientReceivableRefundsRequest:
      type: object
      properties:
        begin_time:
          type: string
          description: |-
            The beginning of the requested reporting period, in RFC 3339 format.

            See [Date ranges](#dateranges) for details on date inclusivity/exclusivity.

            Default value: The current time minus one year.
        end_time:
          type: string
          description: |-
            The end of the requested reporting period, in RFC 3339 format.

            See [Date ranges](#dateranges) for details on date inclusivity/exclusivity.

            Default value: The current time.
        sort_order:
          $ref: '#/components/schemas/SortOrder'
        cursor:
          type: string
          description: |-
            A pagination cursor returned by a previous call to this endpoint.
            Provide this to retrieve the next set of results for your original query.

            See [Paginating results](#paginatingresults) for more information.
      description: |-
        Defines the query parameters that can be included in
        a request to the [ListAdditionalRecipientReceivableRefunds](#endpoint-listadditionalrecipientreceivablerefunds) endpoint.
      x-release-status: RETIRED
      x-params-example: ?begin_time=2016-01-15T00:00:00Z&end_time=2016-01-31T00:00:00Z
      x-sq-sdk-sample-code:
        python: /sdk_samples/ListAdditionalRecipientReceivableRefunds/ListAdditionalRecipientReceivableRefundsRequest.python
        csharp: /sdk_samples/ListAdditionalRecipientReceivableRefunds/ListAdditionalRecipientReceivableRefundsRequest.csharp
        java: /sdk_samples/ListAdditionalRecipientReceivableRefunds/ListAdditionalRecipientReceivableRefundsRequest.java
        php: /sdk_samples/ListAdditionalRecipientReceivableRefunds/ListAdditionalRecipientReceivableRefundsRequest.php
        javascript: /sdk_samples/ListAdditionalRecipientReceivableRefunds/ListAdditionalRecipientReceivableRefundsRequest.javascript
        ruby: /sdk_samples/ListAdditionalRecipientReceivableRefunds/ListAdditionalRecipientReceivableRefundsRequest.ruby
    ListAdditionalRecipientReceivableRefundsResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        receivable_refunds:
          type: array
          description: An array of AdditionalRecipientReceivableRefunds that match
            your query.
          items:
            $ref: '#/components/schemas/AdditionalRecipientReceivableRefund'
        cursor:
          type: string
          description: |-
            A pagination cursor for retrieving the next set of results,
            if any remain. Provide this value as the `cursor` parameter in a subsequent
            request to this endpoint.

            See [Paginating results](#paginatingresults) for more information.
      description: |-
        Defines the fields that are included in the response body of
        a request to the [ListAdditionalRecipientReceivableRefunds](#endpoint-listadditionalrecipientreceivablerefunds) endpoint.

        One of `errors` or `additional_recipient_receivable_refunds` is present in a given response (never both).
      example:
        receivable_refunds:
        - id: Ge2OT7KA6XAg1GC15qs5S
          receivable_id: ISu5xwxJ5v0CMJTQq7RvqyMF
          refund_id: b27436d1-7f8e-5610-45c6-417ef71434b4-SW
          transaction_location_id: 18YC4JDH91E1H
          amount_money:
            amount: 10
            currency: USD
          created_at: 2016-01-20T22:57:56Z
      x-release-status: RETIRED
      x-sq-sdk-sample-code:
        python: /sdk_samples/ListAdditionalRecipientReceivableRefunds/ListAdditionalRecipientReceivableRefundsResponse.python
        csharp: /sdk_samples/ListAdditionalRecipientReceivableRefunds/ListAdditionalRecipientReceivableRefundsResponse.csharp
        java: /sdk_samples/ListAdditionalRecipientReceivableRefunds/ListAdditionalRecipientReceivableRefundsResponse.java
        php: /sdk_samples/ListAdditionalRecipientReceivableRefunds/ListAdditionalRecipientReceivableRefundsResponse.php
        javascript: /sdk_samples/ListAdditionalRecipientReceivableRefunds/ListAdditionalRecipientReceivableRefundsResponse.javascript
        ruby: /sdk_samples/ListAdditionalRecipientReceivableRefunds/ListAdditionalRecipientReceivableRefundsResponse.ruby
    ListAdditionalRecipientReceivablesRequest:
      type: object
      properties:
        begin_time:
          type: string
          description: |-
            The beginning of the requested reporting period, in RFC 3339 format.

            See [Date ranges](#dateranges) for details on date inclusivity/exclusivity.

            Default value: The current time minus one year.
        end_time:
          type: string
          description: |-
            The end of the requested reporting period, in RFC 3339 format.

            See [Date ranges](#dateranges) for details on date inclusivity/exclusivity.

            Default value: The current time.
        sort_order:
          $ref: '#/components/schemas/SortOrder'
        cursor:
          type: string
          description: |-
            A pagination cursor returned by a previous call to this endpoint.
            Provide this to retrieve the next set of results for your original query.

            See [Paginating results](#paginatingresults) for more information.
      description: |-
        Defines the query parameters that can be included in
        a request to the [ListAdditionalRecipientReceivables](#endpoint-listadditionalrecipientreceivables) endpoint.
      x-release-status: RETIRED
      x-params-example: ?begin_time=2016-01-15T00:00:00Z&end_time=2016-01-31T00:00:00Z
      x-sq-sdk-sample-code:
        python: /sdk_samples/ListAdditionalRecipientReceivables/ListAdditionalRecipientReceivablesRequest.python
        csharp: /sdk_samples/ListAdditionalRecipientReceivables/ListAdditionalRecipientReceivablesRequest.csharp
        java: /sdk_samples/ListAdditionalRecipientReceivables/ListAdditionalRecipientReceivablesRequest.java
        php: /sdk_samples/ListAdditionalRecipientReceivables/ListAdditionalRecipientReceivablesRequest.php
        javascript: /sdk_samples/ListAdditionalRecipientReceivables/ListAdditionalRecipientReceivablesRequest.javascript
        ruby: /sdk_samples/ListAdditionalRecipientReceivables/ListAdditionalRecipientReceivablesRequest.ruby
    ListAdditionalRecipientReceivablesResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        receivables:
          type: array
          description: An array of AdditionalRecipientReceivables that match your
            query.
          items:
            $ref: '#/components/schemas/AdditionalRecipientReceivable'
        cursor:
          type: string
          description: |-
            A pagination cursor for retrieving the next set of results,
            if any remain. Provide this value as the `cursor` parameter in a subsequent
            request to this endpoint.

            See [Paginating results](#paginatingresults) for more information.
      description: |-
        Defines the fields that are included in the response body of
        a request to the [ListAdditionalRecipientReceivables](#endpoint-listadditionalrecipientreceivables) endpoint.

        One of `errors` or `additional_recipient_receivables` is present in a given response (never both).
      example:
        receivables:
        - id: ISu5xwxJ5v0CMJTQq7RvqyMF
          transaction_id: KnL67ZIwXCPtzOrqj0HrkxMF
          transaction_location_id: 18YC4JDH91E1H
          amount_money:
            amount: 20
            currency: USD
          created_at: 2016-01-19T15:12:41Z
          refunds:
          - id: Ge2OT7KA6XAg1GC15qs5S
            receivable_id: ISu5xwxJ5v0CMJTQq7RvqyMF
            refund_id: b27436d1-7f8e-5610-45c6-417ef71434b4-SW
            transaction_location_id: 18YC4JDH91E1H
            amount_money:
              amount: 10
              currency: USD
            created_at: 2016-01-20T22:57:56Z
      x-release-status: RETIRED
      x-sq-sdk-sample-code:
        python: /sdk_samples/ListAdditionalRecipientReceivables/ListAdditionalRecipientReceivablesResponse.python
        csharp: /sdk_samples/ListAdditionalRecipientReceivables/ListAdditionalRecipientReceivablesResponse.csharp
        java: /sdk_samples/ListAdditionalRecipientReceivables/ListAdditionalRecipientReceivablesResponse.java
        php: /sdk_samples/ListAdditionalRecipientReceivables/ListAdditionalRecipientReceivablesResponse.php
        javascript: /sdk_samples/ListAdditionalRecipientReceivables/ListAdditionalRecipientReceivablesResponse.javascript
        ruby: /sdk_samples/ListAdditionalRecipientReceivables/ListAdditionalRecipientReceivablesResponse.ruby
    ListBankAccountsRequest:
      type: object
      properties:
        cursor:
          type: string
          description: "The pagination cursor returned by a previous call to this\
            \ endpoint.\nUse it in the next `ListBankAccounts` request to retrieve\
            \ the next set \nof results.\n\nSee the [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination)\
            \ guide for more information."
        limit:
          type: integer
          description: "Upper limit on the number of bank accounts to return in the\
            \ response. \nCurrently, 1000 is the largest supported limit. You can\
            \ specify a limit \nof up to 1000 bank accounts. This is also the default\
            \ limit."
        location_id:
          type: string
          description: "Location ID. You can specify this optional filter \nto retrieve\
            \ only the linked bank accounts belonging to a specific location."
      description: |-
        Request object for fetching all `BankAccount`
        objects linked to a account.
      x-release-status: PUBLIC
    ListBankAccountsResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
        bank_accounts:
          type: array
          description: List of BankAccounts associated with this account.
          items:
            $ref: '#/components/schemas/BankAccount'
        cursor:
          type: string
          description: "When a response is truncated, it includes a cursor that you\
            \ can \nuse in a subsequent request to fetch next set of bank accounts.\n\
            If empty, this is the final response.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination)."
      description: Response object returned by ListBankAccounts.
      example:
        bank_accounts:
        - id: ao6iaQ9vhDiaQD7n3GB
          account_number_suffix: "971"
          country: US
          currency: USD
          account_type: CHECKING
          holder_name: Jane Doe
          primary_bank_identification_number: "112200303"
          location_id: S8GWD5example
          status: VERIFICATION_IN_PROGRESS
          creditable: false
          debitable: false
          version: 5
          bank_name: Bank Name
        - id: 4x7WXuaxrkQkVlka3GB
          account_number_suffix: "972"
          country: US
          currency: USD
          account_type: CHECKING
          holder_name: Jane Doe
          primary_bank_identification_number: "112200303"
          location_id: S8GWD5example
          status: VERIFICATION_IN_PROGRESS
          creditable: false
          debitable: false
          version: 5
          bank_name: Bank Name
      x-release-status: PUBLIC
    ListBreakTypesRequest:
      type: object
      properties:
        location_id:
          type: string
          description: |-
            Filter Break Types returned to only those that are associated with the
            specified location.
        limit:
          maximum: 200
          minimum: 1
          type: integer
          description: |-
            Maximum number of Break Types to return per page. Can range between 1
            and 200. The default is the maximum at 200.
        cursor:
          type: string
          description: Pointer to the next page of Break Type results to fetch.
      description: A request for a filtered set of `BreakType` objects
      x-release-status: PUBLIC
      x-params-example: ?location_id=PAA1RJZZKXBFG&limit=2&cursor=s4R0Z6ecFTzTC4jz8sUDBQTudX3KE313OT9fCt3VUgsXM4sMgED
    ListBreakTypesResponse:
      type: object
      properties:
        break_types:
          type: array
          description: ' A page of `BreakType` results.'
          items:
            $ref: '#/components/schemas/BreakType'
        cursor:
          type: string
          description: |-
            Value supplied in the subsequent request to fetch the next next page
            of Break Type results.
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: |-
        The response to a request for a set of `BreakTypes`. Contains
        the requested `BreakType` objects. May contain a set of `Error` objects if
        the request resulted in errors.
      example:
        break_types:
        - id: REGS1EQR1TPZ5
          location_id: PAA1RJZZKXBFG
          break_name: Coffee Break
          expected_duration: PT5M
          is_paid: false
          version: 1
          created_at: 2019-01-22T20:47:37Z
          updated_at: 2019-01-22T20:47:37Z
        - id: 92EPDRQKJ5088
          location_id: PAA1RJZZKXBFG
          break_name: Lunch Break
          expected_duration: PT1H
          is_paid: true
          version: 3
          created_at: 2019-01-25T19:26:30Z
          updated_at: 2019-01-25T19:26:30Z
        cursor: 2fofTniCgT0yIPAq26kmk0YyFQJZfbWkh73OOnlTHmTAx13NgED
      x-release-status: PUBLIC
    ListCashDrawerShiftEventsRequest:
      required:
      - location_id
      type: object
      properties:
        location_id:
          minLength: 1
          type: string
          description: The ID of the location to list cash drawer shifts for.
        limit:
          maximum: 1000
          type: integer
          description: |-
            Number of resources to be returned in a page of results (200 by
            default, 1000 max).
        cursor:
          type: string
          description: Opaque cursor for fetching the next page of results.
      x-release-status: PUBLIC
    ListCashDrawerShiftEventsResponse:
      type: object
      properties:
        events:
          type: array
          description: |-
            All of the events (payments, refunds, etc.) for a cash drawer during
            the shift.
          items:
            $ref: '#/components/schemas/CashDrawerShiftEvent'
        cursor:
          type: string
          description: |-
            Opaque cursor for fetching the next page. Cursor is not present in
            the last page of results.
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      example:
        cursor: cursor
        events:
        - event_money:
            amount: 0
            currency: UNKNOWN_CURRENCY
          event_type: NO_SALE
          employee_id: employee_id
          created_at: created_at
          description: description
          id: id
        - event_money:
            amount: 0
            currency: UNKNOWN_CURRENCY
          event_type: NO_SALE
          employee_id: employee_id
          created_at: created_at
          description: description
          id: id
        errors:
        - code: INTERNAL_SERVER_ERROR
          field: field
          detail: detail
          category: API_ERROR
        - code: INTERNAL_SERVER_ERROR
          field: field
          detail: detail
          category: API_ERROR
      x-release-status: PUBLIC
    ListCashDrawerShiftsRequest:
      required:
      - location_id
      type: object
      properties:
        location_id:
          minLength: 1
          type: string
          description: The ID of the location to query for a list of cash drawer shifts.
        sort_order:
          $ref: '#/components/schemas/SortOrder'
        begin_time:
          type: string
          description: The inclusive start time of the query on opened_at, in ISO
            8601 format.
        end_time:
          type: string
          description: The exclusive end date of the query on opened_at, in ISO 8601
            format.
        limit:
          maximum: 1000
          type: integer
          description: |-
            Number of cash drawer shift events in a page of results (200 by
            default, 1000 max).
        cursor:
          type: string
          description: Opaque cursor for fetching the next page of results.
      x-release-status: PUBLIC
    ListCashDrawerShiftsResponse:
      type: object
      properties:
        items:
          type: array
          description: |-
            A collection of CashDrawerShiftSummary objects for shifts that match
            the query.
          items:
            $ref: '#/components/schemas/CashDrawerShiftSummary'
        cursor:
          type: string
          description: |-
            Opaque cursor for fetching the next page of results. Cursor is not
            present in the last page of results.
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      example:
        cursor: cursor
        items:
        - opened_at: opened_at
          expected_cash_money: null
          closed_at: closed_at
          opened_cash_money:
            amount: 0
            currency: UNKNOWN_CURRENCY
          description: description
          id: id
          state: OPEN
          ended_at: ended_at
          closed_cash_money: null
        - opened_at: opened_at
          expected_cash_money: null
          closed_at: closed_at
          opened_cash_money:
            amount: 0
            currency: UNKNOWN_CURRENCY
          description: description
          id: id
          state: OPEN
          ended_at: ended_at
          closed_cash_money: null
        errors:
        - code: INTERNAL_SERVER_ERROR
          field: field
          detail: detail
          category: API_ERROR
        - code: INTERNAL_SERVER_ERROR
          field: field
          detail: detail
          category: API_ERROR
      x-release-status: PUBLIC
    ListCatalogRequest:
      type: object
      properties:
        cursor:
          type: string
          description: |-
            The pagination cursor returned in the previous response. Leave unset for an initial request.
            See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.
        types:
          type: string
          description: |-
            An optional case-insensitive, comma-separated list of object types to retrieve, for example
            `ITEM,ITEM_VARIATION,CATEGORY,IMAGE`.

            The legal values are taken from the CatalogObjectType enum:
            `ITEM`, `ITEM_VARIATION`, `CATEGORY`, `DISCOUNT`, `TAX`,
            `MODIFIER`, `MODIFIER_LIST`, or `IMAGE`.
      x-release-status: PUBLIC
      x-params-example: ?types=category,tax
      x-sq-sdk-sample-code:
        python: /sdk_samples/Catalog/ListCatalog/ListCatalogRequest.python
        csharp: /sdk_samples/Catalog/ListCatalog/ListCatalogRequest.csharp
        java: /sdk_samples/Catalog/ListCatalog/ListCatalogRequest.java
        php: /sdk_samples/Catalog/ListCatalog/ListCatalogRequest.php
        javascript: /sdk_samples/Catalog/ListCatalog/ListCatalogRequest.javascript
        ruby: /sdk_samples/Catalog/ListCatalog/ListCatalogRequest.ruby
    ListCatalogResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on any errors encountered.
          items:
            $ref: '#/components/schemas/Error'
        cursor:
          type: string
          description: |-
            The pagination cursor to be used in a subsequent request. If unset, this is the final response.
            See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.
        objects:
          type: array
          description: The CatalogObjects returned.
          items:
            $ref: '#/components/schemas/CatalogObject'
      example:
        objects:
        - type: CATEGORY
          id: 5ZYQZZ2IECPVJ2IJ5KQPRDC3
          updated_at: 2017-02-21T14:50:26.495Z
          version: 1487688626495
          is_deleted: false
          present_at_all_locations: true
          category_data:
            name: Beverages
        - type: TAX
          id: L5R47DGBZOOVKCAFIXC56AEN
          updated_at: 2017-02-21T14:50:26.495Z
          version: 1487688626495
          is_deleted: false
          present_at_all_locations: true
          tax_data:
            name: Sales Tax
            calculation_phase: TAX_SUBTOTAL_PHASE
            inclusion_type: ADDITIVE
            percentage: "5.0"
            enabled: true
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/Catalog/ListCatalog/ListCatalogResponse.python
        csharp: /sdk_samples/Catalog/ListCatalog/ListCatalogResponse.csharp
        java: /sdk_samples/Catalog/ListCatalog/ListCatalogResponse.java
        php: /sdk_samples/Catalog/ListCatalog/ListCatalogResponse.php
        javascript: /sdk_samples/Catalog/ListCatalog/ListCatalogResponse.javascript
        ruby: /sdk_samples/Catalog/ListCatalog/ListCatalogResponse.ruby
    ListCustomerGroupsRequest:
      type: object
      properties:
        cursor:
          type: string
          description: |-
            A pagination cursor returned by a previous call to this endpoint.
            Provide this to retrieve the next set of results for your original query.

            See the [Pagination guide](https://developer.squareup.com/docs/working-with-apis/pagination) for more information.
      description: |-
        Defines the query parameters that can be provided in a request to the
        [ListCustomerGroups](#endpoint-listcustomergroups) endpoint.
      example: {}
      x-release-status: BETA
    ListCustomerGroupsResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        groups:
          type: array
          description: A list of customer groups belonging to the current merchant.
          items:
            $ref: '#/components/schemas/CustomerGroup'
        cursor:
          type: string
          description: |-
            A pagination cursor to retrieve the next set of results for your
            original query to the endpoint. This value is present only if the request
            succeeded and additional results are available.

            See the [Pagination guide](https://developer.squareup.com/docs/working-with-apis/pagination) for more information.
      description: |-
        Defines the fields that are included in the response body of
        a request to the [ListCustomerGroups](#endpoint-listcustomergroups) endpoint.

        One of `errors` or `groups` is present in a given response (never both).
      example:
        groups:
        - id: 2TAT3CMH4Q0A9M87XJZED0WMR3
          name: Loyal Customers
          created_at: 2020-04-13T21:54:57.863Z
          updated_at: 2020-04-13T21:54:58Z
        - id: 4XMEHESXJBNE9S9JAKZD2FGB14
          name: Super Loyal Customers
          created_at: 2020-04-13T21:55:18.795Z
          updated_at: 2020-04-13T21:55:19Z
      x-release-status: BETA
    ListCustomerSegmentsRequest:
      type: object
      properties:
        cursor:
          type: string
          description: |-
            A pagination cursor returned by previous calls to __ListCustomerSegments__.
            Used to retrieve the next set of query results.

            See the [Pagination guide](https://developer.squareup.com/docs/docs/working-with-apis/pagination) for more information.
      description: Defines the valid parameters for requests to __ListCustomerSegments__.
      example: {}
      x-release-status: BETA
    ListCustomerSegmentsResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        segments:
          type: array
          description: The list of customer segments belonging to the associated Square
            account.
          items:
            $ref: '#/components/schemas/CustomerSegment'
        cursor:
          type: string
          description: |-
            A pagination cursor to be used in subsequent calls to __ListCustomerSegments__
            to retrieve the next set of query results. Only present only if the request succeeded and
            additional results are available.

            See the [Pagination guide](https://developer.squareup.com/docs/docs/working-with-apis/pagination) for more information.
      description: |-
        Defines the fields included in the response body for requests to __ListCustomerSegments__.

        One of `errors` or `segments` is present in a given response (never both).
      example:
        segments:
        - id: GMNXRZVEXNQDF.CHURN_RISK
          name: Lapsed
          created_at: 2020-01-09T19:33:24.469Z
          updated_at: 2020-04-13T21:47:04Z
        - id: GMNXRZVEXNQDF.LOYAL
          name: Regulars
          created_at: 2020-01-09T19:33:24.486Z
          updated_at: 2020-04-13T21:47:04Z
        - id: GMNXRZVEXNQDF.REACHABLE
          name: Reachable
          created_at: 2020-01-09T19:33:21.813Z
          updated_at: 2020-04-13T21:47:04Z
        - id: gv2:KF92J19VXN5FK30GX2E8HSGQ20
          name: Instant Profile
          created_at: 2020-01-09T19:33:25Z
          updated_at: 2020-04-13T23:01:03Z
      x-release-status: BETA
    ListCustomersRequest:
      type: object
      properties:
        cursor:
          type: string
          description: |-
            A pagination cursor returned by a previous call to this endpoint.
            Provide this to retrieve the next set of results for your original query.

            See the [Pagination guide](https://developer.squareup.com/docs/working-with-apis/pagination) for more information.
        sort_field:
          $ref: '#/components/schemas/CustomerSortField'
        sort_order:
          $ref: '#/components/schemas/SortOrder'
      description: |-
        Defines the query parameters that can be provided in a request to the
        ListCustomers endpoint.
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/ListCustomers/ListCustomersRequest.python
        csharp: /sdk_samples/ListCustomers/ListCustomersRequest.csharp
        java: /sdk_samples/ListCustomers/ListCustomersRequest.java
        php: /sdk_samples/ListCustomers/ListCustomersRequest.php
        javascript: /sdk_samples/ListCustomers/ListCustomersRequest.javascript
        ruby: /sdk_samples/ListCustomers/ListCustomersRequest.ruby
    ListCustomersResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        customers:
          type: array
          description: An array of `Customer` objects that match the provided query.
          items:
            $ref: '#/components/schemas/Customer'
        cursor:
          type: string
          description: |-
            A pagination cursor to retrieve the next set of results for the
            original query. Only present if the request succeeded and additional results
            are available.

            See the [Pagination guide](https://developer.squareup.com/docs/working-with-apis/pagination) for more information.
      description: |-
        Defines the fields that are included in the response body of
        a request to the ListCustomers endpoint.

        One of `errors` or `customers` is present in a given response (never both).
      example:
        customers:
        - id: JDKYHBWT1D4F8MFH63DBMEN8Y4
          created_at: 2016-03-23T20:21:54.859Z
          updated_at: 2016-03-23T20:21:55Z
          given_name: Amelia
          family_name: Earhart
          email_address: Amelia.Earhart@example.com
          address:
            address_line_1: 500 Electric Ave
            address_line_2: Suite 600
            locality: New York
            administrative_district_level_1: NY
            postal_code: "10003"
            country: US
          phone_number: 1-212-555-4240
          reference_id: YOUR_REFERENCE_ID
          note: a customer
          groups:
          - id: 545AXB44B4XXWMVQ4W8SBT3HHF
            name: Aviation Enthusiasts
          - id: 1KB9JE5EGJXCW.REACHABLE
            name: Reachable
          group_ids:
          - 545AXB44B4XXWMVQ4W8SBT3HHF
          segment_ids:
          - 1KB9JE5EGJXCW.REACHABLE
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/ListCustomers/ListCustomersResponse.python
        csharp: /sdk_samples/ListCustomers/ListCustomersResponse.csharp
        java: /sdk_samples/ListCustomers/ListCustomersResponse.java
        php: /sdk_samples/ListCustomers/ListCustomersResponse.php
        javascript: /sdk_samples/ListCustomers/ListCustomersResponse.javascript
        ruby: /sdk_samples/ListCustomers/ListCustomersResponse.ruby
    ListDeviceCodesRequest:
      type: object
      properties:
        cursor:
          type: string
          description: |-
            A pagination cursor returned by a previous call to this endpoint.
            Provide this to retrieve the next set of results for your original query.

            See [Paginating results](#paginatingresults) for more information.
        location_id:
          type: string
          description: |-
            If specified, only returns DeviceCodes of the specified location.
            Returns DeviceCodes of all locations if empty.
        product_type:
          $ref: '#/components/schemas/ProductType'
      example: {}
      x-release-status: BETA
    ListDeviceCodesResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        device_codes:
          type: array
          description: The queried DeviceCode.
          items:
            $ref: '#/components/schemas/DeviceCode'
        cursor:
          type: string
          description: |-
            A pagination cursor to retrieve the next set of results for your
            original query to the endpoint. This value is present only if the request
            succeeded and additional results are available.

            See [Paginating results](#paginatingresults) for more information.
      example:
        device_codes:
        - id: B3Z6NAMYQSMTM
          name: Counter 1
          code: EBCARJ
          product_type: TERMINAL_API
          location_id: B5E4484SHHNYH
          created_at: 2020-02-06T18:44:33.000Z
          pair_by: 2020-02-06T18:49:33.000Z
          status: PAIRED
          device_id: 907CS13101300122
          status_changed_at: 2020-02-06T18:47:28.000Z
        - id: YKGMJMYK8H4PQ
          name: Unused device code
          code: GVXNYN
          product_type: TERMINAL_API
          location_id: A6SYFRSV4WAFW
          pair_by: 2020-02-07T20:00:04.000Z
          created_at: 2020-02-07T19:55:04.000Z
          status: UNPAIRED
          status_changed_at: 2020-02-07T19:55:04.000Z
      x-release-status: BETA
    ListDisputeEvidenceRequest:
      type: object
      properties: {}
      description: Defines parameters for a ListDisputeEvidence request.
      example: {}
      x-release-status: BETA
    ListDisputeEvidenceResponse:
      type: object
      properties:
        evidence:
          type: array
          description: The list of evidence previously uploaded to the specified dispute.
          items:
            $ref: '#/components/schemas/DisputeEvidence'
        errors:
          type: array
          description: Information on errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: Defines fields in a ListDisputeEvidence response.
      example:
        evidence:
        - evidence_type: GENERIC_EVIDENCE
          uploaded_at: uploaded_at
          evidence_id: evidence_id
          dispute_id: dispute_id
        - evidence_type: GENERIC_EVIDENCE
          uploaded_at: uploaded_at
          evidence_id: evidence_id
          dispute_id: dispute_id
        errors:
        - code: INTERNAL_SERVER_ERROR
          field: field
          detail: detail
          category: API_ERROR
        - code: INTERNAL_SERVER_ERROR
          field: field
          detail: detail
          category: API_ERROR
      x-release-status: BETA
    ListDisputesRequest:
      type: object
      properties:
        cursor:
          type: string
          description: |-
            A pagination cursor returned by a previous call to this endpoint.
            Provide this to retrieve the next set of results for the original query.
            For more information, see [Paginating](https://developer.squareup.com/docs/basics/api101/pagination).
        states:
          type: array
          description: |-
            The dispute states to filter the result.
            If not specified, the endpoint
            returns all open disputes (dispute status is not
            `INQUIRY_CLOSED`, `WON`, or `LOST`).
            See [DisputeState](#type-disputestate) for possible values
          items:
            $ref: '#/components/schemas/DisputeState'
        location_id:
          maxLength: 40
          minLength: 1
          type: string
          description: "The ID of the location for which to return \na list of disputes.\
            \ If not specified,\nthe endpoint returns all open disputes\n(dispute\
            \ status is not `INQUIRY_CLOSED`, `WON`, or \n`LOST`) associated with\
            \ all locations."
      description: Defines request parameters for the ListDisputes endpoint.
      example: {}
      x-release-status: BETA
    ListDisputesResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
        disputes:
          type: array
          description: The list of Disputes.
          items:
            $ref: '#/components/schemas/Dispute'
        cursor:
          type: string
          description: |-
            The pagination cursor to be used in a subsequent request.
            If unset, this is the final response.
            For more information, see [Paginating](https://developer.squareup.com/docs/basics/api101/pagination).
      description: Defines fields in a ListDisputes response.
      example:
        disputes:
        - dispute_id: OnY1AZwhSi775rbNIK4gv
          amount_money:
            amount: 1000
            currency: USD
          reason: NO_KNOWLEDGE
          state: EVIDENCE_REQUIRED
          due_at: 2018-10-11T00:00:00.000Z
          disputed_payments:
          - payment_id: APgIq6RX2jM6DKDhMHiC6QEkuaB
          card_brand: visa
          created_at: 2018-10-12T02:20:25.577Z
          updated_at: 2018-10-12T02:20:25.577Z
          brand_dispute_id: "100000809947"
        cursor: G1aSTRm48CLjJsg6Sg3hQN1b1OMaoVuG
      x-release-status: BETA
    ListEmployeeWagesRequest:
      type: object
      properties:
        employee_id:
          type: string
          description: Filter wages returned to only those that are associated with
            the specified employee.
        limit:
          maximum: 200
          minimum: 1
          type: integer
          description: |-
            Maximum number of Employee Wages to return per page. Can range between
            1 and 200. The default is the maximum at 200.
        cursor:
          type: string
          description: Pointer to the next page of Employee Wage results to fetch.
      description: A request for a set of `EmployeeWage` objects
      x-release-status: DEPRECATED
      x-params-example: ?employee_id=33fJchumvVdJwxV0H6L9&limit=4&cursor=s4R0Z6ecFTzTC4jz8sUDBQTudX3KE313OT9fCt3VUgsXM4sMgED
    ListEmployeeWagesResponse:
      type: object
      properties:
        employee_wages:
          type: array
          description: A page of Employee Wage results.
          items:
            $ref: '#/components/schemas/EmployeeWage'
        cursor:
          type: string
          description: |-
            Value supplied in the subsequent request to fetch the next next page
            of Employee Wage results.
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: "The response to a request for a set of `EmployeeWage` objects.\
        \ Contains \na set of `EmployeeWage`."
      example:
        employee_wages:
        - id: pXS3qCv7BERPnEGedM4S8mhm
          employee_id: 33fJchumvVdJwxV0H6L9
          title: Manager
          hourly_rate:
            amount: 3250
            currency: USD
        - id: rZduCkzYDUVL3ovh1sQgbue6
          employee_id: 33fJchumvVdJwxV0H6L9
          title: Cook
          hourly_rate:
            amount: 2600
            currency: USD
        - id: FxLbs5KpPUHa8wyt5ctjubDX
          employee_id: 33fJchumvVdJwxV0H6L9
          title: Barista
          hourly_rate:
            amount: 1600
            currency: USD
        - id: vD1wCgijMDR3cX5TPnu7VXto
          employee_id: 33fJchumvVdJwxV0H6L9
          title: Cashier
          hourly_rate:
            amount: 1700
            currency: USD
        cursor: 2fofTniCgT0yIPAq26kmk0YyFQJZfbWkh73OOnlTHmTAx13NgED
      x-release-status: DEPRECATED
    ListEmployeesRequest:
      type: object
      properties:
        location_id:
          type: string
        status:
          $ref: '#/components/schemas/EmployeeStatus'
        limit:
          type: integer
          description: The number of employees to be returned on each page.
        cursor:
          type: string
          description: The token required to retrieve the specified page of results.
      x-release-status: DEPRECATED
    ListEmployeesResponse:
      type: object
      properties:
        employees:
          type: array
          items:
            $ref: '#/components/schemas/Employee'
        cursor:
          type: string
          description: The token to be used to retrieve the next page of results.
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      example:
        cursor: cursor
        employees:
        - updated_at: updated_at
          location_ids:
          - location_ids
          - location_ids
          is_owner: true
          last_name: last_name
          created_at: created_at
          phone_number: phone_number
          id: id
          first_name: first_name
          email: email
          status: ACTIVE
        - updated_at: updated_at
          location_ids:
          - location_ids
          - location_ids
          is_owner: true
          last_name: last_name
          created_at: created_at
          phone_number: phone_number
          id: id
          first_name: first_name
          email: email
          status: ACTIVE
        errors:
        - code: INTERNAL_SERVER_ERROR
          field: field
          detail: detail
          category: API_ERROR
        - code: INTERNAL_SERVER_ERROR
          field: field
          detail: detail
          category: API_ERROR
      x-release-status: DEPRECATED
    ListInvoicesRequest:
      required:
      - location_id
      type: object
      properties:
        location_id:
          maxLength: 255
          minLength: 1
          type: string
          description: The ID of the location for which to list invoices.
        cursor:
          type: string
          description: "A pagination cursor returned by a previous call to this endpoint.\
            \ \nProvide this cursor to retrieve the next set of results for your original\
            \ query.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination)."
        limit:
          minimum: 0
          type: integer
          description: "The maximum number of invoices to return (200 is the maximum\
            \ `limit`). \nIf not provided, the server \nuses a default limit of 100\
            \ invoices."
      description: Describes a `ListInvoice` request.
      x-release-status: BETA
    ListInvoicesResponse:
      type: object
      properties:
        invoices:
          type: array
          description: The invoices retrieved.
          items:
            $ref: '#/components/schemas/Invoice'
        cursor:
          type: string
          description: "When a response is truncated, it includes a cursor that you\
            \ can use in a \nsubsequent request to fetch the next set of invoices.\
            \ If empty, this is the final \nresponse. \nFor more information, see\
            \ [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination)."
        errors:
          type: array
          description: Information about errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: Describes a `ListInvoice` response.
      example:
        invoices:
        - invoice:
            id: gt2zv1z6mnUm1V7KMxxf3w
            version: 0
            location_id: ES0RJRZYEC39A
            order_id: CAISENgvlJ6jLWAzERDzjyHVybY
            payment_requests:
            - uid: 2da7964f-f3d2-4f43-81e8-5aa220bf3355
              request_method: EMAIL
              request_type: BALANCE
              due_date: 2030-01-24
              tipping_enabled: true
              reminders:
              - uid: beebd363-e47f-4075-8785-c235aaa7df11
                relative_scheduled_days: -1
                message: Your invoice is due tomorrow
                status: PENDING
              computed_amount_money:
                amount: 10000
                currency: USD
              total_completed_amount_money:
                amount: 0
                currency: USD
            invoice_number: inv-100
            title: Event Planning Services
            description: We appreciate your business!
            scheduled_at: 2030-01-13T10:00:00Z
            status: DRAFT
            timezone: America/Los_Angeles
            created_at: 2020-06-18T17:45:13Z
            updated_at: 2020-06-18T17:45:13Z
            primary_recipient:
              customer_id: JDKYHBWT1D4F8MFH63DBMEN8Y4
              given_name: Amelia
              family_name: Earhart
              email_address: Amelia.Earhart@example.com
              phone_number: 1-212-555-4240
        cursor: CURSOR
      x-release-status: BETA
    ListLocationsRequest:
      type: object
      properties: {}
      description: |-
        Defines the fields that are included in requests to
        the __ListLocations__ endpoint.
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/ListLocations/ListLocationsRequest.python
        csharp: /sdk_samples/ListLocations/ListLocationsRequest.csharp
        java: /sdk_samples/ListLocations/ListLocationsRequest.java
        php: /sdk_samples/ListLocations/ListLocationsRequest.php
        javascript: /sdk_samples/ListLocations/ListLocationsRequest.javascript
        ruby: /sdk_samples/ListLocations/ListLocationsRequest.ruby
    ListLocationsResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        locations:
          type: array
          description: The business locations.
          items:
            $ref: '#/components/schemas/Location'
      description: |-
        Defines the fields that are included in the response body of
        a request to the __ListLocations__ endpoint.

        One of `errors` or `locations` is present in a given response (never both).
      example:
        locations:
        - id: 18YC4JDH91E1H
          name: your location name
          address:
            address_line_1: 123 Main St
            locality: San Francisco
            administrative_district_level_1: CA
            postal_code: "94114"
            country: US
          timezone: America/Los_Angeles
          capabilities:
          - CREDIT_CARD_PROCESSING
          status: ACTIVE
          created_at: 2016-09-19T17:33:12Z
          merchant_id: 3MYCJG5GVYQ8Q
          country: US
          language_code: en-US
          currency: USD
          phone_number: +1 650-354-7217
          business_name: Pumbaa's business name
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/ListLocations/ListLocationsResponse.python
        csharp: /sdk_samples/ListLocations/ListLocationsResponse.csharp
        java: /sdk_samples/ListLocations/ListLocationsResponse.java
        php: /sdk_samples/ListLocations/ListLocationsResponse.php
        javascript: /sdk_samples/ListLocations/ListLocationsResponse.javascript
        ruby: /sdk_samples/ListLocations/ListLocationsResponse.ruby
    ListLoyaltyProgramsRequest:
      type: object
      properties: {}
      description: A request to list `LoyaltyProgram`.
      example: {}
      x-release-status: BETA
    ListLoyaltyProgramsResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        programs:
          type: array
          description: A list of `LoyaltyProgram` for the merchant.
          items:
            $ref: '#/components/schemas/LoyaltyProgram'
      description: A response that contains all loyalty programs.
      example:
        programs:
        - id: d619f755-2d17-41f3-990d-c04ecedd64dd
          status: ACTIVE
          reward_tiers:
          - id: e1b39225-9da5-43d1-a5db-782cdd8ad94f
            points: 10
            name: 10% off entire sale
            definition:
              scope: ORDER
              discount_type: FIXED_PERCENTAGE
              percentage_discount: "10"
            created_at: 2020-04-20T16:55:11Z
          terminology:
            one: Point
            other: Points
          location_ids:
          - P034NEENMD09F
          created_at: 2020-04-20T16:55:11Z
          updated_at: 2020-05-01T02:00:02Z
          accrual_rules:
          - accrual_type: SPEND
            points: 1
            spend_amount_money:
              amount: 100
      x-release-status: BETA
    ListMerchantsRequest:
      type: object
      properties:
        cursor:
          type: integer
          description: The cursor generated by the previous response.
      description: Request object for the [ListMerchant](#endpoint-listmerchant) endpoint.
      x-release-status: PUBLIC
    ListMerchantsResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
        merchant:
          type: array
          description: The requested `Merchant` entities.
          items:
            $ref: '#/components/schemas/Merchant'
        cursor:
          type: integer
          description: If the  response is truncated, the cursor to use in next  request
            to fetch next set of objects.
      description: The response object returned by the [ListMerchant](#endpoint-listmerchant)
        endpoint.
      example:
        merchant:
        - id: DM7VKY8Q63GNP
          business_name: Apple A Day
          country: US
          language_code: en-US
          currency: USD
          status: ACTIVE
          main_location_id: 9A65CGC72ZQG1
      x-release-status: PUBLIC
    ListPaymentRefundsRequest:
      type: object
      properties:
        begin_time:
          type: string
          description: |-
            Timestamp for the beginning of the requested reporting period, in RFC 3339 format.

            Default: The current time minus one year.
        end_time:
          type: string
          description: |-
            Timestamp for the end of the requested reporting period, in RFC 3339 format.

            Default: The current time.
        sort_order:
          type: string
          description: |-
            The order in which results are listed.
            - `ASC` - oldest to newest
            - `DESC` - newest to oldest (default).
        cursor:
          type: string
          description: |-
            A pagination cursor returned by a previous call to this endpoint.
            Provide this to retrieve the next set of results for the original query.

            See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.
        location_id:
          type: string
          description: |-
            Limit results to the location supplied. By default, results are returned
            for all locations associated with the merchant.
        status:
          type: string
          description: |-
            If provided, only refunds with the given status are returned.
            For a list of refund status values, see [PaymentRefund](#type-paymentrefund).

            Default: If omitted refunds are returned regardless of status.
        source_type:
          type: string
          description: |-
            If provided, only refunds with the given source type are returned.
            - `CARD` - List refunds only for payments where card was specified as payment
            source.

            Default: If omitted refunds are returned regardless of source type.
        limit:
          type: integer
          description: |-
            Maximum number of results to be returned in a single page.
            It is possible to receive fewer results than the specified limit on a given page.

            If the supplied value is greater than 100, at most 100 results will be returned.

            Default: `100`
      description: |-
        Retrieves a list of refunds for the account making the request.

        Max results per page: 100
      example: {}
      x-release-status: PUBLIC
    ListPaymentRefundsResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
        refunds:
          type: array
          description: The list of requested refunds.
          items:
            $ref: '#/components/schemas/PaymentRefund'
        cursor:
          type: string
          description: |-
            The pagination cursor to be used in a subsequent request. If empty,
            this is the final response.

            See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.
      description: |-
        Defines the fields that are included in the response body of
        a request to the [ListPaymentRefunds](#endpoint-refunds-listpaymentrefunds) endpoint.

        One of `errors` or `refunds` is present in a given response (never both).
      example:
        refunds:
        - id: O2QAAhTYs7rUfzlxT38GMO7LvaB_q7JwCHtxmgXrh8fAhV468WQ44VxDtL7CU4yVRlsbXmI
          created_at: 2019-07-06T18:01:22.335Z
          updated_at: 2019-07-06T18:06:04.653Z
          status: COMPLETED
          amount_money:
            amount: 1000
            currency: USD
          payment_id: O2QAAhTYs7rUfzlxT38GMO7LvaB
          order_id: 2duiyoqbfeXY0DBi15GEyk5Epa4F
          location_id: XK3DBG77NJBFX
          processing_fee:
          - effective_at: 2019-07-06T20:01:12.000Z
            type: INITIAL
            amount_money:
              amount: -59
              currency: USD
        - id: 8TDIQvFw8PeDIxhSfd5yyX7GuaB_13px5Vrz01qzzuoGzmjsZIxDjfHhbkm2XppBUX1dW7I
          created_at: 2019-07-06T17:01:54.232Z
          updated_at: 2019-07-06T17:21:04.684Z
          status: COMPLETED
          amount_money:
            amount: 1000
            currency: USD
          payment_id: 8TDIQvFw8PeDIxhSfd5yyX7GuaB
          order_id: w6EXfEwS03oTQsnZTCqfE6f67e4F
          processing_fee:
          - effective_at: 2019-07-06T19:01:45.000Z
            type: INITIAL
            amount_money:
              amount: -59
              currency: USD
          location_id: XK3DBG77NJBFX
        cursor: 5evquW1YswHoT4EoyUhzMmTsCnsSXBU9U0WJ4FU4623nrMQcocH0RGU6Up1YkwfiMcF59ood58EBTEGgzMTGHQJpocic7ExOL0NtrTXCeWcv0UJIJNk8eXb
      x-release-status: PUBLIC
    ListPaymentsRequest:
      type: object
      properties:
        begin_time:
          type: string
          description: |-
            Timestamp for the beginning of the reporting period, in RFC 3339 format.
            Inclusive. Default: The current time minus one year.
        end_time:
          type: string
          description: |-
            Timestamp for the end of the requested reporting period, in RFC 3339 format.

            Default: The current time.
        sort_order:
          type: string
          description: |-
            The order in which results are listed.
            - `ASC` - oldest to newest
            - `DESC` - newest to oldest (default).
        cursor:
          type: string
          description: |-
            A pagination cursor returned by a previous call to this endpoint.
            Provide this to retrieve the next set of results for the original query.

            See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.
        location_id:
          type: string
          description: |-
            Limit results to the location supplied. By default, results are returned
            for the default (main) location associated with the merchant.
        total:
          minimum: 0
          type: integer
          description: The exact amount in the total_money for a `Payment`.
          format: int64
        last_4:
          type: string
          description: The last 4 digits of `Payment` card.
        card_brand:
          type: string
          description: The brand of `Payment` card. For example, `VISA`
        limit:
          type: integer
          description: |-
            Maximum number of results to be returned in a single page.
            It is possible to receive fewer results than the specified limit on a given page.

            If the supplied value is greater than 100, at most 100 results will be returned.

            Default: `100`
      description: |-
        Retrieves a list of payments taken by the account making the request.

        Max results per page: 100
      example: {}
      x-release-status: PUBLIC
    ListPaymentsResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
        payments:
          type: array
          description: The requested list of `Payment`s.
          items:
            $ref: '#/components/schemas/Payment'
        cursor:
          type: string
          description: |-
            The pagination cursor to be used in a subsequent request. If empty,
            this is the final response.

            See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.
      description: |-
        Defines the fields that are included in the response body of
        a request to the [ListPayments](#endpoint-payments-listpayments) endpoint.
      example:
        payments:
        - id: ifrBnAil7rRfDtd27cdf9g9WO8paB
          created_at: 2019-07-09T14:36:13.745Z
          updated_at: 2019-07-09T14:36:13.883Z
          amount_money:
            amount: 1000
            currency: USD
          total_money:
            amount: 1000
            currency: USD
          status: APPROVED
          source_type: CARD
          card_details:
            status: AUTHORIZED
            card:
              card_brand: VISA
              last_4: "1111"
              exp_month: 2
              exp_year: 2022
              fingerprint: sq-1-lHpUJIUyqOPQmH89b6GuQEljmc-mZmu4kSTaMlkLDkJI7NVjAl4Zirn2sk3OeyVKVA
            entry_method: KEYED
            cvv_status: CVV_ACCEPTED
            avs_status: AVS_ACCEPTED
            auth_result_code: NQbV3A
          location_id: QLIJX16Q3UZ0A
          order_id: MvfIilKnIYKBium4rauH67wFzRxv
        - id: GQTFp1ZlXdpoW4o6eGiZhbjosiDFf
          created_at: 2019-07-08T01:00:51.607Z
          updated_at: 2019-07-08T01:13:58.508Z
          amount_money:
            amount: 1000
            currency: USD
          total_money:
            amount: 1000
            currency: USD
          status: COMPLETED
          source_type: CARD
          card_details:
            status: CAPTURED
            card:
              card_brand: VISA
              last_4: "2796"
              exp_month: 7
              exp_year: 2026
              fingerprint: sq-1-TpmjbNBMFdibiIjpQI5LiRgNUBC7u1689i0TgHjnlyHEWYB7tnn-K4QbW4ttvtaqXw
            entry_method: ON_FILE
            cvv_status: CVV_ACCEPTED
            avs_status: AVS_ACCEPTED
            auth_result_code: vPIr0K
          location_id: XTI0H92143A39
          order_id: m2Hr8Hk8A3CTyQQ1k4ynExg92tO3
          customer_id: RDX9Z4XTIZR7MRZJUXNY9HUK6I
          processing_fee:
          - effective_at: 2019-07-08T03:00:53.000Z
            type: INITIAL
            amount_money:
              amount: 59
              currency: USD
        cursor: 2TTnuq0yRYDdBRSFF2XuFkgO1Bclt4ZHNI7YrFNeyZ6rL1WZXkdnLn10H8fBIwFKdKW1Af6ifRa
      x-release-status: PUBLIC
    ListRefundsRequest:
      type: object
      properties:
        begin_time:
          type: string
          description: |-
            The beginning of the requested reporting period, in RFC 3339 format.

            See [Date ranges](#dateranges) for details on date inclusivity/exclusivity.

            Default value: The current time minus one year.
        end_time:
          type: string
          description: |-
            The end of the requested reporting period, in RFC 3339 format.

            See [Date ranges](#dateranges) for details on date inclusivity/exclusivity.

            Default value: The current time.
        sort_order:
          $ref: '#/components/schemas/SortOrder'
        cursor:
          type: string
          description: |-
            A pagination cursor returned by a previous call to this endpoint.
            Provide this to retrieve the next set of results for your original query.

            See [Paginating results](#paginatingresults) for more information.
      description: |-
        Defines the query parameters that can be included in
        a request to the [ListRefunds](#endpoint-listrefunds) endpoint.

        Deprecated - recommend using [SearchOrders](#endpoint-orders-searchorders)
      x-release-status: DEPRECATED
      x-params-example: ?begin_time=2016-01-15T00:00:00Z&end_time=2016-01-31T00:00:00Z
      x-sq-sdk-sample-code:
        python: /sdk_samples/ListRefunds/ListRefundsRequest.python
        csharp: /sdk_samples/ListRefunds/ListRefundsRequest.csharp
        java: /sdk_samples/ListRefunds/ListRefundsRequest.java
        php: /sdk_samples/ListRefunds/ListRefundsRequest.php
        javascript: /sdk_samples/ListRefunds/ListRefundsRequest.javascript
        ruby: /sdk_samples/ListRefunds/ListRefundsRequest.ruby
    ListRefundsResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        refunds:
          type: array
          description: An array of refunds that match your query.
          items:
            $ref: '#/components/schemas/Refund'
        cursor:
          type: string
          description: |-
            A pagination cursor for retrieving the next set of results,
            if any remain. Provide this value as the `cursor` parameter in a subsequent
            request to this endpoint.

            See [Paginating results](#paginatingresults) for more information.
      description: |-
        Defines the fields that are included in the response body of
        a request to the [ListRefunds](#endpoint-listrefunds) endpoint.

        One of `errors` or `refunds` is present in a given response (never both).
      example:
        refunds:
        - id: b27436d1-7f8e-5610-45c6-417ef71434b4-SW
          location_id: 18YC4JDH91E1H
          transaction_id: KnL67ZIwXCPtzOrqj0HrkxMF
          tender_id: MtZRYYdDrYNQbOvV7nbuBvMF
          created_at: 2016-01-20T00:28:18Z
          reason: some reason
          amount_money:
            amount: 100
            currency: USD
          additional_recipients:
          - location_id: 057P5VYJ4A5X1
            description: Application fees
            amount_money:
              amount: 10
              currency: USD
          status: APPROVED
      x-release-status: DEPRECATED
      x-sq-sdk-sample-code:
        python: /sdk_samples/ListRefunds/ListRefundsResponse.python
        csharp: /sdk_samples/ListRefunds/ListRefundsResponse.csharp
        java: /sdk_samples/ListRefunds/ListRefundsResponse.java
        php: /sdk_samples/ListRefunds/ListRefundsResponse.php
        javascript: /sdk_samples/ListRefunds/ListRefundsResponse.javascript
        ruby: /sdk_samples/ListRefunds/ListRefundsResponse.ruby
    ListSubscriptionEventsRequest:
      type: object
      properties:
        cursor:
          type: string
          description: |-
            A pagination cursor returned by a previous call to this endpoint.
            Provide this to retrieve the next set of results for the original query.

            For more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination).
        limit:
          minimum: 1
          type: integer
          description: "The upper limit on the number of subscription events to return\
            \ \nin the response. \n\nDefault: `200`"
      description: "Defines parameters in a \n[ListSubscriptionEvents](#endpoint-subscriptions-listsubscriptionevents)\n\
        endpoint request."
      x-release-status: BETA
    ListSubscriptionEventsResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information about errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
        subscription_events:
          type: array
          description: The `SubscriptionEvents` retrieved.
          items:
            $ref: '#/components/schemas/SubscriptionEvent'
        cursor:
          type: string
          description: "When a response is truncated, it includes a cursor that you\
            \ can \nuse in a subsequent request to fetch the next set of events. \n\
            If empty, this is the final response.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination)."
      description: |-
        Defines the fields that are included in the response from the
        [ListSubscriptionEvents](#endpoint-subscriptions-listsubscriptionevents)
        endpoint.
      example:
        subscription_events:
        - id: 06809161-3867-4598-8269-8aea5be4f9de
          subscription_event_type: START_SUBSCRIPTION
          effective_date: 2020-04-24
          plan_id: 6JHXF3B2CW3YKHDV4XEM674H
        - id: a0c08083-5db0-4800-85c7-d398de4fbb6e
          subscription_event_type: STOP_SUBSCRIPTION
          effective_date: 2020-05-06
          plan_id: 6JHXF3B2CW3YKHDV4XEM674H
      x-release-status: BETA
    ListTeamMemberWagesRequest:
      type: object
      properties:
        team_member_id:
          type: string
          description: |-
            Filter wages returned to only those that are associated with the
            specified team member.
        limit:
          maximum: 200
          minimum: 1
          type: integer
          description: |-
            Maximum number of Team Member Wages to return per page. Can range between
            1 and 200. The default is the maximum at 200.
        cursor:
          type: string
          description: Pointer to the next page of Employee Wage results to fetch.
      description: A request for a set of `TeamMemberWage` objects
      x-release-status: PUBLIC
      x-params-example: ?team_member_id=33fJchumvVdJwxV0H6L9&limit=4&cursor=s4R0Z6ecFTzTC4jz8sUDBQTudX3KE313OT9fCt3VUgsXM4sMgED
    ListTeamMemberWagesResponse:
      type: object
      properties:
        team_member_wages:
          type: array
          description: A page of Team Member Wage results.
          items:
            $ref: '#/components/schemas/TeamMemberWage'
        cursor:
          type: string
          description: |-
            Value supplied in the subsequent request to fetch the next next page
            of Team Member Wage results.
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: |-
        The response to a request for a set of `TeamMemberWage` objects. Contains
        a set of `TeamMemberWage`.
      example:
        team_member_wages:
        - id: pXS3qCv7BERPnEGedM4S8mhm
          team_member_id: 33fJchumvVdJwxV0H6L9
          title: Manager
          hourly_rate:
            amount: 3250
            currency: USD
        - id: rZduCkzYDUVL3ovh1sQgbue6
          team_member_id: 33fJchumvVdJwxV0H6L9
          title: Cook
          hourly_rate:
            amount: 2600
            currency: USD
        - id: FxLbs5KpPUHa8wyt5ctjubDX
          team_member_id: 33fJchumvVdJwxV0H6L9
          title: Barista
          hourly_rate:
            amount: 1600
            currency: USD
        - id: vD1wCgijMDR3cX5TPnu7VXto
          team_member_id: 33fJchumvVdJwxV0H6L9
          title: Cashier
          hourly_rate:
            amount: 1700
            currency: USD
        cursor: 2fofTniCgT0yIPAq26kmk0YyFQJZfbWkh73OOnlTHmTAx13NgED
      x-release-status: PUBLIC
    ListTransactionsRequest:
      type: object
      properties:
        begin_time:
          type: string
          description: |-
            The beginning of the requested reporting period, in RFC 3339 format.

            See [Date ranges](#dateranges) for details on date inclusivity/exclusivity.

            Default value: The current time minus one year.
        end_time:
          type: string
          description: |-
            The end of the requested reporting period, in RFC 3339 format.

            See [Date ranges](#dateranges) for details on date inclusivity/exclusivity.

            Default value: The current time.
        sort_order:
          $ref: '#/components/schemas/SortOrder'
        cursor:
          type: string
          description: |-
            A pagination cursor returned by a previous call to this endpoint.
            Provide this to retrieve the next set of results for your original query.

            See [Paginating results](#paginatingresults) for more information.
      description: |-
        Defines the query parameters that can be included in
        a request to the [ListTransactions](#endpoint-listtransactions) endpoint.

        Deprecated - recommend using [SearchOrders](#endpoint-orders-searchorders)
      x-release-status: DEPRECATED
      x-params-example: ?begin_time=2016-01-15T00:00:00Z&end_time=2016-01-31T00:00:00Z
      x-sq-sdk-sample-code:
        python: /sdk_samples/ListTransactions/ListTransactionsRequest.python
        csharp: /sdk_samples/ListTransactions/ListTransactionsRequest.csharp
        java: /sdk_samples/ListTransactions/ListTransactionsRequest.java
        php: /sdk_samples/ListTransactions/ListTransactionsRequest.php
        javascript: /sdk_samples/ListTransactions/ListTransactionsRequest.javascript
        ruby: /sdk_samples/ListTransactions/ListTransactionsRequest.ruby
    ListTransactionsResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        transactions:
          type: array
          description: An array of transactions that match your query.
          items:
            $ref: '#/components/schemas/Transaction'
        cursor:
          type: string
          description: |-
            A pagination cursor for retrieving the next set of results,
            if any remain. Provide this value as the `cursor` parameter in a subsequent
            request to this endpoint.

            See [Paginating results](#paginatingresults) for more information.
      description: |-
        Defines the fields that are included in the response body of
        a request to the [ListTransactions](#endpoint-listtransactions) endpoint.

        One of `errors` or `transactions` is present in a given response (never both).
      example:
        transactions:
        - id: KnL67ZIwXCPtzOrqj0HrkxMF
          location_id: 18YC4JDH91E1H
          created_at: 2016-01-20T22:57:56Z
          tenders:
          - id: MtZRYYdDrYNQbOvV7nbuBvMF
            location_id: 18YC4JDH91E1H
            transaction_id: KnL67ZIwXCPtzOrqj0HrkxMF
            created_at: 2016-01-20T22:57:56Z
            note: some optional note
            amount_money:
              amount: 5000
              currency: USD
            processing_fee_money:
              amount: 138
              currency: USD
            type: CARD
            card_details:
              status: CAPTURED
              card:
                card_brand: VISA
                last_4: "1111"
              entry_method: KEYED
            additional_recipients:
            - location_id: 057P5VYJ4A5X1
              description: Application fees
              amount_money:
                amount: 20
                currency: USD
          refunds:
          - id: 7a5RcVI0CxbOcJ2wMOkE
            location_id: 18YC4JDH91E1H
            transaction_id: KnL67ZIwXCPtzOrqj0HrkxMF
            tender_id: MtZRYYdDrYNQbOvV7nbuBvMF
            created_at: 2016-01-20T22:59:20Z
            reason: some reason why
            amount_money:
              amount: 5000
              currency: USD
            status: APPROVED
            processing_fee_money:
              amount: 138
              currency: USD
            additional_recipients:
            - location_id: 057P5VYJ4A5X1
              description: Application fees
              amount_money:
                amount: 100
                currency: USD
          reference_id: some optional reference id
          product: EXTERNAL_API
      x-release-status: DEPRECATED
      x-sq-sdk-sample-code:
        python: /sdk_samples/ListTransactions/ListTransactionsResponse.python
        csharp: /sdk_samples/ListTransactions/ListTransactionsResponse.csharp
        java: /sdk_samples/ListTransactions/ListTransactionsResponse.java
        php: /sdk_samples/ListTransactions/ListTransactionsResponse.php
        javascript: /sdk_samples/ListTransactions/ListTransactionsResponse.javascript
        ruby: /sdk_samples/ListTransactions/ListTransactionsResponse.ruby
    ListWorkweekConfigsRequest:
      type: object
      properties:
        limit:
          minimum: 0
          type: integer
          description: Maximum number of Workweek Configs to return per page.
        cursor:
          type: string
          description: Pointer to the next page of Workweek Config results to fetch.
      description: A request for a set of `WorkweekConfig` objects
      x-release-status: PUBLIC
      x-params-example: ?limit=1&cursor=s4R0Z6ecFTzTC4jz8sUDBQTudX3KE313OT9fCt3VUgsXM4sMgED
    ListWorkweekConfigsResponse:
      type: object
      properties:
        workweek_configs:
          type: array
          description: A page of Employee Wage results.
          items:
            $ref: '#/components/schemas/WorkweekConfig'
        cursor:
          type: string
          description: |-
            Value supplied in the subsequent request to fetch the next page of
            Employee Wage results.
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: |-
        The response to a request for a set of `WorkweekConfig` objects. Contains
        the requested `WorkweekConfig` objects. May contain a set of `Error` objects if
        the request resulted in errors.
      example:
        workweek_configs:
        - id: FY4VCAQN700GM
          start_of_week: MON
          start_of_day_local_time: 10:00
          version: 11
          created_at: 2016-02-04T00:58:24Z
          updated_at: 2019-02-28T01:04:35Z
        cursor: 2fofTniCgT0yIPAq26kmk0YyFQJZfbWkh73OOnlTHmTAx13NgED
      x-release-status: PUBLIC
    Location:
      type: object
      properties:
        id:
          type: string
          description: The Square-issued ID of the location.
          readOnly: true
        name:
          type: string
          description: |-
            The name of the location.
            This information appears in the dashboard as the nickname.
        address:
          $ref: '#/components/schemas/Address'
        timezone:
          type: string
          description: |-
            The [IANA Timezone](https://www.iana.org/time-zones) identifier for
            the timezone of the location.
        capabilities:
          type: array
          description: |-
            The Square features that are enabled for the location.
            See [LocationCapability](#type-locationcapability) for possible values.
            See [LocationCapability](#type-locationcapability) for possible values
          readOnly: true
          items:
            $ref: '#/components/schemas/LocationCapability'
        status:
          $ref: '#/components/schemas/LocationStatus'
        created_at:
          type: string
          description: The time when the location was created, in RFC 3339 format.
          readOnly: true
        merchant_id:
          type: string
          description: The ID of the merchant that owns the location.
          readOnly: true
        country:
          $ref: '#/components/schemas/Country'
        language_code:
          type: string
          description: |-
            The language associated with the location, in
            [BCP 47 format](https://tools.ietf.org/html/bcp47#appendix-A).
        currency:
          $ref: '#/components/schemas/Currency'
        phone_number:
          type: string
          description: The phone number of the location in human readable format.
        business_name:
          type: string
          description: |-
            The business name of the location
            This is the name visible to the customers of the location.
            For example, this name appears on customer receipts.
        type:
          $ref: '#/components/schemas/LocationType'
        website_url:
          type: string
          description: The website URL of the location.
        business_hours:
          $ref: '#/components/schemas/BusinessHours'
        business_email:
          type: string
          description: |-
            The email of the location.
            This email is visible to the customers of the location.
            For example, the email appears on customer receipts.
        description:
          type: string
          description: The description of the location.
        twitter_username:
          type: string
          description: The Twitter username of the location without the '@' symbol.
        instagram_username:
          type: string
          description: The Instagram username of the location without the '@' symbol.
        facebook_url:
          type: string
          description: The Facebook profile URL of the location. The URL should begin
            with 'facebook.com/'.
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        logo_url:
          type: string
          description: The URL of the logo image for the location.
          readOnly: true
        pos_background_url:
          type: string
          description: The URL of the Point of Sale background image for the location.
          readOnly: true
        mcc:
          type: string
          description: |-
            The merchant category code (MCC) of the location, as standardized by ISO 18245.
            The MCC describes the kind of goods or services sold at the location.
          readOnly: true
          x-release-status: BETA
      x-release-status: PUBLIC
    LoyaltyAccount:
      required:
      - mappings
      - program_id
      type: object
      properties:
        id:
          maxLength: 36
          type: string
          description: The Square-assigned ID of the loyalty account.
          readOnly: true
        mappings:
          type: array
          description: "The list of mappings that the account is associated with.\
            \ \nCurrently, a buyer can only be mapped to a loyalty account using \n\
            a phone number. Therefore, the list can only have one mapping."
          items:
            $ref: '#/components/schemas/LoyaltyAccountMapping'
        program_id:
          maxLength: 36
          minLength: 1
          type: string
          description: The Square-assigned ID of the [loyalty program](#type-LoyaltyProgram)
            to which the account belongs.
        balance:
          type: integer
          description: The available point balance in the loyalty account.
          readOnly: true
        lifetime_points:
          minimum: 0
          type: integer
          description: The total points accrued during the lifetime of the account.
          readOnly: true
        customer_id:
          type: string
          description: The Square-assigned ID of the [customer](#type-Customer) that
            is associated with the account.
        enrolled_at:
          type: string
          description: The timestamp when enrollment occurred, in RFC 3339 format.
          readOnly: true
        created_at:
          type: string
          description: The timestamp when the loyalty account was created, in RFC
            3339 format.
          readOnly: true
        updated_at:
          type: string
          description: The timestamp when the loyalty account was last updated, in
            RFC 3339 format.
          readOnly: true
      description: "Describes a loyalty account. For more information, see \n[Loyalty\
        \ Overview](https://developer.squareup.com/docs/docs/loyalty/overview)."
      x-release-status: BETA
    LoyaltyAccountCreatedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        type:
          type: string
          description: The type of event this represents, `"loyalty.account.created"`.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/LoyaltyAccountCreatedWebhookData'
      description: Published when a [loyalty account](#type-LoyaltyAccount) is created.
      example:
        merchant_id: C337NFWQT2A6W
        type: loyalty.account.created
        event_id: 875f2038-6015-492e-9f29-d040b3809e49
        created_at: 2020-05-13T01:41:35.157Z
        data:
          type: loyalty
          id: ba2f8ab6-e131-46d9-9882-17714404eb49
          object:
            loyalty_account:
              id: ba2f8ab6-e131-46d9-9882-17714404eb49
              program_id: 5216e8b2-d43e-41e2-9ed8-eccf3e892aef
              balance: 0
              lifetime_points: 0
              mappings:
              - created_at: 2020-05-13T01:41:34Z
                id: 664c22ba-9460-45a5-8917-381ae72dcfdc
                type: PHONE
                value: +14155551234
              created_at: 2020-05-13T01:41:34Z
              updated_at: 2020-05-13T01:41:34Z
      x-release-status: BETA
      x-visibility: DOC_ONLY
      x-webhook:
        event: loyalty.account.created
        scopes:
        - LOYALTY_READ
      x-api: '#/components/x-apis/Loyalty'
      x-since: 2020-05-28
    LoyaltyAccountCreatedWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the affected object’s type, `"loyalty.account"`.
        id:
          type: string
          description: ID of the affected loyalty account.
        object:
          $ref: '#/components/schemas/LoyaltyAccount'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    LoyaltyAccountDeletedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        type:
          type: string
          description: The type of event this represents, `"loyalty.account.deleted"`.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/LoyaltyAccountDeletedWebhookData'
      description: Published when a [loyalty account](#type-LoyaltyAccount) is deleted.
      example:
        merchant_id: C337NFWQT2A6W
        type: loyalty.account.deleted
        event_id: 7c365846-a64b-40ba-a406-8a0354a63d79
        created_at: 2020-05-13T01:50:45.656Z
        data:
          type: loyalty
          id: ba2f8ab6-e131-46d9-9882-17714404eb49
          object:
            loyalty_account:
              id: ba2f8ab6-e131-46d9-9882-17714404eb49
              program_id: 5216e8b2-d43e-41e2-9ed8-eccf3e892aef
              balance: 10
              lifetime_points: 10
              mappings:
              - created_at: 2020-05-13T01:41:34Z
                id: 664c22ba-9460-45a5-8917-381ae72dcfdc
                type: PHONE
                value: +14155551234
              created_at: 2020-05-13T01:41:34Z
              updated_at: 2020-05-13T01:41:34Z
      x-release-status: BETA
      x-visibility: DOC_ONLY
      x-webhook:
        event: loyalty.account.deleted
        scopes:
        - LOYALTY_READ
      x-api: '#/components/x-apis/Loyalty'
      x-since: 2020-05-28
    LoyaltyAccountDeletedWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the affected object’s type, `"loyalty.account"`.
        id:
          type: string
          description: ID of the affected loyalty account.
        object:
          $ref: '#/components/schemas/LoyaltyAccount'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    LoyaltyAccountMapping:
      required:
      - type
      - value
      type: object
      properties:
        id:
          maxLength: 36
          type: string
          description: The Square-assigned ID of the mapping.
          readOnly: true
        type:
          $ref: '#/components/schemas/LoyaltyAccountMappingType'
        value:
          minLength: 1
          type: string
          description: The phone number, in E.164 format. For example, "+14155551111".
        created_at:
          type: string
          description: The timestamp when the mapping was created, in RFC 3339 format.
          readOnly: true
      description: "Associates a loyalty account with the buyer's phone number.\n\
        or more information, see \n[Loyalty Overview](https://developer.squareup.com/docs/docs/loyalty/overview)."
      x-release-status: BETA
    LoyaltyAccountUpdatedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        type:
          type: string
          description: The type of event this represents, `"loyalty.account.updated"`.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/LoyaltyAccountUpdatedWebhookData'
      description: Published when a [loyalty account](#type-LoyaltyAccount) is updated.
      example:
        merchant_id: C337NFWQT2A6W
        type: loyalty.account.updated
        event_id: 3ca83966-230e-4a61-8484-22ea749ea765
        created_at: 2020-05-13T01:46:58.794Z
        data:
          type: loyalty
          id: ba2f8ab6-e131-46d9-9882-17714404eb49
          object:
            loyalty_account:
              id: ba2f8ab6-e131-46d9-9882-17714404eb49
              program_id: 5216e8b2-d43e-41e2-9ed8-eccf3e892aef
              balance: 10
              lifetime_points: 10
              mappings:
              - created_at: 2020-05-13T01:41:34Z
                id: 664c22ba-9460-45a5-8917-381ae72dcfdc
                type: PHONE
                value: +14155551234
              created_at: 2020-05-13T01:41:34Z
              updated_at: 2020-05-13T01:41:34Z
      x-release-status: BETA
      x-visibility: DOC_ONLY
      x-webhook:
        event: loyalty.account.updated
        scopes:
        - LOYALTY_READ
      x-api: '#/components/x-apis/Loyalty'
      x-since: 2020-05-28
    LoyaltyAccountUpdatedWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the affected object’s type, `"loyalty.account"`.
        id:
          type: string
          description: ID of the affected loyalty account.
        object:
          $ref: '#/components/schemas/LoyaltyAccount'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    LoyaltyEvent:
      required:
      - created_at
      - id
      - loyalty_account_id
      - source
      - type
      type: object
      properties:
        id:
          minLength: 1
          type: string
          description: The Square-assigned ID of the loyalty event.
          readOnly: true
        type:
          $ref: '#/components/schemas/LoyaltyEventType'
        created_at:
          minLength: 1
          type: string
          description: The timestamp when the event was created, in RFC 3339 format.
          readOnly: true
        accumulate_points:
          $ref: '#/components/schemas/LoyaltyEventAccumulatePoints'
        create_reward:
          $ref: '#/components/schemas/LoyaltyEventCreateReward'
        redeem_reward:
          $ref: '#/components/schemas/LoyaltyEventRedeemReward'
        delete_reward:
          $ref: '#/components/schemas/LoyaltyEventDeleteReward'
        adjust_points:
          $ref: '#/components/schemas/LoyaltyEventAdjustPoints'
        loyalty_account_id:
          maxLength: 36
          minLength: 1
          type: string
          description: The ID of the [loyalty account](#type-LoyaltyAccount) in which
            the event occurred.
          readOnly: true
        location_id:
          type: string
          description: The ID of the [location](#type-Location) where the event occurred.
          readOnly: true
        source:
          $ref: '#/components/schemas/LoyaltyEventSource'
        expire_points:
          $ref: '#/components/schemas/LoyaltyEventExpirePoints'
        other_event:
          $ref: '#/components/schemas/LoyaltyEventOther'
      description: "Provides information about a loyalty event. \nFor more information,\
        \ see [Loyalty events](https://developer.squareup.com/docs/docs/loyalty-api/overview/#loyalty-events)."
      x-release-status: BETA
    LoyaltyEventAccumulatePoints:
      type: object
      properties:
        loyalty_program_id:
          maxLength: 36
          type: string
          description: The ID of the [loyalty program](#type-LoyaltyProgram).
          readOnly: true
        points:
          minimum: 1
          type: integer
          description: The number of points accumulated by the event.
        order_id:
          type: string
          description: |-
            The ID of the [order](#type-Order) for which the buyer accumulated the points.
            This field is returned only if the Orders API is used to process orders.
      description: Provides metadata when the event `type` is `ACCUMULATE_POINTS`.
      x-release-status: BETA
    LoyaltyEventAdjustPoints:
      required:
      - points
      type: object
      properties:
        loyalty_program_id:
          maxLength: 36
          type: string
          description: The Square-assigned ID of the [loyalty program](#type-LoyaltyProgram).
          readOnly: true
        points:
          type: integer
          description: The number of points added or removed.
        reason:
          type: string
          description: The reason for the adjustment of points.
      description: Provides metadata when the event `type` is `ADJUST_POINTS`.
      x-release-status: BETA
    LoyaltyEventCreateReward:
      required:
      - loyalty_program_id
      - points
      type: object
      properties:
        loyalty_program_id:
          maxLength: 36
          minLength: 1
          type: string
          description: The ID of the [loyalty program](#type-LoyaltyProgram).
          readOnly: true
        reward_id:
          maxLength: 36
          type: string
          description: |-
            The Square-assigned ID of the created [loyalty reward](#type-LoyaltyReward).
            This field is returned only if the event source is `LOYALTY_API`.
          readOnly: true
        points:
          maximum: 0
          type: integer
          description: The loyalty points used to create the reward.
          readOnly: true
      description: Provides metadata when the event `type` is `CREATE_REWARD`.
      x-release-status: BETA
    LoyaltyEventCreatedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        type:
          type: string
          description: The type of event this represents, `"loyalty.event.created"`.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/LoyaltyEventCreatedWebhookData'
      description: Published when a [loyalty event](#type-LoyaltyEvent) is created.
      example:
        merchant_id: C337NFWQT2A6W
        type: loyalty.event.created
        event_id: f151e2c6-9340-4cca-9d37-1bcd1c2d6a0d
        created_at: 2020-05-13T01:46:58.783Z
        data:
          type: loyalty
          id: iirpaae81f66e-a7ea-4fcf-a04f-f0d29fdc60e6
          object:
            loyalty_event:
              id: d0bd89a5-3d04-389e-a54b-4e509658fe41
              location_id: 2Z3BMKQB939X0
              loyalty_account_id: ba2f8ab6-e131-46d9-9882-17714404eb49
              source: SQUARE
              type: ADJUST_POINTS
              adjust_points:
                loyalty_program_id: 5216e8b2-d43e-41e2-9ed8-eccf3e892aef
                points: 10
              created_at: 2020-05-13T01:46:58Z
      x-release-status: BETA
      x-visibility: DOC_ONLY
      x-webhook:
        event: loyalty.event.created
        scopes:
        - LOYALTY_READ
      x-api: '#/components/x-apis/Loyalty'
      x-since: 2020-05-28
    LoyaltyEventCreatedWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the affected object’s type, `"loyalty.event"`.
        id:
          type: string
          description: ID of the affected loyalty event.
        object:
          $ref: '#/components/schemas/LoyaltyEvent'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    LoyaltyEventDateTimeFilter:
      required:
      - created_at
      type: object
      properties:
        created_at:
          $ref: '#/components/schemas/TimeRange'
      description: Filter events by date time range.
      x-release-status: BETA
    LoyaltyEventDeleteReward:
      required:
      - loyalty_program_id
      - points
      type: object
      properties:
        loyalty_program_id:
          maxLength: 36
          minLength: 1
          type: string
          description: The ID of the [loyalty program](#type-LoyaltyProgram).
          readOnly: true
        reward_id:
          maxLength: 36
          type: string
          description: |-
            The ID of the deleted [loyalty reward](#type-LoyaltyReward).
            This field is returned only if the event source is `LOYALTY_API`.
          readOnly: true
        points:
          minimum: 0
          type: integer
          description: The number of points returned to the loyalty account.
          readOnly: true
      description: Provides metadata when the event `type` is `DELETE_REWARD`.
      x-release-status: BETA
    LoyaltyEventExpirePoints:
      required:
      - loyalty_program_id
      - points
      type: object
      properties:
        loyalty_program_id:
          maxLength: 36
          minLength: 1
          type: string
          description: The Square-assigned ID of the [loyalty program](#type-LoyaltyProgram).
          readOnly: true
        points:
          maximum: 0
          type: integer
          description: The number of points expired.
      description: Provides metadata when the event `type` is `EXPIRE_POINTS`.
      x-release-status: BETA
    LoyaltyEventFilter:
      type: object
      properties:
        loyalty_account_filter:
          $ref: '#/components/schemas/LoyaltyEventLoyaltyAccountFilter'
        type_filter:
          $ref: '#/components/schemas/LoyaltyEventTypeFilter'
        date_time_filter:
          $ref: '#/components/schemas/LoyaltyEventDateTimeFilter'
        location_filter:
          $ref: '#/components/schemas/LoyaltyEventLocationFilter'
        order_filter:
          $ref: '#/components/schemas/LoyaltyEventOrderFilter'
      description: "The filtering criteria. If the request specifies multiple filters,\
        \ \nthe endpoint uses a logical AND to evaluate them."
      x-release-status: BETA
    LoyaltyEventLocationFilter:
      required:
      - location_ids
      type: object
      properties:
        location_ids:
          type: array
          description: "The [location](#type-Location) IDs for loyalty events to query.\n\
            If multiple values are specified, the endpoint uses \na logical OR to\
            \ combine them."
          items:
            minLength: 1
            type: string
      description: Filter events by location.
      x-release-status: BETA
    LoyaltyEventLoyaltyAccountFilter:
      required:
      - loyalty_account_id
      type: object
      properties:
        loyalty_account_id:
          minLength: 1
          type: string
          description: The ID of the [loyalty account](#type-LoyaltyAccount) associated
            with loyalty events.
      description: Filter events by loyalty account.
      x-release-status: BETA
    LoyaltyEventOrderFilter:
      required:
      - order_id
      type: object
      properties:
        order_id:
          minLength: 1
          type: string
          description: The ID of the [order](#type-Order) associated with the event.
      description: Filter events by the order associated with the event.
      x-release-status: BETA
    LoyaltyEventOther:
      required:
      - loyalty_program_id
      - points
      type: object
      properties:
        loyalty_program_id:
          maxLength: 36
          minLength: 1
          type: string
          description: The Square-assigned ID of the [loyalty program](#type-LoyaltyProgram).
          readOnly: true
        points:
          type: integer
          description: The number of points added or removed.
      description: Provides metadata when the event `type` is `OTHER`.
      x-release-status: BETA
    LoyaltyEventQuery:
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/LoyaltyEventFilter'
      description: Represents a query used to search for loyalty events.
      x-release-status: BETA
    LoyaltyEventRedeemReward:
      required:
      - loyalty_program_id
      type: object
      properties:
        loyalty_program_id:
          maxLength: 36
          minLength: 1
          type: string
          description: The ID of the [loyalty program](#type-LoyaltyProgram).
          readOnly: true
        reward_id:
          maxLength: 36
          type: string
          description: |-
            The ID of the redeemed [loyalty reward](#type-LoyaltyReward).
            This field is returned only if the event source is `LOYALTY_API`.
          readOnly: true
        order_id:
          type: string
          description: |-
            The ID of the [order](#type-Order) that redeemed the reward.
            This field is returned only if the Orders API is used to process orders.
          readOnly: true
      description: Provides metadata when the event `type` is `REDEEM_REWARD`.
      x-release-status: BETA
    LoyaltyEventTypeFilter:
      required:
      - types
      type: object
      properties:
        types:
          type: array
          description: "The loyalty event types used to filter the result.\nIf multiple\
            \ values are specified, the endpoint uses a \nlogical OR to combine them.\n\
            See [LoyaltyEventType](#type-loyaltyeventtype) for possible values"
          items:
            $ref: '#/components/schemas/LoyaltyEventType'
      description: Filter events by event type.
      x-release-status: BETA
    LoyaltyProgram:
      required:
      - accrual_rules
      - created_at
      - id
      - location_ids
      - reward_tiers
      - status
      - terminology
      - updated_at
      type: object
      properties:
        id:
          maxLength: 36
          minLength: 1
          type: string
          description: "The Square-assigned ID of the loyalty program. Updates to\
            \ \nthe loyalty program do not modify the identifier."
          readOnly: true
        status:
          $ref: '#/components/schemas/LoyaltyProgramStatus'
        reward_tiers:
          type: array
          description: The list of rewards for buyers, sorted by ascending points.
          readOnly: true
          items:
            $ref: '#/components/schemas/LoyaltyProgramRewardTier'
        expiration_policy:
          $ref: '#/components/schemas/LoyaltyProgramExpirationPolicy'
        terminology:
          $ref: '#/components/schemas/LoyaltyProgramTerminology'
        location_ids:
          type: array
          description: The [locations](#type-Location) at which the program is active.
          readOnly: true
          items:
            minLength: 1
            type: string
        created_at:
          minLength: 1
          type: string
          description: The timestamp when the program was created, in RFC 3339 format.
          readOnly: true
        updated_at:
          minLength: 1
          type: string
          description: The timestamp when the reward was last updated, in RFC 3339
            format.
          readOnly: true
        accrual_rules:
          type: array
          description: Defines how buyers can earn loyalty points.
          readOnly: true
          items:
            $ref: '#/components/schemas/LoyaltyProgramAccrualRule'
      x-release-status: BETA
    LoyaltyProgramAccrualRule:
      required:
      - accrual_type
      type: object
      properties:
        accrual_type:
          $ref: '#/components/schemas/LoyaltyProgramAccrualRuleType'
        points:
          minimum: 1
          type: integer
          description: "The number of points that \nbuyers earn based on the `accrual_type`."
          readOnly: true
        visit_minimum_amount_money:
          $ref: '#/components/schemas/Money'
        spend_amount_money:
          $ref: '#/components/schemas/Money'
        catalog_object_id:
          type: string
          description: |-
            The ID of the [catalog object](#type-CatalogObject) to purchase to earn the number of points defined by the
            rule. This is either an item variation or a category, depending on the type. This is defined on
            `ITEM_VARIATION` rules and `CATEGORY` rules.
          readOnly: true
      description: Defines an accrual rule, which is how buyers can earn points.
      x-release-status: BETA
    LoyaltyProgramExpirationPolicy:
      required:
      - expiration_duration
      type: object
      properties:
        expiration_duration:
          minLength: 1
          type: string
          description: The duration of time before points expire, in RFC 3339 format.
          readOnly: true
      description: Describes when the loyalty program expires.
      x-release-status: BETA
    LoyaltyProgramRewardDefinition:
      required:
      - discount_type
      - scope
      type: object
      properties:
        scope:
          $ref: '#/components/schemas/LoyaltyProgramRewardDefinitionScope'
        discount_type:
          $ref: '#/components/schemas/LoyaltyProgramRewardDefinitionType'
        percentage_discount:
          type: string
          description: |-
            Present if `discount_type` is `FIXED_PERCENTAGE`.
            For example, a 7.25% off discount will be represented as "7.25".
          readOnly: true
        catalog_object_ids:
          type: array
          description: A list of [catalog object](#type-CatalogObject) ids to which
            this reward can be applied. They are either all item-variation ids or
            category ids, depending on the `type` field.
          readOnly: true
          items:
            type: string
        fixed_discount_money:
          $ref: '#/components/schemas/Money'
        max_discount_money:
          $ref: '#/components/schemas/Money'
      description: Provides details about the loyalty program reward tier definition.
      x-release-status: BETA
    LoyaltyProgramRewardTier:
      required:
      - created_at
      - definition
      - id
      - name
      - points
      type: object
      properties:
        id:
          maxLength: 36
          minLength: 1
          type: string
          description: The Square-assigned ID of the reward tier.
          readOnly: true
        points:
          minimum: 1
          type: integer
          description: The points exchanged for the reward tier.
          readOnly: true
        name:
          minLength: 1
          type: string
          description: The name of the reward tier.
          readOnly: true
        definition:
          $ref: '#/components/schemas/LoyaltyProgramRewardDefinition'
        created_at:
          type: string
          description: The timestamp when the reward tier was created, in RFC 3339
            format.
          readOnly: true
      description: Describes a loyalty program reward tier.
      x-release-status: BETA
    LoyaltyProgramTerminology:
      required:
      - one
      - other
      type: object
      properties:
        one:
          minLength: 1
          type: string
          description: A singular unit for a point (for example, 1 point is called
            1 star).
          readOnly: true
        other:
          minLength: 1
          type: string
          description: A plural unit for point (for example, 10 points is called 10
            stars).
          readOnly: true
      x-release-status: BETA
    LoyaltyProgramUpdatedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        type:
          type: string
          description: The type of event this represents, `"loyalty.program.updated"`.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/LoyaltyProgramUpdatedWebhookData'
      description: Published when a [loyalty program](#type-LoyaltyProgram) is updated.
      example:
        merchant_id: C337NFWQT2A6W
        type: loyalty.program.updated
        event_id: b10404b2-08c4-4c66-9299-c11feceb43dd
        created_at: 2020-05-13T01:38:42.785Z
        data:
          type: loyalty
          id: 5216e8b2-d43e-41e2-9ed8-eccf3e892aef
          object:
            loyalty_program:
              id: 5216e8b2-d43e-41e2-9ed8-eccf3e892aef
              location_ids:
              - 2Z3BMKQB939X0
              status: ACTIVE
              terminology:
                one: Point
                other: Points
              accrual_rules:
              - accrual_type: SPEND
                points: 1
                spend_amount_money:
                  amount: 100
              reward_tiers:
              - id: 927cab58-09cd-410f-aa68-a44015d8bbbb
                name: 5% off entire sale
                points: 5
                definition:
                  discount_type: FIXED_PERCENTAGE
                  percentage_discount: "5"
                  scope: ORDER
                created_at: 2019-08-19T18:22:45Z
              - id: aa5373ef-191d-4cb5-b122-8e8de41ab32f
                name: 20% off entire sale
                points: 15
                definition:
                  discount_type: FIXED_PERCENTAGE
                  percentage_discount: "20"
                  scope: ORDER
                created_at: 2020-05-13T01:38:40Z
              created_at: 2019-08-19T18:22:46Z
              updated_at: 2020-05-13T01:38:40Z
      x-release-status: BETA
      x-visibility: DOC_ONLY
      x-webhook:
        event: loyalty.program.updated
        scopes:
        - LOYALTY_READ
      x-api: '#/components/x-apis/Loyalty'
      x-since: 2020-05-28
    LoyaltyProgramUpdatedWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the affected object’s type, `"loyalty.program"`.
        id:
          type: string
          description: ID of the affected loyalty program.
        object:
          $ref: '#/components/schemas/LoyaltyProgram'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    LoyaltyReward:
      required:
      - loyalty_account_id
      - reward_tier_id
      type: object
      properties:
        id:
          maxLength: 36
          type: string
          description: The Square-assigned ID of the loyalty reward.
          readOnly: true
        status:
          $ref: '#/components/schemas/LoyaltyRewardStatus'
        loyalty_account_id:
          maxLength: 36
          minLength: 1
          type: string
          description: The Square-assigned ID of the [loyalty account](#type-LoyaltyAccount)
            to which the reward belongs.
        reward_tier_id:
          maxLength: 36
          minLength: 1
          type: string
          description: The Square-assigned ID of the [reward tier](#type-LoyaltyProgramRewardTier)
            used to create the reward.
        points:
          minimum: 1
          type: integer
          description: The number of loyalty points used for the reward.
          readOnly: true
        order_id:
          type: string
          description: The Square-assigned ID of the [order](#type-Order) to which
            the reward is attached.
        created_at:
          type: string
          description: The timestamp when the reward was created, in RFC 3339 format.
          readOnly: true
        updated_at:
          type: string
          description: The timestamp when the reward was last updated, in RFC 3339
            format.
          readOnly: true
        redeemed_at:
          type: string
          description: The timestamp when the reward was redeemed, in RFC 3339 format.
          readOnly: true
      x-release-status: BETA
    MeasurementUnit:
      type: object
      properties:
        custom_unit:
          $ref: '#/components/schemas/MeasurementUnitCustom'
        area_unit:
          $ref: '#/components/schemas/MeasurementUnitArea'
        length_unit:
          $ref: '#/components/schemas/MeasurementUnitLength'
        volume_unit:
          $ref: '#/components/schemas/MeasurementUnitVolume'
        weight_unit:
          $ref: '#/components/schemas/MeasurementUnitWeight'
        generic_unit:
          $ref: '#/components/schemas/MeasurementUnitGeneric'
        time_unit:
          $ref: '#/components/schemas/MeasurementUnitTime'
        type:
          $ref: '#/components/schemas/MeasurementUnitUnitType'
      description: |-
        Represents a unit of measurement to use with a quantity, such as ounces
        or inches. Exactly one of the following fields are required: `custom_unit`,
        `area_unit`, `length_unit`, `volume_unit`, and `weight_unit`.
      x-release-status: BETA
    MeasurementUnitCustom:
      required:
      - abbreviation
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of the custom unit, for example "bushel".
        abbreviation:
          type: string
          description: |-
            The abbreviation of the custom unit, such as "bsh" (bushel). This appears
            in the cart for the Point of Sale app, and in reports.
      description: The information needed to define a custom unit, provided by the
        seller.
      x-release-status: BETA
    Merchant:
      required:
      - country
      type: object
      properties:
        id:
          type: string
          description: The Square-issued ID of the merchant.
        business_name:
          type: string
          description: The business name of the merchant.
        country:
          $ref: '#/components/schemas/Country'
        language_code:
          type: string
          description: The language code associated with the merchant account, in
            BCP 47 format.
        currency:
          $ref: '#/components/schemas/Currency'
        status:
          $ref: '#/components/schemas/MerchantStatus'
        main_location_id:
          type: string
          description: The ID of the main `Location` for this merchant.
      description: Represents a Square seller.
      x-release-status: PUBLIC
    Money:
      type: object
      properties:
        amount:
          type: integer
          description: |-
            The amount of money, in the smallest denomination of the currency
            indicated by `currency`. For example, when `currency` is `USD`, `amount` is
            in cents. Monetary amounts can be positive or negative. See the specific
            field description to determine the meaning of the sign in a particular case.
          format: int64
        currency:
          $ref: '#/components/schemas/Currency'
      description: |-
        Represents an amount of money. `Money` fields can be signed or unsigned.
        Fields that do not explicitly define whether they are signed or unsigned are
        considered unsigned and can only hold positive amounts. For signed fields, the
        sign of the value indicates the purpose of the money transfer. See
        [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
        for more information.
      example:
        amount: 0
        currency: UNKNOWN_CURRENCY
      x-release-status: PUBLIC
    OauthAuthorizationRevokedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        type:
          type: string
          description: The type of event this represents, `"oauth.authorization.revoked"`.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/OauthAuthorizationRevokedWebhookData'
      description: Published when a merchant/application revokes all access tokens
        and refresh tokens granted to an application.
      example:
        merchant_id: J9Z30SF99NPFJ
        type: oauth.authorization.revoked
        event_id: e1d6ae37-5aa9-45a5-b525-b12caf819fdb
        created_at: 2020-08-14T15:51:04.246373287Z
        data:
          type: revocation
          id: 415641cf-eba2-4dfa-88cc-c4be1301fdc6
          object:
            revocation:
              revoked_at: 2020-08-14T15:51:00.246373287Z
              revoker_type: MERCHANT
      x-release-status: BETA
      x-visibility: DOC_ONLY
      x-webhook:
        event: oauth.authorization.revoked
      x-api: '#/components/x-apis/OAuth'
      x-since: 2020-08-26
    OauthAuthorizationRevokedWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the affected object’s type, `"revocation"`.
        id:
          type: string
          description: Not applicable, revocation is not an object
        object:
          $ref: '#/components/schemas/OauthAuthorizationRevokedWebhookObject'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    OauthAuthorizationRevokedWebhookObject:
      type: object
      properties:
        revocation:
          $ref: '#/components/schemas/OauthAuthorizationRevokedWebhookRevocationObject'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    OauthAuthorizationRevokedWebhookRevocationObject:
      type: object
      properties:
        revoked_at:
          type: string
          description: Timestamp of when the revocation event occurred, in RFC 3339
            format.
        revoker_type:
          $ref: '#/components/schemas/OauthAuthorizationRevokedWebhookRevokerType'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    ObtainTokenRequest:
      required:
      - client_id
      - client_secret
      - grant_type
      type: object
      properties:
        client_id:
          type: string
          description: |-
            The Square-issued ID of your application, available from the
            [application dashboard](https://connect.squareup.com/apps).
        client_secret:
          type: string
          description: |-
            The Square-issued application secret for your application, available
            from the [application dashboard](https://connect.squareup.com/apps).
        code:
          type: string
          description: |-
            The authorization code to exchange.
            This is required if `grant_type` is set to `authorization_code`, to indicate that
            the application wants to exchange an authorization code for an OAuth access token.
        redirect_uri:
          type: string
          description: The redirect URL assigned in the [application dashboard](https://connect.squareup.com/apps).
        grant_type:
          type: string
          description: |-
            Specifies the method to request an OAuth access token.
            Valid values are: `authorization_code`, `refresh_token`, and `migration_token`
        refresh_token:
          type: string
          description: |-
            A valid refresh token for generating a new OAuth access token.
            A valid refresh token is required if `grant_type` is set to `refresh_token` ,
            to indicate the application wants a replacement for an expired OAuth access token.
        migration_token:
          type: string
          description: |-
            Legacy OAuth access token obtained using a Connect API version prior
            to 2019-03-13. This parameter is required if `grant_type` is set to
            `migration_token` to indicate that the application wants to get a replacement
            OAuth access token. The response also returns a refresh token.
            For more information, see [Migrate to Using Refresh Tokens](https://developer.squareup.com/docs/authz/oauth/migration).
      example:
        client_id: APPLICATION_ID
        client_secret: APPLICATION_SECRET
        code: CODE_FROM_AUTHORIZE
        grant_type: authorization_code
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/ObtainToken/ObtainTokenRequest.python
        csharp: /sdk_samples/ObtainToken/ObtainTokenRequest.csharp
        java: /sdk_samples/ObtainToken/ObtainTokenRequest.java
        php: /sdk_samples/ObtainToken/ObtainTokenRequest.php
        javascript: /sdk_samples/ObtainToken/ObtainTokenRequest.javascript
        ruby: /sdk_samples/ObtainToken/ObtainTokenRequest.ruby
    ObtainTokenResponse:
      type: object
      properties:
        access_token:
          type: string
          description: |-
            A valid OAuth access token. OAuth access tokens are 64 bytes long.
            Provide the access token in a header with every request to Connect API
            endpoints. See the [Build with OAuth](https://developer.squareup.com/docs/authz/oauth/build-with-the-api) guide
            for more information.
        token_type:
          type: string
          description: This value is always _bearer_.
        expires_at:
          type: string
          description: The date when access_token expires, in [ISO 8601](http://www.iso.org/iso/home/standards/iso8601.htm)
            format.
        merchant_id:
          type: string
          description: The ID of the authorizing merchant's business.
        subscription_id:
          type: string
          description: |-
            __LEGACY FIELD__. The ID of a subscription plan the merchant signed up
            for. Only present if the merchant signed up for a subscription during authorization.
        plan_id:
          type: string
          description: |-
            T__LEGACY FIELD__. The ID of the subscription plan the merchant signed
            up for. Only present if the merchant signed up for a subscription during
            authorization.
        id_token:
          type: string
          description: |-
            Then OpenID token belonging to this this person. Only present if the
            OPENID scope is included in the authorize request.
        refresh_token:
          type: string
          description: |-
            A refresh token. OAuth refresh tokens are 64 bytes long.
            For more information, see [OAuth access token management](https://developer.squareup.com/docs/authz/oauth/how-it-works#oauth-access-token-management).
      example:
        access_token: ACCESS_TOKEN
        token_type: bearer
        expires_at: 2006-01-02T15:04:05Z
        merchant_id: MERCHANT_ID
        refresh_token: REFRESH_TOKEN
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/ObtainToken/ObtainTokenResponse.python
        csharp: /sdk_samples/ObtainToken/ObtainTokenResponse.csharp
        java: /sdk_samples/ObtainToken/ObtainTokenResponse.java
        php: /sdk_samples/ObtainToken/ObtainTokenResponse.php
        javascript: /sdk_samples/ObtainToken/ObtainTokenResponse.javascript
        ruby: /sdk_samples/ObtainToken/ObtainTokenResponse.ruby
    Order:
      required:
      - location_id
      type: object
      properties:
        id:
          type: string
          description: The order's unique ID.
          readOnly: true
        location_id:
          minLength: 1
          type: string
          description: The ID of the merchant location this order is associated with.
        reference_id:
          maxLength: 40
          type: string
          description: |-
            A client specified identifier to associate an entity in another system
            with this order.
        source:
          $ref: '#/components/schemas/OrderSource'
        customer_id:
          maxLength: 191
          type: string
          description: The [Customer](#type-customer) ID of the customer associated
            with the order.
          x-release-status: BETA
        line_items:
          type: array
          description: The line items included in the order.
          items:
            $ref: '#/components/schemas/OrderLineItem'
        taxes:
          type: array
          description: |-
            The list of all taxes associated with the order.

            Taxes can be scoped to either `ORDER` or `LINE_ITEM`. For taxes with `LINE_ITEM` scope, an
            `OrderLineItemAppliedTax` must be added to each line item that the tax applies to. For taxes
            with `ORDER` scope, the server will generate an `OrderLineItemAppliedTax` for every line item.

            On reads, each tax in the list will include the total amount of that tax applied to the order.

            __IMPORTANT__: If `LINE_ITEM` scope is set on any taxes in this field, usage of the deprecated
            `line_items.taxes` field will result in an error. Please use `line_items.applied_taxes`
            instead.
          items:
            $ref: '#/components/schemas/OrderLineItemTax'
        discounts:
          type: array
          description: |-
            The list of all discounts associated with the order.

            Discounts can be scoped to either `ORDER` or `LINE_ITEM`. For discounts scoped to `LINE_ITEM`,
            an `OrderLineItemAppliedDiscount` must be added to each line item that the discount applies to.
            For discounts with `ORDER` scope, the server will generate an `OrderLineItemAppliedDiscount`
            for every line item.

            __IMPORTANT__: If `LINE_ITEM` scope is set on any discounts in this field, usage of the deprecated
            `line_items.discounts` field will result in an error. Please use `line_items.applied_discounts`
            instead.
          items:
            $ref: '#/components/schemas/OrderLineItemDiscount'
        service_charges:
          type: array
          description: A list of service charges applied to the order.
          items:
            $ref: '#/components/schemas/OrderServiceCharge'
        fulfillments:
          type: array
          description: |-
            Details on order fulfillment.

            Orders can only be created with at most one fulfillment. However, orders returned
            by the API may contain multiple fulfillments.
          items:
            $ref: '#/components/schemas/OrderFulfillment'
        returns:
          type: array
          description: |-
            Collection of items from sale Orders being returned in this one. Normally part of an
            Itemized Return or Exchange.  There will be exactly one `Return` object per sale Order being
            referenced.
          readOnly: true
          items:
            $ref: '#/components/schemas/OrderReturn'
          x-release-status: BETA
        return_amounts:
          $ref: '#/components/schemas/OrderMoneyAmounts'
        net_amounts:
          $ref: '#/components/schemas/OrderMoneyAmounts'
        rounding_adjustment:
          $ref: '#/components/schemas/OrderRoundingAdjustment'
        tenders:
          type: array
          description: The Tenders which were used to pay for the Order.
          readOnly: true
          items:
            $ref: '#/components/schemas/Tender'
          x-release-status: BETA
        refunds:
          type: array
          description: The Refunds that are part of this Order.
          readOnly: true
          items:
            $ref: '#/components/schemas/Refund'
          x-release-status: BETA
        metadata:
          type: object
          additionalProperties:
            type: string
          description: |-
            Application-defined data attached to this order. Metadata fields are intended
            to store descriptive references or associations with an entity in another system or store brief
            information about the object. Square does not process this field; it only stores and returns it
            in relevant API calls. Do not use metadata to store any sensitive information (personally
            identifiable information, card details, etc.).

            Keys written by applications must be 60 characters or less and must be in the character set
            `[a-zA-Z0-9_-]`. Entries may also include metadata generated by Square. These keys are prefixed
            with a namespace, separated from the key with a ':' character.

            Values have a max length of 255 characters.

            An application may have up to 10 entries per metadata field.

            Entries written by applications are private and can only be read or modified by the same
            application.

            See [Metadata](https://developer.squareup.com/docs/build-basics/metadata) for more information.
          x-release-status: BETA
        created_at:
          type: string
          description: Timestamp for when the order was created. In RFC 3339 format,
            e.g., "2016-09-04T23:59:33.123Z".
          readOnly: true
        updated_at:
          type: string
          description: Timestamp for when the order was last updated. In RFC 3339
            format, e.g., "2016-09-04T23:59:33.123Z".
          readOnly: true
        closed_at:
          type: string
          description: Timestamp for when the order reached a terminal [state](#property-state).
            In RFC 3339 format, e.g., "2016-09-04T23:59:33.123Z".
          readOnly: true
        state:
          $ref: '#/components/schemas/OrderState'
        version:
          type: integer
          description: |-
            Version number which is incremented each time an update is committed to the order.
            Orders that were not created through the API will not include a version and
            thus cannot be updated.

            [Read more about working with versions](https://developer.squareup.com/docs/orders-api/manage-orders#update-orders).
          readOnly: true
          x-release-status: BETA
        total_money:
          $ref: '#/components/schemas/Money'
        total_tax_money:
          $ref: '#/components/schemas/Money'
        total_discount_money:
          $ref: '#/components/schemas/Money'
        total_tip_money:
          $ref: '#/components/schemas/Money'
        total_service_charge_money:
          $ref: '#/components/schemas/Money'
        pricing_options:
          $ref: '#/components/schemas/OrderPricingOptions'
        rewards:
          type: array
          description: A set-like list of rewards that have been added to the order.
          readOnly: true
          items:
            $ref: '#/components/schemas/OrderReward'
          x-release-status: BETA
      description: |-
        Contains all information related to a single order to process with Square,
        including line items that specify the products to purchase. Order objects also
        include information on any associated tenders, refunds, and returns.

        All Connect V2 Transactions have all been converted to Orders including all associated
        itemization data.
      x-release-status: PUBLIC
    OrderCreated:
      type: object
      properties:
        order_id:
          type: string
          description: The order's unique ID.
        version:
          type: integer
          description: |-
            Version number which is incremented each time an update is committed to the order.
            Orders that were not created through the API will not include a version and
            thus cannot be updated.

            [Read more about working with versions](https://developer.squareup.com/docs/docs/orders-api/manage-orders#update-orders)
        location_id:
          type: string
          description: The ID of the merchant location this order is associated with.
        state:
          $ref: '#/components/schemas/OrderState'
        created_at:
          type: string
          description: Timestamp for when the order was created in RFC 3339 format.
          readOnly: true
      x-release-status: BETA
    OrderCreatedObject:
      type: object
      properties:
        order_created:
          $ref: '#/components/schemas/OrderCreated'
      x-release-status: BETA
    OrderCreatedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        type:
          type: string
          description: The type of event this represents, `"order.created"`.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/OrderCreatedWebhookData'
      description: |-
        Published when an [Order](#type-Order) is created. This event is
        triggered only by the [CreateOrder](#endpoint-Orders-CreateOrder) endpoint call.

        Creating an order in the Point of Sale app will **not** publish this event.
      example:
        merchant_id: 5S9MXCS9Y99KK
        type: order.created
        event_id: 116038d3-2948-439f-8679-fc86dbf80f69
        created_at: 2020-04-16T23:14:26.129Z
        data:
          type: order
          id: eA3vssLHKJrv9H0IdJCM3gNqfdcZY
          object:
            order_created:
              created_at: 2020-04-16T23:14:26.129Z
              location_id: FPYCBCHYMXFK1
              order_id: eA3vssLHKJrv9H0IdJCM3gNqfdcZY
              state: OPEN
              version: 1
      x-release-status: BETA
      x-visibility: DOC_ONLY
      x-webhook:
        event: order.created
        scopes:
        - ORDERS_READ
      x-api: '#/components/x-apis/Orders'
      x-since: 2020-04-22
    OrderCreatedWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the affected object’s type, `"order"`.
        id:
          type: string
          description: ID of the affected order.
        object:
          $ref: '#/components/schemas/OrderCreatedObject'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    OrderEntry:
      type: object
      properties:
        order_id:
          type: string
          description: The id of the Order
        version:
          type: integer
          description: |-
            Version number which is incremented each time an update is committed to the order.
            Orders that were not created through the API will not include a version and
            thus cannot be updated.

            [Read more about working with versions](https://developer.squareup.com/docs/orders-api/manage-orders#update-orders).
          readOnly: true
          x-release-status: BETA
        location_id:
          type: string
          description: The location id the Order belongs to.
      description: |-
        A lightweight description of an [Order](#type-order) that is returned when `returned_entries` is true on a
        [SearchOrderRequest](#type-searchorderrequest)
      x-release-status: PUBLIC
    OrderFulfillment:
      type: object
      properties:
        uid:
          maxLength: 60
          type: string
          description: Unique ID that identifies the fulfillment only within this
            order.
          x-release-status: BETA
        type:
          $ref: '#/components/schemas/OrderFulfillmentType'
        state:
          $ref: '#/components/schemas/OrderFulfillmentState'
        metadata:
          type: object
          additionalProperties:
            type: string
          description: |-
            Application-defined data attached to this fulfillment. Metadata fields are intended
            to store descriptive references or associations with an entity in another system or store brief
            information about the object. Square does not process this field; it only stores and returns it
            in relevant API calls. Do not use metadata to store any sensitive information (personally
            identifiable information, card details, etc.).

            Keys written by applications must be 60 characters or less and must be in the character set
            `[a-zA-Z0-9_-]`. Entries may also include metadata generated by Square. These keys are prefixed
            with a namespace, separated from the key with a ':' character.

            Values have a max length of 255 characters.

            An application may have up to 10 entries per metadata field.

            Entries written by applications are private and can only be read or modified by the same
            application.

            See [Metadata](https://developer.squareup.com/docs/build-basics/metadata) for more information.
          x-release-status: BETA
        pickup_details:
          $ref: '#/components/schemas/OrderFulfillmentPickupDetails'
        shipment_details:
          $ref: '#/components/schemas/OrderFulfillmentShipmentDetails'
      description: Contains details on how to fulfill this order.
      x-release-status: PUBLIC
    OrderFulfillmentPickupDetails:
      type: object
      properties:
        recipient:
          $ref: '#/components/schemas/OrderFulfillmentRecipient'
        expires_at:
          type: string
          description: |-
            The [timestamp](#workingwithdates) indicating when this fulfillment
            will expire if it is not accepted. Must be in RFC 3339 format
            e.g., "2016-09-04T23:59:33.123Z". Expiration time can only be set up to 7
            days in the future. If `expires_at` is not set, this pickup fulfillment
            will be automatically accepted when placed.
        auto_complete_duration:
          type: string
          description: |-
            The duration of time after which an open and accepted pickup fulfillment
            will automatically move to the `COMPLETED` state. Must be in RFC3339
            duration format e.g., "P1W3D".

            If not set, this pickup fulfillment will remain accepted until it is canceled or completed.
        schedule_type:
          $ref: '#/components/schemas/OrderFulfillmentPickupDetailsScheduleType'
        pickup_at:
          type: string
          description: |-
            The [timestamp](#workingwithdates) that represents the start of the pickup window.
            Must be in RFC3339 timestamp format, e.g., "2016-09-04T23:59:33.123Z".
            For fulfillments with the schedule type `ASAP`, this is automatically set
            to the current time plus the expected duration to prepare the fulfillment.
        pickup_window_duration:
          type: string
          description: |-
            The window of time in which the order should be picked up after the `pickup_at` timestamp.
            Must be in RFC3339 duration format, e.g., "P1W3D". Can be used as an
            informational guideline for merchants.
        prep_time_duration:
          type: string
          description: |-
            The duration of time it takes to prepare this fulfillment.
            Must be in RFC3339 duration format, e.g., "P1W3D".
        note:
          maxLength: 500
          type: string
          description: |-
            A note meant to provide additional instructions about the pickup
            fulfillment displayed in the Square Point of Sale and set by the API.
        placed_at:
          type: string
          description: |-
            The [timestamp](#workingwithdates) indicating when the fulfillment
            was placed. Must be in RFC3339 timestamp format, e.g., "2016-09-04T23:59:33.123Z".
          readOnly: true
        accepted_at:
          type: string
          description: |-
            The [timestamp](#workingwithdates) indicating when the fulfillment
            was accepted. In RFC3339 timestamp format,
            e.g., "2016-09-04T23:59:33.123Z".
          readOnly: true
        rejected_at:
          type: string
          description: |-
            The [timestamp](#workingwithdates) indicating when the fulfillment
            was rejected. In RFC3339 timestamp format, e.g., "2016-09-04T23:59:33.123Z".
          readOnly: true
        ready_at:
          type: string
          description: |-
            The [timestamp](#workingwithdates) indicating when the fulfillment is
            marked as ready for pickup. In RFC3339 timestamp format, e.g., "2016-09-04T23:59:33.123Z".
          readOnly: true
        expired_at:
          type: string
          description: |-
            The [timestamp](#workingwithdates) indicating when the fulfillment expired.
            In RFC3339 timestamp format, e.g., "2016-09-04T23:59:33.123Z".
          readOnly: true
        picked_up_at:
          type: string
          description: |-
            The [timestamp](#workingwithdates) indicating when the fulfillment
            was picked up by the recipient. In RFC3339 timestamp format,
            e.g., "2016-09-04T23:59:33.123Z".
          readOnly: true
        canceled_at:
          type: string
          description: |-
            The [timestamp](#workingwithdates) in RFC3339 timestamp format, e.g., "2016-09-04T23:59:33.123Z",
            indicating when the fulfillment was canceled.
          readOnly: true
        cancel_reason:
          maxLength: 100
          type: string
          description: 'A description of why the pickup was canceled. Max length:
            100 characters.'
        is_curbside_pickup:
          type: boolean
          description: If true, indicates this pickup order is for curbside pickup,
            not in-store pickup.
          x-release-status: BETA
        curbside_pickup_details:
          $ref: '#/components/schemas/OrderFulfillmentPickupDetailsCurbsidePickupDetails'
      description: Contains details necessary to fulfill a pickup order.
      x-release-status: PUBLIC
    OrderFulfillmentPickupDetailsCurbsidePickupDetails:
      type: object
      properties:
        curbside_details:
          maxLength: 250
          type: string
          description: Specific details for curbside pickup, such as parking number,
            vehicle model, etc.
        buyer_arrived_at:
          type: string
          description: |-
            The [timestamp](#workingwithdates) in RFC 3339 timestamp format, e.g., "2016-09-04T23:59:33.123Z",
            indicating when the buyer arrived and is waiting for pickup.
      description: Specific details for curbside pickup.
      x-release-status: BETA
    OrderFulfillmentRecipient:
      type: object
      properties:
        customer_id:
          maxLength: 191
          type: string
          description: |-
            The Customer ID of the customer associated with the fulfillment.

            If `customer_id` is provided, the fulfillment recipient's `display_name`,
            `email_address`, and `phone_number` are automatically populated from the
            targeted customer profile. If these fields are set in the request, the request
            values will override the information from the customer profile. If the
            targeted customer profile does not contain the necessary information and
            these fields are left unset, the request will result in an error.
        display_name:
          maxLength: 255
          type: string
          description: |-
            The display name of the fulfillment recipient.

            If provided, overrides the value pulled from the customer profile indicated by `customer_id`.
        email_address:
          maxLength: 255
          type: string
          description: |-
            The email address of the fulfillment recipient.

            If provided, overrides the value pulled from the customer profile indicated by `customer_id`.
        phone_number:
          maxLength: 17
          type: string
          description: |-
            The phone number of the fulfillment recipient.

            If provided, overrides the value pulled from the customer profile indicated by `customer_id`.
        address:
          $ref: '#/components/schemas/Address'
      description: Contains information on the recipient of a fulfillment.
      x-release-status: PUBLIC
    OrderFulfillmentShipmentDetails:
      type: object
      properties:
        recipient:
          $ref: '#/components/schemas/OrderFulfillmentRecipient'
        carrier:
          maxLength: 50
          type: string
          description: |-
            The shipping carrier being used to ship this fulfillment
            e.g. UPS, FedEx, USPS, etc.
        shipping_note:
          maxLength: 500
          type: string
          description: A note with additional information for the shipping carrier.
        shipping_type:
          maxLength: 50
          type: string
          description: |-
            A description of the type of shipping product purchased from the carrier.
            e.g. First Class, Priority, Express
        tracking_number:
          maxLength: 100
          type: string
          description: The reference number provided by the carrier to track the shipment's
            progress.
        tracking_url:
          maxLength: 2000
          type: string
          description: A link to the tracking webpage on the carrier's website.
        placed_at:
          type: string
          description: |-
            The [timestamp](#workingwithdates) indicating when the shipment was
            requested. Must be in RFC 3339 timestamp format, e.g., "2016-09-04T23:59:33.123Z".
          readOnly: true
        in_progress_at:
          type: string
          description: |-
            The [timestamp](#workingwithdates) indicating when this fulfillment was
            moved to the `RESERVED` state. Indicates that preparation of this shipment has begun.
            Must be in RFC 3339 timestamp format, e.g., "2016-09-04T23:59:33.123Z".
          readOnly: true
        packaged_at:
          type: string
          description: |-
            The [timestamp](#workingwithdates) indicating when this fulfillment
            was moved to the `PREPARED` state. Indicates that the fulfillment is packaged.
            Must be in RFC 3339 timestamp format, e.g., "2016-09-04T23:59:33.123Z".
          readOnly: true
        expected_shipped_at:
          type: string
          description: |-
            The [timestamp](#workingwithdates) indicating when the shipment is
            expected to be delivered to the shipping carrier. Must be in RFC 3339 timestamp
            format, e.g., "2016-09-04T23:59:33.123Z".
        shipped_at:
          type: string
          description: |-
            The [timestamp](#workingwithdates) indicating when this fulfillment
            was moved to the `COMPLETED`state. Indicates that the fulfillment has been given
            to the shipping carrier. Must be in RFC 3339 timestamp format, e.g., "2016-09-04T23:59:33.123Z".
          readOnly: true
        canceled_at:
          type: string
          description: |-
            The [timestamp](#workingwithdates) indicating the shipment was canceled.
            Must be in RFC 3339 timestamp format, e.g., "2016-09-04T23:59:33.123Z".
        cancel_reason:
          maxLength: 100
          type: string
          description: A description of why the shipment was canceled.
        failed_at:
          type: string
          description: |-
            The [timestamp](#workingwithdates) indicating when the shipment
            failed to be completed. Must be in RFC 3339 timestamp format, e.g.,
            "2016-09-04T23:59:33.123Z".
          readOnly: true
        failure_reason:
          maxLength: 100
          type: string
          description: A description of why the shipment failed to be completed.
      description: Contains details necessary to fulfill a shipment order.
      x-release-status: BETA
    OrderFulfillmentUpdated:
      type: object
      properties:
        order_id:
          type: string
          description: The order's unique ID.
        version:
          type: integer
          description: |-
            Version number which is incremented each time an update is committed to the order.
            Orders that were not created through the API will not include a version and
            thus cannot be updated.

            [Read more about working with versions](https://developer.squareup.com/docs/docs/orders-api/manage-orders#update-orders)
        location_id:
          type: string
          description: The ID of the merchant location this order is associated with.
        state:
          $ref: '#/components/schemas/OrderState'
        created_at:
          type: string
          description: Timestamp for when the order was created in RFC 3339 format.
          readOnly: true
        updated_at:
          type: string
          description: Timestamp for when the order was last updated in RFC 3339 format.
          readOnly: true
        fulfillment_update:
          type: array
          description: The fulfillments that were updated with this version change.
          items:
            $ref: '#/components/schemas/OrderFulfillmentUpdatedUpdate'
      x-release-status: BETA
    OrderFulfillmentUpdatedObject:
      type: object
      properties:
        order_fulfillment_updated:
          $ref: '#/components/schemas/OrderFulfillmentUpdated'
      x-release-status: BETA
    OrderFulfillmentUpdatedUpdate:
      type: object
      properties:
        fulfillment_uid:
          type: string
          description: Unique ID that identifies the fulfillment only within this
            order.
        old_state:
          $ref: '#/components/schemas/OrderFulfillmentState'
        new_state:
          $ref: '#/components/schemas/OrderFulfillmentState'
      description: Information about fulfillment updates.
      x-release-status: BETA
    OrderFulfillmentUpdatedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        type:
          type: string
          description: The type of event this represents, `"order.fulfillment.updated"`.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/OrderFulfillmentUpdatedWebhookData'
      description: |-
        Published when an [OrderFulfillment](#type-OrderFulfillment)
        is created or updated. This event is triggered only by the
        [UpdateOrder](#endpoint-Orders-CreateOrder) endpoint call.
      example:
        merchant_id: 5S9MXCS9Y99KK
        type: order.fulfillment.updated
        event_id: b3adf364-4937-436e-a833-49c72b4baee8
        created_at: 2020-04-16T23:16:30.789Z
        data:
          type: order
          id: eA3vssLHKJrv9H0IdJCM3gNqfdcZY
          object:
            order_fulfillment_updated:
              created_at: 2020-04-16T23:14:26.129Z
              fulfillment_update:
              - fulfillment_uid: VWJ1N9leLqjSDLvF2hvYjD
                new_state: RESERVED
                old_state: PROPOSED
              location_id: FPYCBCHYMXFK1
              order_id: eA3vssLHKJrv9H0IdJCM3gNqfdcZY
              state: OPEN
              updated_at: 2020-04-16T23:16:30.789Z
              version: 6
      x-release-status: BETA
      x-visibility: DOC_ONLY
      x-webhook:
        event: order.fulfillment.updated
        scopes:
        - ORDERS_READ
      x-api: '#/components/x-apis/Orders'
      x-since: 2020-04-22
    OrderFulfillmentUpdatedWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the affected object’s type, `"order"`.
        id:
          type: string
          description: ID of the affected order.
        object:
          $ref: '#/components/schemas/OrderFulfillmentUpdatedObject'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    OrderLineItem:
      required:
      - quantity
      type: object
      properties:
        uid:
          maxLength: 60
          type: string
          description: Unique ID that identifies the line item only within this order.
          x-release-status: BETA
        name:
          maxLength: 500
          type: string
          description: The name of the line item.
        quantity:
          maxLength: 12
          minLength: 1
          type: string
          description: |-
            The quantity purchased, formatted as a decimal number.
            For example: `"3"`.

            Line items with a quantity of `"0"` will be automatically removed
            upon paying for or otherwise completing the order.

            Line items with a `quantity_unit` can have non-integer quantities.
            For example: `"1.70000"`.
        quantity_unit:
          $ref: '#/components/schemas/OrderQuantityUnit'
        note:
          maxLength: 500
          type: string
          description: The note of the line item.
        catalog_object_id:
          maxLength: 192
          type: string
          description: The [CatalogItemVariation](#type-catalogitemvariation) id applied
            to this line item.
        variation_name:
          maxLength: 255
          type: string
          description: The name of the variation applied to this line item.
        metadata:
          type: object
          additionalProperties:
            type: string
          description: |-
            Application-defined data attached to this line item. Metadata fields are intended
            to store descriptive references or associations with an entity in another system or store brief
            information about the object. Square does not process this field; it only stores and returns it
            in relevant API calls. Do not use metadata to store any sensitive information (personally
            identifiable information, card details, etc.).

            Keys written by applications must be 60 characters or less and must be in the character set
            `[a-zA-Z0-9_-]`. Entries may also include metadata generated by Square. These keys are prefixed
            with a namespace, separated from the key with a ':' character.

            Values have a max length of 255 characters.

            An application may have up to 10 entries per metadata field.

            Entries written by applications are private and can only be read or modified by the same
            application.

            See [Metadata](https://developer.squareup.com/docs/build-basics/metadata) for more information.
          x-release-status: BETA
        modifiers:
          type: array
          description: The [CatalogModifier](#type-catalogmodifier)s applied to this
            line item.
          items:
            $ref: '#/components/schemas/OrderLineItemModifier'
        applied_taxes:
          type: array
          description: |-
            The list of references to taxes applied to this line item. Each
            `OrderLineItemAppliedTax` has a `tax_uid` that references the `uid` of a
            top-level `OrderLineItemTax` applied to the line item. On reads, the
            amount applied is populated.

            An `OrderLineItemAppliedTax` will be automatically created on every line
            item for all `ORDER` scoped taxes added to the order. `OrderLineItemAppliedTax`
            records for `LINE_ITEM` scoped taxes must be added in requests for the tax
            to apply to any line items.

            To change the amount of a tax, modify the referenced top-level tax.
          items:
            $ref: '#/components/schemas/OrderLineItemAppliedTax'
          x-release-status: BETA
        applied_discounts:
          type: array
          description: |-
            The list of references to discounts applied to this line item. Each
            `OrderLineItemAppliedDiscount` has a `discount_uid` that references the `uid` of a top-level
            `OrderLineItemDiscounts` applied to the line item. On reads, the amount
            applied is populated.

            An `OrderLineItemAppliedDiscount` will be automatically created on every line item for all
            `ORDER` scoped discounts that are added to the order. `OrderLineItemAppliedDiscount` records
            for `LINE_ITEM` scoped discounts must be added in requests for the discount to apply to any
            line items.

            To change the amount of a discount, modify the referenced top-level discount.
          items:
            $ref: '#/components/schemas/OrderLineItemAppliedDiscount'
          x-release-status: BETA
        base_price_money:
          $ref: '#/components/schemas/Money'
        variation_total_price_money:
          $ref: '#/components/schemas/Money'
        gross_sales_money:
          $ref: '#/components/schemas/Money'
        total_tax_money:
          $ref: '#/components/schemas/Money'
        total_discount_money:
          $ref: '#/components/schemas/Money'
        total_money:
          $ref: '#/components/schemas/Money'
      description: |-
        Represents a line item in an order. Each line item describes a different
        product to purchase, with its own quantity and price details.
      x-release-status: PUBLIC
    OrderLineItemAppliedDiscount:
      required:
      - discount_uid
      type: object
      properties:
        uid:
          maxLength: 60
          type: string
          description: Unique ID that identifies the applied discount only within
            this order.
        discount_uid:
          maxLength: 60
          minLength: 1
          type: string
          description: |-
            The `uid` of the discount the applied discount represents. Must
            reference a discount present in the `order.discounts` field.

            This field is immutable. To change which discounts apply to a line item,
            you must delete the discount and re-add it as a new `OrderLineItemAppliedDiscount`.
        applied_money:
          $ref: '#/components/schemas/Money'
      description: |-
        Represents an applied portion of a discount to a line item in an order.

        Order scoped discounts will automatically have applied discounts present for each line item.
        Line item scoped discounts must have applied discounts added manually for any applicable line
        items. The corresponding applied money will automatically be computed based on participating
        line items.
      x-release-status: BETA
    OrderLineItemAppliedTax:
      required:
      - tax_uid
      type: object
      properties:
        uid:
          maxLength: 60
          type: string
          description: Unique ID that identifies the applied tax only within this
            order.
        tax_uid:
          maxLength: 60
          minLength: 1
          type: string
          description: |-
            The `uid` of the tax for which this applied tax represents.  Must reference
            a tax present in the `order.taxes` field.

            This field is immutable. To change which taxes apply to a line item, delete and add new
            `OrderLineItemAppliedTax`s.
        applied_money:
          $ref: '#/components/schemas/Money'
      description: |-
        Represents an applied portion of a tax to a line item in an order.

        Order-scoped taxes automatically include the applied taxes in each line item.
        Line item taxes must be referenced from any applicable line items.
        The corresponding applied money is automatically computed, based on the
        set of participating line items.
      x-release-status: BETA
    OrderLineItemDiscount:
      type: object
      properties:
        uid:
          maxLength: 60
          type: string
          description: Unique ID that identifies the discount only within this order.
          x-release-status: BETA
        catalog_object_id:
          maxLength: 192
          type: string
          description: The catalog object id referencing [CatalogDiscount](#type-catalogdiscount).
        name:
          maxLength: 255
          type: string
          description: The discount's name.
        type:
          $ref: '#/components/schemas/OrderLineItemDiscountType'
        percentage:
          maxLength: 10
          type: string
          description: |-
            The percentage of the discount, as a string representation of a decimal number.
            A value of `7.25` corresponds to a percentage of 7.25%.

            `percentage` is not set for amount-based discounts.
        amount_money:
          $ref: '#/components/schemas/Money'
        applied_money:
          $ref: '#/components/schemas/Money'
        metadata:
          type: object
          additionalProperties:
            type: string
          description: |-
            Application-defined data attached to this discount. Metadata fields are intended
            to store descriptive references or associations with an entity in another system or store brief
            information about the object. Square does not process this field; it only stores and returns it
            in relevant API calls. Do not use metadata to store any sensitive information (personally
            identifiable information, card details, etc.).

            Keys written by applications must be 60 characters or less and must be in the character set
            `[a-zA-Z0-9_-]`. Entries may also include metadata generated by Square. These keys are prefixed
            with a namespace, separated from the key with a ':' character.

            Values have a max length of 255 characters.

            An application may have up to 10 entries per metadata field.

            Entries written by applications are private and can only be read or modified by the same
            application.

            See [Metadata](https://developer.squareup.com/docs/build-basics/metadata) for more information.
          x-release-status: BETA
        scope:
          $ref: '#/components/schemas/OrderLineItemDiscountScope'
        reward_ids:
          type: array
          description: |-
            The reward identifiers corresponding to this discount. The application and
            specification of discounts that have `reward_ids` are completely controlled by the backing
            criteria corresponding to the reward tiers of the rewards that are added to the order
            through the Loyalty API. To manually unapply discounts that are the result of added rewards,
            the rewards must be removed from the order through the Loyalty API.
          readOnly: true
          items:
            type: string
          x-release-status: BETA
        pricing_rule_id:
          type: string
          description: |-
            The object identifier of a [pricing rule](#type-CatalogPricingRule) to be applied automatically
            to this discount. The specification and application of the discounts, to which a `pricing_rule_id` is
            assigned, are completely controlled by the corresponding pricing rule.
          readOnly: true
      description: |-
        Represents a discount that applies to one or more line items in an
        order.

        Fixed-amount, order-scoped discounts are distributed across all non-zero line item totals.
        The amount distributed to each line item is relative to the
        amount contributed by the item to the order subtotal.
      x-release-status: PUBLIC
    OrderLineItemModifier:
      type: object
      properties:
        uid:
          maxLength: 60
          type: string
          description: Unique ID that identifies the modifier only within this order.
          x-release-status: BETA
        catalog_object_id:
          maxLength: 192
          type: string
          description: The catalog object id referencing [CatalogModifier](#type-catalogmodifier).
        name:
          maxLength: 255
          type: string
          description: The name of the item modifier.
        base_price_money:
          $ref: '#/components/schemas/Money'
        total_price_money:
          $ref: '#/components/schemas/Money'
      description: A [CatalogModifier](#type-catalogmodifier).
      x-release-status: PUBLIC
    OrderLineItemTax:
      type: object
      properties:
        uid:
          maxLength: 60
          type: string
          description: Unique ID that identifies the tax only within this order.
          x-release-status: BETA
        catalog_object_id:
          maxLength: 192
          type: string
          description: The catalog object id referencing [CatalogTax](#type-catalogtax).
        name:
          maxLength: 255
          type: string
          description: The tax's name.
        type:
          $ref: '#/components/schemas/OrderLineItemTaxType'
        percentage:
          maxLength: 10
          type: string
          description: |-
            The percentage of the tax, as a string representation of a decimal
            number. For example, a value of `"7.25"` corresponds to a percentage of
            7.25%.
        metadata:
          type: object
          additionalProperties:
            type: string
          description: |-
            Application-defined data attached to this tax. Metadata fields are intended
            to store descriptive references or associations with an entity in another system or store brief
            information about the object. Square does not process this field; it only stores and returns it
            in relevant API calls. Do not use metadata to store any sensitive information (personally
            identifiable information, card details, etc.).

            Keys written by applications must be 60 characters or less and must be in the character set
            `[a-zA-Z0-9_-]`. Entries may also include metadata generated by Square. These keys are prefixed
            with a namespace, separated from the key with a ':' character.

            Values have a max length of 255 characters.

            An application may have up to 10 entries per metadata field.

            Entries written by applications are private and can only be read or modified by the same
            application.

            See [Metadata](https://developer.squareup.com/docs/build-basics/metadata) for more information.
          x-release-status: BETA
        applied_money:
          $ref: '#/components/schemas/Money'
        scope:
          $ref: '#/components/schemas/OrderLineItemTaxScope'
      description: |-
        Represents a tax that applies to one or more line item in the order.

        Fixed-amount, order-scoped taxes are distributed across all non-zero line item totals.
        The amount distributed to each line item is relative to the amount the item
        contributes to the order subtotal.
      x-release-status: PUBLIC
    OrderMoneyAmounts:
      type: object
      properties:
        total_money:
          $ref: '#/components/schemas/Money'
        tax_money:
          $ref: '#/components/schemas/Money'
        discount_money:
          $ref: '#/components/schemas/Money'
        tip_money:
          $ref: '#/components/schemas/Money'
        service_charge_money:
          $ref: '#/components/schemas/Money'
      description: A collection of various money amounts.
      x-release-status: BETA
    OrderPricingOptions:
      type: object
      properties:
        auto_apply_discounts:
          type: boolean
          description: The option to determine whether or not pricing rule-based discounts
            are automatically applied to an order.
      description: |-
        Pricing options for an order. The options affect how the order's price is calculated.
        They can be used, for example, to apply automatic price adjustments that are based on pre-configured
        [pricing rules](https://developer.squareup.com/docs/reference/square/objects/CatalogPricingRule).
      x-release-status: PUBLIC
    OrderQuantityUnit:
      type: object
      properties:
        measurement_unit:
          $ref: '#/components/schemas/MeasurementUnit'
        precision:
          type: integer
          description: |-
            For non-integer quantities, represents the number of digits after the decimal point that are
            recorded for this quantity.

            For example, a precision of 1 allows quantities like `"1.0"` and `"1.1"`, but not `"1.01"`.

            Min: 0. Max: 5.
      description: |-
        Contains the measurement unit for a quantity and a precision which
        specifies the number of digits after the decimal point for decimal quantities.
      x-release-status: PUBLIC
    OrderReturn:
      type: object
      properties:
        uid:
          maxLength: 60
          type: string
          description: Unique ID that identifies the return only within this order.
        source_order_id:
          type: string
          description: |-
            Order which contains the original sale of these returned line items. This will be unset
            for unlinked returns.
        return_line_items:
          type: array
          description: Collection of line items which are being returned.
          items:
            $ref: '#/components/schemas/OrderReturnLineItem'
        return_service_charges:
          type: array
          description: Collection of service charges which are being returned.
          readOnly: true
          items:
            $ref: '#/components/schemas/OrderReturnServiceCharge'
        return_taxes:
          type: array
          description: |-
            Collection of references to taxes being returned for an order, including the total
            applied tax amount to be returned. The taxes must reference a top-level tax ID from the source
            order.
          items:
            $ref: '#/components/schemas/OrderReturnTax'
        return_discounts:
          type: array
          description: |-
            Collection of references to discounts being returned for an order, including the total
            applied discount amount to be returned. The discounts must reference a top-level discount ID
            from the source order.
          items:
            $ref: '#/components/schemas/OrderReturnDiscount'
        rounding_adjustment:
          $ref: '#/components/schemas/OrderRoundingAdjustment'
        return_amounts:
          $ref: '#/components/schemas/OrderMoneyAmounts'
      description: The set of line items, service charges, taxes, discounts, tips,
        etc. being returned in an Order.
      x-release-status: BETA
    OrderReturnDiscount:
      type: object
      properties:
        uid:
          maxLength: 60
          type: string
          description: Unique ID that identifies the return discount only within this
            order.
        source_discount_uid:
          maxLength: 60
          type: string
          description: '`uid` of the Discount from the Order which contains the original
            application of this discount.'
        catalog_object_id:
          maxLength: 192
          type: string
          description: The catalog object id referencing [CatalogDiscount](#type-catalogdiscount).
        name:
          maxLength: 255
          type: string
          description: The discount's name.
        type:
          $ref: '#/components/schemas/OrderLineItemDiscountType'
        percentage:
          maxLength: 10
          type: string
          description: |-
            The percentage of the tax, as a string representation of a decimal number.
            A value of `7.25` corresponds to a percentage of 7.25%.

            `percentage` is not set for amount-based discounts.
        amount_money:
          $ref: '#/components/schemas/Money'
        applied_money:
          $ref: '#/components/schemas/Money'
        scope:
          $ref: '#/components/schemas/OrderLineItemDiscountScope'
      description: |-
        Represents a discount being returned that applies to one or more return line items in an
        order.

        Fixed-amount, order-scoped discounts are distributed across all non-zero return line item totals.
        The amount distributed to each return line item is relative to that item’s contribution to the
        order subtotal.
      x-release-status: BETA
    OrderReturnLineItem:
      required:
      - quantity
      type: object
      properties:
        uid:
          maxLength: 60
          type: string
          description: Unique identifier for this return line item entry.
        source_line_item_uid:
          maxLength: 60
          type: string
          description: '`uid` of the LineItem in the original sale Order.'
        name:
          maxLength: 500
          type: string
          description: The name of the line item.
        quantity:
          maxLength: 12
          minLength: 1
          type: string
          description: |-
            The quantity returned, formatted as a decimal number.
            For example: `"3"`.

            Line items with a `quantity_unit` can have non-integer quantities.
            For example: `"1.70000"`.
        quantity_unit:
          $ref: '#/components/schemas/OrderQuantityUnit'
        note:
          maxLength: 500
          type: string
          description: The note of the returned line item.
        catalog_object_id:
          maxLength: 192
          type: string
          description: The [CatalogItemVariation](#type-catalogitemvariation) id applied
            to this returned line item.
        variation_name:
          maxLength: 255
          type: string
          description: The name of the variation applied to this returned line item.
        return_modifiers:
          type: array
          description: The [CatalogModifier](#type-catalogmodifier)s applied to this
            line item.
          items:
            $ref: '#/components/schemas/OrderReturnLineItemModifier'
        applied_taxes:
          type: array
          description: |-
            The list of references to `OrderReturnTax` entities applied to the returned line item. Each
            `OrderLineItemAppliedTax` has a `tax_uid` that references the `uid` of a top-level
            `OrderReturnTax` applied to the returned line item. On reads, the amount applied
            is populated.
          items:
            $ref: '#/components/schemas/OrderLineItemAppliedTax'
        applied_discounts:
          type: array
          description: |-
            The list of references to `OrderReturnDiscount` entities applied to the returned line item. Each
            `OrderLineItemAppliedDiscount` has a `discount_uid` that references the `uid` of a top-level
            `OrderReturnDiscount` applied to the returned line item. On reads, the amount
            applied is populated.
          items:
            $ref: '#/components/schemas/OrderLineItemAppliedDiscount'
        base_price_money:
          $ref: '#/components/schemas/Money'
        variation_total_price_money:
          $ref: '#/components/schemas/Money'
        gross_return_money:
          $ref: '#/components/schemas/Money'
        total_tax_money:
          $ref: '#/components/schemas/Money'
        total_discount_money:
          $ref: '#/components/schemas/Money'
        total_money:
          $ref: '#/components/schemas/Money'
      description: The line item being returned in an Order.
      x-release-status: BETA
    OrderReturnLineItemModifier:
      type: object
      properties:
        uid:
          maxLength: 60
          type: string
          description: Unique ID that identifies the return modifier only within this
            order.
        source_modifier_uid:
          maxLength: 60
          type: string
          description: |-
            `uid` of the Modifier from the LineItem from the Order which contains the
            original sale of this line item modifier.
        catalog_object_id:
          maxLength: 192
          type: string
          description: The catalog object id referencing [CatalogModifier](#type-catalogmodifier).
        name:
          maxLength: 255
          type: string
          description: The name of the item modifier.
        base_price_money:
          $ref: '#/components/schemas/Money'
        total_price_money:
          $ref: '#/components/schemas/Money'
      description: A line item modifier being returned.
      x-release-status: BETA
    OrderReturnServiceCharge:
      type: object
      properties:
        uid:
          maxLength: 60
          type: string
          description: Unique ID that identifies the return service charge only within
            this order.
          x-release-status: BETA
        source_service_charge_uid:
          maxLength: 60
          type: string
          description: |-
            `uid` of the Service Charge from the Order containing the original
            charge of the service charge. `source_service_charge_uid` is `null` for
            unlinked returns.
        name:
          maxLength: 255
          type: string
          description: The name of the service charge.
        catalog_object_id:
          maxLength: 192
          type: string
          description: The catalog object ID of the associated [CatalogServiceCharge](#type-catalogservicecharge).
        percentage:
          maxLength: 10
          type: string
          description: |-
            The percentage of the service charge, as a string representation of
            a decimal number. For example, a value of `"7.25"` corresponds to a
            percentage of 7.25%.

            Exactly one of `percentage` or `amount_money` should be set.
        amount_money:
          $ref: '#/components/schemas/Money'
        applied_money:
          $ref: '#/components/schemas/Money'
        total_money:
          $ref: '#/components/schemas/Money'
        total_tax_money:
          $ref: '#/components/schemas/Money'
        calculation_phase:
          $ref: '#/components/schemas/OrderServiceChargeCalculationPhase'
        taxable:
          type: boolean
          description: |-
            Indicates whether the surcharge can be taxed. Service charges
            calculated in the `TOTAL_PHASE` cannot be marked as taxable.
        applied_taxes:
          type: array
          description: |-
            The list of references to `OrderReturnTax` entities applied to the
            `OrderReturnServiceCharge`. Each `OrderLineItemAppliedTax` has a `tax_uid`
            that references the `uid` of a top-level `OrderReturnTax` that is being
            applied to the `OrderReturnServiceCharge`. On reads, the amount applied is
            populated.
          items:
            $ref: '#/components/schemas/OrderLineItemAppliedTax'
          x-release-status: BETA
      description: Represents the service charge applied to the original order.
      x-release-status: PUBLIC
    OrderReturnTax:
      type: object
      properties:
        uid:
          maxLength: 60
          type: string
          description: Unique ID that identifies the return tax only within this order.
        source_tax_uid:
          maxLength: 60
          type: string
          description: '`uid` of the Tax from the Order which contains the original
            charge of this tax.'
        catalog_object_id:
          maxLength: 192
          type: string
          description: The catalog object id referencing [CatalogTax](#type-catalogtax).
        name:
          maxLength: 255
          type: string
          description: The tax's name.
        type:
          $ref: '#/components/schemas/OrderLineItemTaxType'
        percentage:
          maxLength: 10
          type: string
          description: |-
            The percentage of the tax, as a string representation of a decimal number.
            For example, a value of `"7.25"` corresponds to a percentage of 7.25%.
        applied_money:
          $ref: '#/components/schemas/Money'
        scope:
          $ref: '#/components/schemas/OrderLineItemTaxScope'
      description: |-
        Represents a tax being returned that applies to one or more return line items in an order.

        Fixed-amount, order-scoped taxes are distributed across all non-zero return line item totals.
        The amount distributed to each return line item is relative to that item’s contribution to the
        order subtotal.
      x-release-status: BETA
    OrderReward:
      required:
      - id
      - reward_tier_id
      type: object
      properties:
        id:
          minLength: 1
          type: string
          description: The identifier of the reward.
        reward_tier_id:
          minLength: 1
          type: string
          description: The identifier of the reward tier corresponding to this reward.
      description: |-
        Represents a reward that may be applied to an order if the necessary
        reward tier criteria are met. Rewards are created through the Loyalty API.
      x-release-status: BETA
    OrderRoundingAdjustment:
      type: object
      properties:
        uid:
          maxLength: 60
          type: string
          description: Unique ID that identifies the rounding adjustment only within
            this order.
        name:
          type: string
          description: The name of the rounding adjustment from the original sale
            Order.
        amount_money:
          $ref: '#/components/schemas/Money'
      description: |-
        A rounding adjustment of the money being returned. Commonly used to apply Cash Rounding
        when the minimum unit of account is smaller than the lowest physical denomination of currency.
      x-release-status: BETA
    OrderServiceCharge:
      type: object
      properties:
        uid:
          maxLength: 60
          type: string
          description: Unique ID that identifies the service charge only within this
            order.
          x-release-status: BETA
        name:
          maxLength: 255
          type: string
          description: The name of the service charge.
        catalog_object_id:
          maxLength: 192
          type: string
          description: The catalog object ID referencing the service charge [CatalogObject](#type-catalogobject).
        percentage:
          maxLength: 10
          type: string
          description: |-
            The service charge percentage as a string representation of a
            decimal number. For example, `"7.25"` indicates a service charge of 7.25%.

            Exactly 1 of `percentage` or `amount_money` should be set.
        amount_money:
          $ref: '#/components/schemas/Money'
        applied_money:
          $ref: '#/components/schemas/Money'
        total_money:
          $ref: '#/components/schemas/Money'
        total_tax_money:
          $ref: '#/components/schemas/Money'
        calculation_phase:
          $ref: '#/components/schemas/OrderServiceChargeCalculationPhase'
        taxable:
          type: boolean
          description: |-
            Indicates whether the service charge can be taxed. If set to `true`,
            order-level taxes automatically apply to the service charge. Note that
            service charges calculated in the `TOTAL_PHASE` cannot be marked as taxable.
        applied_taxes:
          type: array
          description: |-
            The list of references to taxes applied to this service charge. Each
            `OrderLineItemAppliedTax` has a `tax_uid` that references the `uid` of a top-level
            `OrderLineItemTax` that is being applied to this service charge. On reads, the amount applied
            is populated.

            An `OrderLineItemAppliedTax` will be automatically created on every taxable service charge
            for all `ORDER` scoped taxes that are added to the order. `OrderLineItemAppliedTax` records
            for `LINE_ITEM` scoped taxes must be added in requests for the tax to apply to any taxable
            service charge.  Taxable service charges have the `taxable` field set to true and calculated
            in the `SUBTOTAL_PHASE`.

            To change the amount of a tax, modify the referenced top-level tax.
          items:
            $ref: '#/components/schemas/OrderLineItemAppliedTax'
          x-release-status: BETA
        metadata:
          type: object
          additionalProperties:
            type: string
          description: |-
            Application-defined data attached to this service charge. Metadata fields are intended
            to store descriptive references or associations with an entity in another system or store brief
            information about the object. Square does not process this field; it only stores and returns it
            in relevant API calls. Do not use metadata to store any sensitive information (personally
            identifiable information, card details, etc.).

            Keys written by applications must be 60 characters or less and must be in the character set
            `[a-zA-Z0-9_-]`. Entries may also include metadata generated by Square. These keys are prefixed
            with a namespace, separated from the key with a ':' character.

            Values have a max length of 255 characters.

            An application may have up to 10 entries per metadata field.

            Entries written by applications are private and can only be read or modified by the same
            application.

            See [Metadata](https://developer.squareup.com/docs/build-basics/metadata) for more information.
          x-release-status: BETA
      description: Represents a service charge applied to an order.
      x-release-status: PUBLIC
    OrderSource:
      type: object
      properties:
        name:
          type: string
          description: |-
            The name used to identify the place (physical or digital) that an order originates.
            If unset, the name defaults to the name of the application that created the order.
      description: Represents the origination details of an order.
      x-release-status: PUBLIC
    OrderUpdated:
      type: object
      properties:
        order_id:
          type: string
          description: The order's unique ID.
        version:
          type: integer
          description: |-
            Version number which is incremented each time an update is committed to the order.
            Orders that were not created through the API will not include a version and
            thus cannot be updated.

            [Read more about working with versions](https://developer.squareup.com/docs/docs/orders-api/manage-orders#update-orders)
        location_id:
          type: string
          description: The ID of the merchant location this order is associated with.
        state:
          $ref: '#/components/schemas/OrderState'
        created_at:
          type: string
          description: Timestamp for when the order was created in RFC 3339 format.
          readOnly: true
        updated_at:
          type: string
          description: Timestamp for when the order was last updated in RFC 3339 format.
          readOnly: true
      x-release-status: BETA
    OrderUpdatedObject:
      type: object
      properties:
        order_updated:
          $ref: '#/components/schemas/OrderUpdated'
      x-release-status: BETA
    OrderUpdatedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        type:
          type: string
          description: The type of event this represents, `"order.updated"`.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/OrderUpdatedWebhookData'
      description: |-
        Published when an [Order](#type-Order) is updated. This
        event is triggered only by the [UpdateOrder](#endpoint-Orders-CreateOrder)
        endpoint call.
      example:
        merchant_id: 5S9MXCS9Y99KK
        type: order.updated
        event_id: 4b8e5c91-9f17-4cf1-900a-4a0629f81add
        created_at: 2020-04-16T23:14:26.359Z
        data:
          type: order
          id: eA3vssLHKJrv9H0IdJCM3gNqfdcZY
          object:
            order_updated:
              created_at: 2020-04-16T23:14:26.129Z
              location_id: FPYCBCHYMXFK1
              order_id: eA3vssLHKJrv9H0IdJCM3gNqfdcZY
              state: OPEN
              updated_at: 2020-04-16T23:14:26.359Z
              version: 2
      x-release-status: BETA
      x-visibility: DOC_ONLY
      x-webhook:
        event: order.updated
        scopes:
        - ORDERS_READ
      x-api: '#/components/x-apis/Orders'
      x-since: 2020-04-22
    OrderUpdatedWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the affected object’s type, `"order"`.
        id:
          type: string
          description: ID of the affected order.
        object:
          $ref: '#/components/schemas/OrderUpdatedObject'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    PayOrderRequest:
      required:
      - idempotency_key
      type: object
      properties:
        idempotency_key:
          maxLength: 192
          minLength: 1
          type: string
          description: |-
            A value you specify that uniquely identifies this request among requests you've sent. If
            you're unsure whether a particular payment request was completed successfully, you can reattempt
            it with the same idempotency key without worrying about duplicate payments.

            See [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency) for more information.
        order_version:
          type: integer
          description: The version of the order being paid. If not supplied, the latest
            version will be paid.
        payment_ids:
          type: array
          description: |-
            The IDs of the [payments](#type-payment) to collect.
            The payment total must match the order total.
          items:
            type: string
      description: |-
        Defines the fields that are included in requests to the
        [PayOrder](#endpoint-payorder) endpoint.
      example:
        idempotency_key: c043a359-7ad9-4136-82a9-c3f1d66dcbff
        payment_ids:
        - EnZdNAlWCmfh6Mt5FMNST1o7taB
        - 0LRiVlbXVwe8ozu4KbZxd12mvaB
      x-release-status: BETA
    PayOrderResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        order:
          $ref: '#/components/schemas/Order'
      description: |-
        Defines the fields that are included in the response body of a request to the
        [PayOrder](#endpoint-payorder) endpoint.
      example:
        order:
          id: lgwOlEityYPJtcuvKTVKT1pA986YY
          location_id: P3CCK6HSNDAS7
          line_items:
          - uid: QW6kofLHJK7JEKMjlSVP5C
            quantity: "1"
            name: Item 1
            base_price_money:
              amount: 500
              currency: USD
            gross_sales_money:
              amount: 500
              currency: USD
            total_tax_money:
              amount: 0
              currency: USD
            total_discount_money:
              amount: 0
              currency: USD
            total_money:
              amount: 500
              currency: USD
          - uid: zhw8MNfRGdFQMI2WE1UBJD
            quantity: "2"
            name: Item 2
            base_price_money:
              amount: 750
              currency: USD
            gross_sales_money:
              amount: 1500
              currency: USD
            total_tax_money:
              amount: 0
              currency: USD
            total_discount_money:
              amount: 0
              currency: USD
            total_money:
              amount: 1500
              currency: USD
          created_at: 2019-08-06T02:47:35.693Z
          updated_at: 2019-08-06T02:47:37.140Z
          version: 4
          total_tax_money:
            amount: 0
            currency: USD
          total_discount_money:
            amount: 0
            currency: USD
          total_money:
            amount: 2000
            currency: USD
          closed_at: 2019-08-06T02:47:37.140Z
          tenders:
          - id: EnZdNAlWCmfh6Mt5FMNST1o7taB
            location_id: P3CCK6HSNDAS7
            transaction_id: lgwOlEityYPJtcuvKTVKT1pA986YY
            created_at: 2019-08-06T02:47:36.293Z
            amount_money:
              amount: 1000
              currency: USD
            type: CARD
            card_details:
              status: CAPTURED
              card:
                card_brand: VISA
                last_4: "1111"
                exp_month: 2
                exp_year: 2022
                fingerprint: sq-1-n_BL15KP87ClDa4-h2nXOI0fp5VnxNH6hfhzqhptTfAgxgLuGFcg6jIPngDz4IkkTQ
              entry_method: KEYED
            payment_id: EnZdNAlWCmfh6Mt5FMNST1o7taB
          - id: 0LRiVlbXVwe8ozu4KbZxd12mvaB
            location_id: P3CCK6HSNDAS7
            transaction_id: lgwOlEityYPJtcuvKTVKT1pA986YY
            created_at: 2019-08-06T02:47:36.809Z
            amount_money:
              amount: 1000
              currency: USD
            type: CARD
            card_details:
              status: CAPTURED
              card:
                card_brand: VISA
                last_4: "1111"
                exp_month: 2
                exp_year: 2022
                fingerprint: sq-1-n_BL15KP87ClDa4-h2nXOI0fp5VnxNH6hfhzqhptTfAgxgLuGFcg6jIPngDz4IkkTQ
              entry_method: KEYED
            payment_id: 0LRiVlbXVwe8ozu4KbZxd12mvaB
          total_service_charge_money:
            amount: 0
            currency: USD
          net_amounts:
            total_money:
              amount: 2000
              currency: USD
            tax_money:
              amount: 0
              currency: USD
            discount_money:
              amount: 0
              currency: USD
            tip_money:
              amount: 0
              currency: USD
            service_charge_money:
              amount: 0
              currency: USD
          source:
            name: Source Name
          state: COMPLETED
      x-release-status: BETA
    Payment:
      type: object
      properties:
        id:
          maxLength: 192
          type: string
          description: Unique ID for the payment.
          readOnly: true
        created_at:
          maxLength: 32
          type: string
          description: Timestamp of when the payment was created, in RFC 3339 format.
          readOnly: true
        updated_at:
          maxLength: 32
          type: string
          description: Timestamp of when the payment was last updated, in RFC 3339
            format.
          readOnly: true
        amount_money:
          $ref: '#/components/schemas/Money'
        tip_money:
          $ref: '#/components/schemas/Money'
        total_money:
          $ref: '#/components/schemas/Money'
        app_fee_money:
          $ref: '#/components/schemas/Money'
        processing_fee:
          type: array
          description: Processing fees and fee adjustments assessed by Square on this
            payment.
          readOnly: true
          items:
            $ref: '#/components/schemas/ProcessingFee'
        refunded_money:
          $ref: '#/components/schemas/Money'
        status:
          maxLength: 50
          type: string
          description: Indicates whether the payment is `APPROVED`, `COMPLETED`, `CANCELED`,
            or `FAILED`.
          readOnly: true
        delay_duration:
          type: string
          description: |-
            The duration of time after the payment's creation when Square automatically applies the
            `delay_action` to the payment. This automatic `delay_action` applies only to payments that
            don't reach a terminal state (COMPLETED, CANCELED, or FAILED) before the `delay_duration`
            time period.

            This field is specified as a time duration, in RFC 3339 format.

            Notes:
            This feature is only supported for card payments.

            Default:

            - Card Present payments: "PT36H" (36 hours) from the creation time.
            - Card Not Present payments: "P7D" (7 days) from the creation time.
          readOnly: true
          x-release-status: BETA
        delay_action:
          type: string
          description: |-
            The action to be applied to the payment when the `delay_duration` has elapsed. This field
            is read only.

            Current values include:
            `CANCEL`
          readOnly: true
          x-release-status: BETA
        delayed_until:
          type: string
          description: |-
            Read only timestamp of when the `delay_action` will automatically be applied,
            in RFC 3339 format.

            Note that this field is calculated by summing the payment's `delay_duration` and `created_at`
            fields. The `created_at` field is generated by Square and may not exactly match the
            time on your local machine.
          readOnly: true
          x-release-status: BETA
        source_type:
          maxLength: 50
          type: string
          description: |-
            The source type for this payment

            Current values include: `CARD`.
          readOnly: true
        card_details:
          $ref: '#/components/schemas/CardPaymentDetails'
        location_id:
          maxLength: 50
          type: string
          description: ID of the location associated with the payment.
          readOnly: true
        order_id:
          maxLength: 192
          type: string
          description: ID of the order associated with this payment.
          readOnly: true
        reference_id:
          maxLength: 40
          type: string
          description: |-
            An optional ID that associates this payment with an entity in
            another system.
          readOnly: true
        customer_id:
          maxLength: 191
          type: string
          description: The [Customer](#type-customer) ID of the customer associated
            with the payment.
          readOnly: true
        employee_id:
          maxLength: 192
          type: string
          description: An optional ID of the employee associated with taking this
            payment.
          readOnly: true
        refund_ids:
          type: array
          description: List of `refund_id`s identifying refunds for this payment.
          readOnly: true
          items:
            type: string
        buyer_email_address:
          maxLength: 255
          type: string
          description: The buyer's e-mail address
          readOnly: true
        billing_address:
          $ref: '#/components/schemas/Address'
        shipping_address:
          $ref: '#/components/schemas/Address'
        note:
          maxLength: 500
          type: string
          description: An optional note to include when creating a payment
          readOnly: true
        statement_description_identifier:
          type: string
          description: |-
            Additional payment information that gets added on the customer's card statement
            as part of the statement description.

            Note that the `statement_description_identifier` may get truncated on the statement description
            to fit the required information including the Square identifier (SQ *) and name of the
            merchant taking the payment.
          readOnly: true
          x-release-status: BETA
        receipt_number:
          maxLength: 4
          type: string
          description: |-
            The payment's receipt number.
            The field will be missing if a payment is CANCELED
          readOnly: true
        receipt_url:
          maxLength: 255
          type: string
          description: |-
            The URL for the payment's receipt.
            The field will only be populated for COMPLETED payments.
          readOnly: true
      description: Represents a payment processed by the Square API.
      x-release-status: PUBLIC
    PaymentCreatedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        type:
          type: string
          description: The type of event this represents, `"payment.created"`.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/PaymentCreatedWebhookData'
      description: Published when a [Payment](#type-Payment) is created.
      example:
        merchant_id: 6SSW7HV8K2ST5
        type: payment.created
        event_id: 13b867cf-db3d-4b1c-90b6-2f32a9d78124
        created_at: 2020-02-06T21:27:30.792Z
        data:
          type: payment
          id: KkAkhdMsgzn59SM8A89WgKwekxLZY
          object:
            payment:
              id: KkAkhdMsgzn59SM8A89WgKwekxLZY
              created_at: 2020-02-06T21:27:30.444Z
              updated_at: 2020-02-06T21:27:30.590Z
              amount_money:
                amount: 1000
                currency: USD
              total_money:
                amount: 1000
                currency: USD
              status: APPROVED
              source_type: CARD
              card_details:
                auth_result_code: YFB91d
                avs_status: AVS_ACCEPTED
                card:
                  bin: "411111"
                  card_brand: VISA
                  card_type: CREDIT
                  exp_month: 2
                  exp_year: 2022
                  fingerprint: sq-1-pu54rLMT5m8qddqnsWaSBI9zJkDH_mMy8hC2qe6MUzdP4MCSHaHZtm_XNuiiso95gQ
                  last_4: "1111"
                cvv_status: CVV_ACCEPTED
                entry_method: KEYED
                statement_description: SQ *MY BUSINESS
                status: AUTHORIZED
              location_id: NAQ1FHV6ZJ8YV
              order_id: j3WfFVLi7XdcrH3BxoV0L3EHqe4F
              receipt_number: KkAk
              receipt_url: https://squareup.com/receipt/preview/KkAkhdMsgzn59SM8A89WgKwekxLZY
              reference_id: "123456"
              note: Brief description
              customer_id: VDKXEEKPJN48QDG3BGGFAK05P8
              version: 1
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
      x-webhook:
        event: payment.created
        scopes:
        - PAYMENTS_READ
      x-api: '#/components/x-apis/Payments'
      x-since: 2020-02-26
    PaymentCreatedWebhookData:
      type: object
      properties:
        type:
          maxLength: 50
          type: string
          description: Name of the affected object’s type, `"payment"`.
        id:
          maxLength: 192
          type: string
          description: ID of the affected payment.
        object:
          $ref: '#/components/schemas/PaymentCreatedWebhookObject'
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    PaymentCreatedWebhookObject:
      type: object
      properties:
        payment:
          $ref: '#/components/schemas/Payment'
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    PaymentOptions:
      type: object
      properties:
        autocomplete:
          type: boolean
          description: |-
            Indicates whether the Payment objects created from this `TerminalCheckout` will automatically be
            COMPLETED or left in an APPROVED state for later modification.
      x-release-status: BETA
    PaymentRefund:
      required:
      - amount_money
      - id
      type: object
      properties:
        id:
          maxLength: 255
          minLength: 1
          type: string
          description: Unique ID for this refund, generated by Square.
        status:
          maxLength: 50
          type: string
          description: |-
            The refund's status:
            - `PENDING` - awaiting approval
            - `COMPLETED` - successfully completed
            - `REJECTED` - the refund was rejected
            - `FAILED` - an error occurred
        location_id:
          maxLength: 50
          type: string
          description: Location ID associated with the payment this refund is attached
            to.
        amount_money:
          $ref: '#/components/schemas/Money'
        app_fee_money:
          $ref: '#/components/schemas/Money'
        processing_fee:
          type: array
          description: Processing fees and fee adjustments assessed by Square on this
            refund.
          items:
            $ref: '#/components/schemas/ProcessingFee'
        payment_id:
          maxLength: 192
          type: string
          description: The ID of the payment assocated with this refund.
        order_id:
          maxLength: 192
          type: string
          description: The ID of the order associated with the refund.
        reason:
          maxLength: 192
          type: string
          description: The reason for the refund.
        created_at:
          maxLength: 32
          type: string
          description: Timestamp of when the refund was created, in RFC 3339 format.
          readOnly: true
        updated_at:
          maxLength: 32
          type: string
          description: Timestamp of when the refund was last updated, in RFC 3339
            format.
          readOnly: true
      description: |-
        Represents a refund of a payment made using Square. Contains information on
        the original payment and the amount of money refunded.
      x-release-status: PUBLIC
    PaymentUpdatedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        type:
          type: string
          description: The type of event this represents, `"payment.updated"`.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/PaymentUpdatedWebhookData'
      description: |-
        Published when a [Payment](#type-Payment) is updated.
        Typically the `payment.status`, or `card_details.status` fields are updated
        as a payment is canceled, authorized, or completed.
      example:
        merchant_id: 6SSW7HV8K2ST5
        type: payment.updated
        event_id: 6a8f5f28-54a1-4eb0-a98a-3111513fd4fc
        created_at: 2020-02-06T21:27:34.308Z
        data:
          type: payment
          id: KkAkhdMsgzn59SM8A89WgKwekxLZY
          object:
            payment:
              id: KkAkhdMsgzn59SM8A89WgKwekxLZY
              created_at: 2020-02-06T21:27:30.444Z
              updated_at: 2020-02-06T21:27:33.399Z
              amount_money:
                amount: 1000
                currency: USD
              total_money:
                amount: 1000
                currency: USD
              status: COMPLETED
              source_type: CARD
              card_details:
                auth_result_code: YFB91d
                avs_status: AVS_ACCEPTED
                card:
                  bin: "411111"
                  card_brand: VISA
                  card_type: CREDIT
                  exp_month: 2
                  exp_year: 2022
                  fingerprint: sq-1-pu54rLMT5m8qddqnsWaSBI9zJkDH_mMy8hC2qe6MUzdP4MCSHaHZtm_XNuiiso95gQ
                  last_4: "1111"
                cvv_status: CVV_ACCEPTED
                entry_method: KEYED
                statement_description: SQ *MY BUSINESS
                status: CAPTURED
              location_id: NAQ1FHV6ZJ8YV
              order_id: j3WfFVLi7XdcrH3BxoV0L3EHqe4F
              receipt_number: KkAk
              receipt_url: https://squareup.com/receipt/preview/KkAkhdMsgzn59SM8A89WgKwekxLZY
              reference_id: "123456"
              note: Brief description
              customer_id: VDKXEEKPJN48QDG3BGGFAK05P8
              version: 4
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
      x-webhook:
        event: payment.updated
        scopes:
        - PAYMENTS_READ
      x-api: '#/components/x-apis/Payments'
      x-since: 2020-02-26
    PaymentUpdatedWebhookData:
      type: object
      properties:
        type:
          maxLength: 50
          type: string
          description: Name of the affected object’s type, `"payment"`.
        id:
          maxLength: 192
          type: string
          description: ID of the affected payment.
        object:
          $ref: '#/components/schemas/PaymentUpdatedWebhookObject'
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    PaymentUpdatedWebhookObject:
      type: object
      properties:
        payment:
          $ref: '#/components/schemas/Payment'
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    ProcessingFee:
      type: object
      properties:
        effective_at:
          type: string
          description: Timestamp of when the fee takes effect, in RFC 3339 format.
        type:
          type: string
          description: 'The type of fee assessed or adjusted. Can be one of: `INITIAL`,
            `ADJUSTMENT`.'
        amount_money:
          $ref: '#/components/schemas/Money'
      description: Represents Square processing fee.
      x-release-status: PUBLIC
    PublishInvoiceRequest:
      required:
      - version
      type: object
      properties:
        version:
          minimum: 0
          type: integer
          description: |-
            The version of the [Invoice](#type-invoice) to publish.
            This must match the current version of the invoice,
            otherwise the request is rejected.
        idempotency_key:
          maxLength: 128
          type: string
          description: "A unique string that identifies the `PublishInvoice` request.\
            \ If you do not \nprovide `idempotency_key` (or provide an empty string\
            \ as the value), the endpoint \ntreats each request as independent.\n\n\
            For more information, see [Idempotency](https://developer.squareup.com/docs/docs/working-with-apis/idempotency)."
      description: Describes a `PublishInvoice` request.
      example:
        version: 1
        idempotency_key: 32da42d0-1997-41b0-826b-f09464fc2c2e
      x-release-status: BETA
    PublishInvoiceResponse:
      type: object
      properties:
        invoice:
          $ref: '#/components/schemas/Invoice'
        errors:
          type: array
          description: Information about errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: Describes a `PublishInvoice` response.
      example:
        invoice:
          id: gt2zv1z6mnUm1V7KMxxf3w
          version: 1
          location_id: ES0RJRZYEC39A
          order_id: CAISENgvlJ6jLWAzERDzjyHVybY
          payment_requests:
          - uid: 2da7964f-f3d2-4f43-81e8-5aa220bf3355
            request_method: EMAIL
            request_type: BALANCE
            due_date: 2030-01-24
            tipping_enabled: true
            reminders:
            - uid: beebd363-e47f-4075-8785-c235aaa7df11
              relative_scheduled_days: -1
              message: Your invoice is due tomorrow
              status: PENDING
            computed_amount_money:
              amount: 10000
              currency: USD
            total_completed_amount_money:
              amount: 0
              currency: USD
          invoice_number: inv-100
          title: Event Planning Services
          description: We appreciate your business!
          scheduled_at: 2030-01-13T10:00:00Z
          status: SCHEDULED
          timezone: America/Los_Angeles
          created_at: 2020-06-18T17:45:13Z
          updated_at: 2020-06-18T18:23:11Z
          primary_recipient:
            customer_id: JDKYHBWT1D4F8MFH63DBMEN8Y4
            given_name: Amelia
            family_name: Earhart
            email_address: Amelia.Earhart@example.com
            phone_number: 1-212-555-4240
      x-release-status: BETA
    Range:
      type: object
      properties:
        min:
          type: string
          description: The lower bound of the number range.
        max:
          type: string
          description: The upper bound of the number range.
      description: The range of a number value between the specified lower and upper
        bounds.
      x-release-status: BETA
    RedeemLoyaltyRewardRequest:
      required:
      - idempotency_key
      - location_id
      type: object
      properties:
        idempotency_key:
          maxLength: 128
          minLength: 1
          type: string
          description: "A unique string that identifies this `RedeemLoyaltyReward`\
            \ request. \nKeys can be any valid string, but must be unique for every\
            \ request."
        location_id:
          minLength: 1
          type: string
          description: The ID of the [location](#type-Location) where the reward is
            redeemed.
      description: A request to redeem a loyalty reward.
      example:
        idempotency_key: 98adc7f7-6963-473b-b29c-f3c9cdd7d994
        location_id: P034NEENMD09F
      x-release-status: BETA
      x-params-example: ?reward_id=9f18ac21-233a-31c3-be77-b45840f5a810
    RedeemLoyaltyRewardResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        event:
          $ref: '#/components/schemas/LoyaltyEvent'
      description: A response that includes the `LoyaltyEvent` published for redeeming
        the reward.
      example:
        event:
          id: 67377a6e-dbdc-369d-aa16-2e7ed422e71f
          type: REDEEM_REWARD
          created_at: 2020-05-08T21:56:00Z
          redeem_reward:
            loyalty_program_id: d619f755-2d17-41f3-990d-c04ecedd64dd
            reward_id: 9f18ac21-233a-31c3-be77-b45840f5a810
          loyalty_account_id: 5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd
          location_id: P034NEENMD09F
          source: LOYALTY_API
      x-release-status: BETA
    Refund:
      required:
      - amount_money
      - id
      - location_id
      - reason
      - status
      - tender_id
      - transaction_id
      type: object
      properties:
        id:
          maxLength: 255
          type: string
          description: The refund's unique ID.
        location_id:
          maxLength: 50
          type: string
          description: The ID of the refund's associated location.
        transaction_id:
          maxLength: 192
          type: string
          description: The ID of the transaction that the refunded tender is part
            of.
        tender_id:
          maxLength: 192
          type: string
          description: The ID of the refunded tender.
        created_at:
          maxLength: 32
          type: string
          description: The timestamp for when the refund was created, in RFC 3339
            format.
        reason:
          maxLength: 192
          type: string
          description: The reason for the refund being issued.
        amount_money:
          $ref: '#/components/schemas/Money'
        status:
          $ref: '#/components/schemas/RefundStatus'
        processing_fee_money:
          $ref: '#/components/schemas/Money'
        additional_recipients:
          type: array
          description: |-
            Additional recipients (other than the merchant) receiving a portion of this refund.
            For example, fees assessed on a refund of a purchase by a third party integration.
          items:
            $ref: '#/components/schemas/AdditionalRecipient'
      description: Represents a refund processed for a Square transaction.
      x-release-status: PUBLIC
    RefundCreatedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        type:
          type: string
          description: The type of event this represents, `"refund.created"`.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/RefundCreatedWebhookData'
      description: Published when a [Refund](#type-PaymentRefund) is created.
      example:
        merchant_id: 6SSW7HV8K2ST5
        type: refund.created
        event_id: bc316346-6691-4243-88ed-6d651a0d0c47
        created_at: 2020-02-06T21:27:41.852Z
        data:
          type: refund
          id: KkAkhdMsgzn59SM8A89WgKwekxLZY_ptNBVqHYxt5gAdfcobBe4u1AZsXhoz06KTtuq9Ls24P
          object:
            refund:
              id: KkAkhdMsgzn59SM8A89WgKwekxLZY_ptNBVqHYxt5gAdfcobBe4u1AZsXhoz06KTtuq9Ls24P
              created_at: 2020-02-06T21:27:41.836Z
              updated_at: 2020-02-06T21:27:41.846Z
              amount_money:
                amount: 1000
                currency: USD
              status: PENDING
              location_id: NAQ1FHV6ZJ8YV
              order_id: haOyDuHiqtAXMk0d8pDKXpL7Jg4F
              payment_id: KkAkhdMsgzn59SM8A89WgKwekxLZY
              version: 7
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
      x-webhook:
        event: refund.created
        scopes:
        - PAYMENTS_READ
      x-api: '#/components/x-apis/Refunds'
      x-since: 2020-02-26
    RefundCreatedWebhookData:
      type: object
      properties:
        type:
          maxLength: 50
          type: string
          description: Name of the affected object’s type, `"refund"`.
        id:
          maxLength: 255
          type: string
          description: ID of the affected refund.
        object:
          $ref: '#/components/schemas/RefundCreatedWebhookObject'
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    RefundCreatedWebhookObject:
      type: object
      properties:
        refund:
          $ref: '#/components/schemas/PaymentRefund'
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    RefundPaymentRequest:
      required:
      - amount_money
      - idempotency_key
      - payment_id
      type: object
      properties:
        idempotency_key:
          minLength: 1
          type: string
          description: |2-
             A unique string that identifies this RefundPayment request. Key can be any valid string
            but must be unique for every RefundPayment request.

            For more information, see [Idempotency keys](https://developer.squareup.com/docs/working-with-apis/idempotency).
        amount_money:
          $ref: '#/components/schemas/Money'
        app_fee_money:
          $ref: '#/components/schemas/Money'
        payment_id:
          minLength: 1
          type: string
          description: Unique ID of the payment being refunded.
        reason:
          maxLength: 192
          type: string
          description: A description of the reason for the refund.
      description: Refunds a payment.
      example:
        idempotency_key: a7e36d40-d24b-11e8-b568-0800200c9a66
        payment_id: UNOE3kv2BZwqHlJ830RCt5YCuaB
        amount_money:
          amount: 100
          currency: USD
      x-release-status: PUBLIC
    RefundPaymentResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
        refund:
          $ref: '#/components/schemas/PaymentRefund'
      description: |-
        Defines the fields that are included in the response body of
        a request to the [RefundPayment](#endpoint-refunds-refundpayment) endpoint.

        Note: if there are errors processing the request, the refund field may not be
        present, or it may be present in a FAILED state.
      example:
        refund:
          id: UNOE3kv2BZwqHlJ830RCt5YCuaB_xVteEWVFkXDvKN1ddidfJWipt8p9whmElKT5mZtJ7wZ
          status: PENDING
          amount_money:
            amount: 100
            currency: USD
          payment_id: UNOE3kv2BZwqHlJ830RCt5YCuaB
          created_at: 2018-10-17T20:41:55.520Z
          updated_at: 2018-10-17T20:41:55.520Z
      x-release-status: PUBLIC
    RefundUpdatedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        type:
          type: string
          description: The type of event this represents, `"refund.updated"`.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/RefundUpdatedWebhookData'
      description: |-
        Published when a [Refund](#type-PaymentRefund) is updated.
        Typically the `refund.status` changes when a refund is completed.
      example:
        merchant_id: 6SSW7HV8K2ST5
        type: refund.updated
        event_id: bc316346-6691-4243-88ed-6d651a0d0c47
        created_at: 2020-02-06T22:14:16.421Z
        data:
          type: refund
          id: KkAkhdMsgzn59SM8A89WgKwekxLZY_ptNBVqHYxt5gAdfcobBe4u1AZsXhoz06KTtuq9Ls24P
          object:
            refund:
              id: KkAkhdMsgzn59SM8A89WgKwekxLZY_ptNBVqHYxt5gAdfcobBe4u1AZsXhoz06KTtuq9Ls24P
              created_at: 2020-02-06T21:27:41.836Z
              updated_at: 2020-02-06T22:14:16.381Z
              amount_money:
                amount: 1000
                currency: USD
              status: COMPLETED
              processing_fee:
              - effective_at: 2020-02-06T23:27:31.000Z
                type: INITIAL
                amount_money:
                  amount: -59
                  currency: USD
              location_id: NAQ1FHV6ZJ8YV
              order_id: haOyDuHiqtAXMk0d8pDKXpL7Jg4F
              payment_id: KkAkhdMsgzn59SM8A89WgKwekxLZY
              version: 10
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
      x-webhook:
        event: refund.updated
        scopes:
        - PAYMENTS_READ
      x-api: '#/components/x-apis/Refunds'
      x-since: 2020-02-26
    RefundUpdatedWebhookData:
      type: object
      properties:
        type:
          maxLength: 50
          type: string
          description: Name of the affected object’s type, `"refund"`.
        id:
          maxLength: 255
          type: string
          description: ID of the affected refund.
        object:
          $ref: '#/components/schemas/RefundUpdatedWebhookObject'
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    RefundUpdatedWebhookObject:
      type: object
      properties:
        refund:
          $ref: '#/components/schemas/PaymentRefund'
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    RegisterDomainRequest:
      required:
      - domain_name
      type: object
      properties:
        domain_name:
          maxLength: 255
          minLength: 1
          type: string
          description: A domain name as described in RFC-1034 that will be registered
            with ApplePay
      description: |-
        Defines the parameters that can be included in the body of
        a request to the [RegisterDomain](#endpoint-registerdomain) endpoint.
      example:
        domain_name: example.com
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/ApplePay/RegisterDomain/RegisterDomainRequest.python
        csharp: /sdk_samples/ApplePay/RegisterDomain/RegisterDomainRequest.csharp
        java: /sdk_samples/ApplePay/RegisterDomain/RegisterDomainRequest.java
        php: /sdk_samples/ApplePay/RegisterDomain/RegisterDomainRequest.php
        javascript: /sdk_samples/ApplePay/RegisterDomain/RegisterDomainRequest.javascript
        ruby: /sdk_samples/ApplePay/RegisterDomain/RegisterDomainRequest.ruby
    RegisterDomainResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        status:
          $ref: '#/components/schemas/RegisterDomainResponseStatus'
      description: |-
        Defines the fields that are included in the response body of
        a request to the [RegisterDomain](#endpoint-registerdomain) endpoint.

        Either `errors` or `status` will be present in a given response (never both).
      example:
        status: VERIFIED
      x-release-status: PUBLIC
    RemoveDisputeEvidenceRequest:
      type: object
      properties: {}
      description: Defines parameters for a RemoveDisputeEvidence request.
      example: {}
      x-release-status: BETA
    RemoveDisputeEvidenceResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: Defines fields in a RemoveDisputeEvidence response.
      example: {}
      x-release-status: BETA
    RemoveGroupFromCustomerRequest:
      type: object
      properties: {}
      description: |-
        Defines the fields that are included in the request body of
        a request to the [RemoveGroupFromCustomer](#endpoint-removegroupfromcustomer) endpoint.
      example: {}
      x-release-status: BETA
    RemoveGroupFromCustomerResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: |-
        Defines the fields that are included in the response body of
        a request to the [RemoveGroupFromCustomer](#endpoint-removegroupfromcustomer)
        endpoint.
      example: {}
      x-release-status: BETA
    RenewTokenRequest:
      type: object
      properties:
        access_token:
          type: string
          description: The token you want to renew.
      example:
        access_token: ACCESS_TOKEN
      x-release-status: DEPRECATED
      x-sq-sdk-sample-code:
        python: /sdk_samples/RenewToken/RenewTokenRequest.python
        csharp: /sdk_samples/RenewToken/RenewTokenRequest.csharp
        java: /sdk_samples/RenewToken/RenewTokenRequest.java
        php: /sdk_samples/RenewToken/RenewTokenRequest.php
        javascript: /sdk_samples/RenewToken/RenewTokenRequest.javascript
        ruby: /sdk_samples/RenewToken/RenewTokenRequest.ruby
    RenewTokenResponse:
      type: object
      properties:
        access_token:
          type: string
          description: |-
            The renewed access token.
            This value might be different from the `access_token` you provided in your request.
            You provide this token in a header with every request to Connect API endpoints.
            See [Request and response headers](https://developer.squareup.com/docs/api/connect/v2/#requestandresponseheaders) for the format of this header.
        token_type:
          type: string
          description: This value is always _bearer_.
        expires_at:
          type: string
          description: The date when access_token expires, in [ISO 8601](http://www.iso.org/iso/home/standards/iso8601.htm)
            format.
        merchant_id:
          type: string
          description: The ID of the authorizing merchant's business.
        subscription_id:
          type: string
          description: |-
            __LEGACY FIELD__. The ID of the merchant subscription associated with
            the authorization. Only present if the merchant signed up for a subscription
            during authorization..
        plan_id:
          type: string
          description: |-
            __LEGACY FIELD__. The ID of the subscription plan the merchant signed
            up for. Only present if the merchant signed up for a subscription during
            authorization.
      example:
        access_token: ACCESS_TOKEN
        token_type: bearer
        expires_at: 2006-01-02T15:04:05Z
        merchant_id: MERCHANT_ID
      x-release-status: DEPRECATED
      x-sq-sdk-sample-code:
        python: /sdk_samples/RenewToken/RenewTokenResponse.python
        csharp: /sdk_samples/RenewToken/RenewTokenResponse.csharp
        java: /sdk_samples/RenewToken/RenewTokenResponse.java
        php: /sdk_samples/RenewToken/RenewTokenResponse.php
        javascript: /sdk_samples/RenewToken/RenewTokenResponse.javascript
        ruby: /sdk_samples/RenewToken/RenewTokenResponse.ruby
    RetrieveCashDrawerShiftRequest:
      required:
      - location_id
      type: object
      properties:
        location_id:
          minLength: 1
          type: string
          description: The ID of the location to retrieve cash drawer shifts from.
      x-release-status: PUBLIC
    RetrieveCashDrawerShiftResponse:
      type: object
      properties:
        cash_drawer_shift:
          $ref: '#/components/schemas/CashDrawerShift'
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      example:
        cash_drawer_shift:
          expected_cash_money: null
          closed_at: closed_at
          ending_employee_id: ending_employee_id
          employee_ids:
          - employee_ids
          - employee_ids
          cash_refunds_money: null
          description: description
          closing_employee_id: closing_employee_id
          cash_paid_out_money: null
          closed_cash_money: null
          cash_paid_in_money: null
          opened_at: opened_at
          opened_cash_money:
            amount: 0
            currency: UNKNOWN_CURRENCY
          opening_employee_id: opening_employee_id
          cash_payment_money: null
          id: id
          state: OPEN
          device:
            name: name
            id: id
          ended_at: ended_at
        errors:
        - code: INTERNAL_SERVER_ERROR
          field: field
          detail: detail
          category: API_ERROR
        - code: INTERNAL_SERVER_ERROR
          field: field
          detail: detail
          category: API_ERROR
      x-release-status: PUBLIC
    RetrieveCatalogObjectRequest:
      type: object
      properties:
        include_related_objects:
          type: boolean
          description: |-
            If `true`, the response will include additional objects that are related to the
            requested object, as follows:

            If the `object` field of the response contains a CatalogItem,
            its associated CatalogCategory, CatalogTax objects,
            CatalogImages and CatalogModifierLists
            will be returned in the `related_objects` field of the response. If the `object`
            field of the response contains a CatalogItemVariation,
            its parent CatalogItem will be returned in the `related_objects` field of
            the response.

            Default value: `false`
      x-release-status: PUBLIC
      x-params-example: ?include_related_objects=true
      x-sq-sdk-sample-code:
        python: /sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectRequest.python
        csharp: /sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectRequest.csharp
        java: /sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectRequest.java
        php: /sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectRequest.php
        javascript: /sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectRequest.javascript
        ruby: /sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectRequest.ruby
    RetrieveCatalogObjectResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on any errors encountered.
          items:
            $ref: '#/components/schemas/Error'
        object:
          $ref: '#/components/schemas/CatalogObject'
        related_objects:
          type: array
          description: A list of CatalogObjects referenced by the object in the `object`
            field.
          items:
            $ref: '#/components/schemas/CatalogObject'
      example:
        object:
          type: ITEM
          id: W62UWFY35CWMYGVWK6TWJDNI
          updated_at: 2016-11-16T22:25:24.878Z
          version: 1479335124878
          is_deleted: false
          present_at_all_locations: true
          item_data:
            name: Tea
            description: Hot Leaf Juice
            category_id: BJNQCF2FJ6S6UIDT65ABHLRX
            tax_ids:
            - HURXQOOAIC4IZSI2BEXQRYFY
            variations:
            - type: ITEM_VARIATION
              id: 2TZFAOHWGG7PAK2QEXWYPZSP
              updated_at: 2016-11-16T22:25:24.878Z
              version: 1479335124878
              is_deleted: false
              present_at_all_locations: true
              item_variation_data:
                item_id: W62UWFY35CWMYGVWK6TWJDNI
                name: Mug
                ordinal: 0
                pricing_type: FIXED_PRICING
                price_money:
                  amount: 150
                  currency: USD
        related_objects:
        - type: CATEGORY
          id: BJNQCF2FJ6S6UIDT65ABHLRX
          updated_at: 2016-11-16T22:25:24.878Z
          version: 1479335124878
          is_deleted: false
          present_at_all_locations: true
          category_data:
            name: Beverages
        - type: TAX
          id: HURXQOOAIC4IZSI2BEXQRYFY
          updated_at: 2016-11-16T22:25:24.878Z
          version: 1479335124878
          is_deleted: false
          present_at_all_locations: true
          tax_data:
            name: Sales Tax
            calculation_phase: TAX_SUBTOTAL_PHASE
            inclusion_type: ADDITIVE
            percentage: "5.0"
            enabled: true
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectResponse.python
        csharp: /sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectResponse.csharp
        java: /sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectResponse.java
        php: /sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectResponse.php
        javascript: /sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectResponse.javascript
        ruby: /sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectResponse.ruby
    RetrieveCustomerGroupRequest:
      type: object
      properties: {}
      description: |-
        Defines the fields that can be provided in a request to the
        [RetrieveCustomerGroup](#endpoint-retrievecustomergroup) endpoint.
      example: {}
      x-release-status: BETA
    RetrieveCustomerGroupResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        group:
          $ref: '#/components/schemas/CustomerGroup'
      description: |-
        Defines the fields that are included in the response body of
        a request to the [RetrieveCustomerGroup](#endpoint-retrievecustomergroup) endpoint.

        One of `errors` or `group` is present in a given response (never both).
      example:
        group:
          id: 2TAT3CMH4Q0A9M87XJZED0WMR3
          name: Loyal Customers
          created_at: 2020-04-13T21:54:57.863Z
          updated_at: 2020-04-13T21:54:58Z
      x-release-status: BETA
    RetrieveCustomerRequest:
      type: object
      properties: {}
      description: |-
        Defines the fields that are included in requests to the RetrieveCustomer
        endpoint.
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.python
        csharp: /sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.csharp
        java: /sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.java
        php: /sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.php
        javascript: /sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.javascript
        ruby: /sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.ruby
    RetrieveCustomerResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        customer:
          $ref: '#/components/schemas/Customer'
      description: |-
        Defines the fields that are included in the response body of
        a request to the RetrieveCustomer endpoint.

        One of `errors` or `customer` is present in a given response (never both).
      example:
        customer:
          id: JDKYHBWT1D4F8MFH63DBMEN8Y4
          created_at: 2016-03-23T20:21:54.859Z
          updated_at: 2016-03-23T20:21:54.859Z
          given_name: Amelia
          family_name: Earhart
          email_address: Amelia.Earhart@example.com
          address:
            address_line_1: 500 Electric Ave
            address_line_2: Suite 600
            locality: New York
            administrative_district_level_1: NY
            postal_code: "10003"
            country: US
          phone_number: 1-212-555-4240
          reference_id: YOUR_REFERENCE_ID
          note: a customer
          groups:
          - id: 545AXB44B4XXWMVQ4W8SBT3HHF
            name: Aviation Enthusiasts
          - id: 1KB9JE5EGJXCW.REACHABLE
            name: Reachable
          group_ids:
          - 545AXB44B4XXWMVQ4W8SBT3HHF
          segment_ids:
          - 1KB9JE5EGJXCW.REACHABLE
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.python
        csharp: /sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.csharp
        java: /sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.java
        php: /sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.php
        javascript: /sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.javascript
        ruby: /sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.ruby
    RetrieveCustomerSegmentRequest:
      type: object
      properties: {}
      description: Defines the valid parameters for requests to __RetrieveCustomerSegmentRequest__.
      example: {}
      x-release-status: BETA
    RetrieveCustomerSegmentResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        segment:
          $ref: '#/components/schemas/CustomerSegment'
      description: |-
        Defines the fields included in the response body for requests to __RetrieveCustomerSegment__.

        One of `errors` or `segment` is present in a given response (never both).
      example:
        segment:
          id: GMNXRZVEXNQDF.CHURN_RISK
          name: Lapsed
          created_at: 2020-01-09T19:33:24.469Z
          updated_at: 2020-04-13T23:01:13Z
      x-release-status: BETA
    RetrieveDisputeEvidenceRequest:
      type: object
      properties: {}
      description: Defines parameters for a RetrieveDisputeEvidence request.
      example: {}
      x-release-status: BETA
    RetrieveDisputeEvidenceResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        evidence:
          $ref: '#/components/schemas/DisputeEvidence'
      description: Defines fields in a RetrieveDisputeEvidence response.
      example:
        evidence:
          evidence_id: TOomLInj6iWmP3N8qfCXrB
          dispute_id: bVTprrwk0gygTLZ96VX1oB
          evidence_file:
            filename: evidence.tiff
            filetype: image/tiff
          uploaded_at: 2018-10-18T16:01:10.000Z
      x-release-status: BETA
    RetrieveDisputeRequest:
      type: object
      properties: {}
      description: Defines request parameters for the RetrieveDispute endpoint.
      example: {}
      x-release-status: BETA
    RetrieveDisputeResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
        dispute:
          $ref: '#/components/schemas/Dispute'
      description: Defines fields in a RetrieveDispute response.
      example:
        dispute:
          dispute_id: XDgyFu7yo1E2S5lQGGpYn
          amount_money:
            amount: 2000
            currency: USD
          reason: NO_KNOWLEDGE
          state: LOST
          due_at: 2018-11-01T00:00:00.000Z
          disputed_payments:
          - payment_id: 6Ee10wvqhfipStz297mtUhBXvaB
          card_brand: visa
          created_at: 2018-10-18T15:59:13.613Z
          updated_at: 2018-10-18T15:59:13.613Z
          brand_dispute_id: "100000282394"
      x-release-status: BETA
    RetrieveEmployeeRequest:
      type: object
      properties: {}
      x-release-status: DEPRECATED
    RetrieveEmployeeResponse:
      type: object
      properties:
        employee:
          $ref: '#/components/schemas/Employee'
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      example:
        employee:
          updated_at: updated_at
          location_ids:
          - location_ids
          - location_ids
          is_owner: true
          last_name: last_name
          created_at: created_at
          phone_number: phone_number
          id: id
          first_name: first_name
          email: email
          status: ACTIVE
        errors:
        - code: INTERNAL_SERVER_ERROR
          field: field
          detail: detail
          category: API_ERROR
        - code: INTERNAL_SERVER_ERROR
          field: field
          detail: detail
          category: API_ERROR
      x-release-status: DEPRECATED
    RetrieveInventoryAdjustmentRequest:
      type: object
      properties: {}
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/Inventory/RetrieveInventoryAdjustment/RetrieveInventoryAdjustmentRequest.python
        csharp: /sdk_samples/Inventory/RetrieveInventoryAdjustment/RetrieveInventoryAdjustmentRequest.csharp
        java: /sdk_samples/Inventory/RetrieveInventoryAdjustment/RetrieveInventoryAdjustmentRequest.java
        php: /sdk_samples/Inventory/RetrieveInventoryAdjustment/RetrieveInventoryAdjustmentRequest.php
        javascript: /sdk_samples/Inventory/RetrieveInventoryAdjustment/RetrieveInventoryAdjustmentRequest.javascript
        ruby: /sdk_samples/Inventory/RetrieveInventoryAdjustment/RetrieveInventoryAdjustmentRequest.ruby
    RetrieveInventoryAdjustmentResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        adjustment:
          $ref: '#/components/schemas/InventoryAdjustment'
      example:
        errors: []
        adjustment:
          id: UDMOEO78BG6GYWA2XDRYX3KB
          reference_id: 4a366069-4096-47a2-99a5-0084ac879509
          from_state: IN_STOCK
          to_state: SOLD
          location_id: C6W5YS5QM06F5
          catalog_object_id: W62UWFY35CWMYGVWK6TWJDNI
          catalog_object_type: ITEM_VARIATION
          quantity: "7"
          total_price_money:
            amount: 4550
            currency: USD
          occurred_at: 2016-11-16T25:44:22.837Z
          created_at: 2016-11-17T13:02:15.142Z
          source:
            product: SQUARE_POS
            application_id: 416ff29c-86c4-4feb-b58c-9705f21f3ea0
            name: Square Point of Sale 4.37
          employee_id: LRK57NSQ5X7PUD05
      x-release-status: PUBLIC
    RetrieveInventoryChangesRequest:
      type: object
      properties:
        location_ids:
          type: string
          description: |-
            The [Location](#type-location) IDs to look up as a comma-separated
            list. An empty list queries all locations.
        cursor:
          type: string
          description: |-
            A pagination cursor returned by a previous call to this endpoint.
            Provide this to retrieve the next set of results for the original query.

            See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information.
      x-release-status: PUBLIC
      x-params-example: ?location_ids=&cursor=
      x-sq-sdk-sample-code:
        python: /sdk_samples/Inventory/RetrieveInventoryChanges/RetrieveInventoryChangesRequest.python
        csharp: /sdk_samples/Inventory/RetrieveInventoryChanges/RetrieveInventoryChangesRequest.csharp
        java: /sdk_samples/Inventory/RetrieveInventoryChanges/RetrieveInventoryChangesRequest.java
        php: /sdk_samples/Inventory/RetrieveInventoryChanges/RetrieveInventoryChangesRequest.php
        javascript: /sdk_samples/Inventory/RetrieveInventoryChanges/RetrieveInventoryChangesRequest.javascript
        ruby: /sdk_samples/Inventory/RetrieveInventoryChanges/RetrieveInventoryChangesRequest.ruby
    RetrieveInventoryChangesResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        changes:
          type: array
          description: The set of inventory changes for the requested object and locations.
          items:
            $ref: '#/components/schemas/InventoryChange'
        cursor:
          type: string
          description: |-
            The pagination cursor to be used in a subsequent request. If unset,
            this is the final response.

            See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information.
      example:
        errors: []
        changes:
        - type: ADJUSTMENT
          adjustment:
            id: OJKJIUANKLMLQANZADNPLKAD
            reference_id: d8207693-168f-4b44-a2fd-a7ff533ddd26
            from_state: IN_STOCK
            to_state: SOLD
            location_id: C6W5YS5QM06F5
            catalog_object_id: W62UWFY35CWMYGVWK6TWJDNI
            catalog_object_type: ITEM_VARIATION
            quantity: "3"
            total_price_money:
              amount: 5000
              currency: USD
            occurred_at: 2016-11-16T22:25:24.878Z
            created_at: 2016-11-16T22:25:24.878Z
            source:
              product: SQUARE_POS
              application_id: 416ff29c-86c4-4feb-b58c-9705f21f3ea0
              name: Square Point of Sale 4.37
            employee_id: AV7YRCGI2H1J5NQ8E1XIZCNA
            transaction_id: 5APV6JYK1SNCZD11AND2RX1Z
      x-release-status: PUBLIC
    RetrieveInventoryCountRequest:
      type: object
      properties:
        location_ids:
          type: string
          description: |-
            The [Location](#type-location) IDs to look up as a comma-separated
            list. An empty list queries all locations.
        cursor:
          type: string
          description: |-
            A pagination cursor returned by a previous call to this endpoint.
            Provide this to retrieve the next set of results for the original query.

            See the [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination) guide for more information.
      x-release-status: PUBLIC
      x-params-example: ?location_ids=C6W5YS5QM06F5&cursor=
      x-sq-sdk-sample-code:
        python: /sdk_samples/Inventory/RetrieveInventoryCount/RetrieveInventoryCountRequest.python
        csharp: /sdk_samples/Inventory/RetrieveInventoryCount/RetrieveInventoryCountRequest.csharp
        java: /sdk_samples/Inventory/RetrieveInventoryCount/RetrieveInventoryCountRequest.java
        php: /sdk_samples/Inventory/RetrieveInventoryCount/RetrieveInventoryCountRequest.php
        javascript: /sdk_samples/Inventory/RetrieveInventoryCount/RetrieveInventoryCountRequest.javascript
        ruby: /sdk_samples/Inventory/RetrieveInventoryCount/RetrieveInventoryCountRequest.ruby
    RetrieveInventoryCountResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        counts:
          type: array
          description: |-
            The current calculated inventory counts for the requested object and
            locations.
          items:
            $ref: '#/components/schemas/InventoryCount'
        cursor:
          type: string
          description: |-
            The pagination cursor to be used in a subsequent request. If unset,
            this is the final response.

            See the [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination) guide for more information.
      example:
        errors: []
        counts:
        - catalog_object_id: W62UWFY35CWMYGVWK6TWJDNI
          catalog_object_type: ITEM_VARIATION
          state: IN_STOCK
          location_id: C6W5YS5QM06F5
          quantity: "22"
          calculated_at: 2016-11-16T22:28:01.223Z
      x-release-status: PUBLIC
    RetrieveInventoryPhysicalCountRequest:
      type: object
      properties: {}
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/Inventory/RetrieveInventoryPhysicalCount/RetrieveInventoryPhysicalCountRequest.python
        csharp: /sdk_samples/Inventory/RetrieveInventoryPhysicalCount/RetrieveInventoryPhysicalCountRequest.csharp
        java: /sdk_samples/Inventory/RetrieveInventoryPhysicalCount/RetrieveInventoryPhysicalCountRequest.java
        php: /sdk_samples/Inventory/RetrieveInventoryPhysicalCount/RetrieveInventoryPhysicalCountRequest.php
        javascript: /sdk_samples/Inventory/RetrieveInventoryPhysicalCount/RetrieveInventoryPhysicalCountRequest.javascript
        ruby: /sdk_samples/Inventory/RetrieveInventoryPhysicalCount/RetrieveInventoryPhysicalCountRequest.ruby
    RetrieveInventoryPhysicalCountResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        count:
          $ref: '#/components/schemas/InventoryPhysicalCount'
      example:
        errors: []
        count:
          id: ANZADNPLKADOJKJIUANKLMLQ
          reference_id: f857ec37-f9a0-4458-8e23-5b5e0bea4e53
          catalog_object_id: W62UWFY35CWMYGVWK6TWJDNI
          catalog_object_type: ITEM_VARIATION
          state: IN_STOCK
          location_id: C6W5YS5QM06F5
          quantity: "15"
          source:
            product: SQUARE_POS
            application_id: 416ff29c-86c4-4feb-b58c-9705f21f3ea0
            name: Square Point of Sale 4.37
          employee_id: LRK57NSQ5X7PUD05
          occurred_at: 2016-11-16T22:25:24.878Z
          created_at: 2016-11-16T22:25:24.878Z
      x-release-status: PUBLIC
    RetrieveLocationRequest:
      type: object
      properties: {}
      description: |-
        Defines the fields that are included in the request body for
        the __RetrieveLocation__ endpoint.
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/RetrieveLocation/RetrieveLocationRequest.python
        csharp: /sdk_samples/RetrieveLocation/RetrieveLocationRequest.csharp
        java: /sdk_samples/RetrieveLocation/RetrieveLocationRequest.java
        php: /sdk_samples/RetrieveLocation/RetrieveLocationRequest.php
        javascript: /sdk_samples/RetrieveLocation/RetrieveLocationRequest.javascript
        ruby: /sdk_samples/RetrieveLocation/RetrieveLocationRequest.ruby
    RetrieveLocationResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
        location:
          $ref: '#/components/schemas/Location'
      description: |-
        Defines the fields that the
        [RetrieveLocation](#endpoint-retrievelocation) endpoint returns
        in a response.
      example:
        location:
          id: 18YC4JDH91E1H
          name: Jet Fuel Coffee - Grant Park
          address:
            address_line_1: 123 Main St
            locality: San Francisco
            administrative_district_level_1: CA
            postal_code: "94114"
            country: US
          timezone: America/Los_Angeles
          capabilities:
          - CREDIT_CARD_PROCESSING
          status: ACTIVE
          created_at: 2016-09-19T17:33:12Z
          merchant_id: 3MYCJG5GVYQ8Q
          country: US
          language_code: en-US
          currency: USD
          phone_number: +1 650-354-7217
          business_name: Jet Fuel Coffee
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/RetrieveLocation/RetrieveLocationResponse.python
        csharp: /sdk_samples/RetrieveLocation/RetrieveLocationResponse.csharp
        java: /sdk_samples/RetrieveLocation/RetrieveLocationResponse.java
        php: /sdk_samples/RetrieveLocation/RetrieveLocationResponse.php
        javascript: /sdk_samples/RetrieveLocation/RetrieveLocationResponse.javascript
        ruby: /sdk_samples/RetrieveLocation/RetrieveLocationResponse.ruby
    RetrieveLoyaltyAccountRequest:
      type: object
      properties: {}
      description: A request to retrieve a loyalty account.
      x-release-status: BETA
      x-params-example: ?account_id=79b807d2-d786-46a9-933b-918028d7a8c5
    RetrieveLoyaltyAccountResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        loyalty_account:
          $ref: '#/components/schemas/LoyaltyAccount'
      description: A response that includes the loyalty account.
      example:
        loyalty_account:
          id: 79b807d2-d786-46a9-933b-918028d7a8c5
          mappings:
          - id: 66aaab3f-da99-49ed-8b19-b87f851c844f
            type: PHONE
            value: +14155551234
            created_at: 2020-05-08T21:44:32Z
          program_id: d619f755-2d17-41f3-990d-c04ecedd64dd
          balance: 10
          lifetime_points: 20
          customer_id: Q8002FAM9V1EZ0ADB2T5609X6NET1H0
          created_at: 2020-05-08T21:44:32Z
          updated_at: 2020-05-08T21:44:32Z
      x-release-status: BETA
    RetrieveLoyaltyRewardRequest:
      type: object
      properties: {}
      description: A request to retrieve a loyalty reward.
      x-release-status: BETA
      x-params-example: ?reward_id=9f18ac21-233a-31c3-be77-b45840f5a810
    RetrieveLoyaltyRewardResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        reward:
          $ref: '#/components/schemas/LoyaltyReward'
      description: A response that includes the loyalty reward.
      example:
        reward:
          id: 9f18ac21-233a-31c3-be77-b45840f5a810
          status: REDEEMED
          loyalty_account_id: 5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd
          reward_tier_id: e1b39225-9da5-43d1-a5db-782cdd8ad94f
          points: 10
          created_at: 2020-05-08T21:55:42Z
          updated_at: 2020-05-08T21:56:00Z
          redeemed_at: 2020-05-08T21:56:00Z
      x-release-status: BETA
    RetrieveMerchantRequest:
      type: object
      properties: {}
      description: Request object for the [RetrieveMerchant](#endpoint-retrievemerchant)
        endpoint.
      x-release-status: PUBLIC
    RetrieveMerchantResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
        merchant:
          $ref: '#/components/schemas/Merchant'
      description: The response object returned by the [RetrieveMerchant](#endpoint-retrieveMerchant)
        endpoint.
      example:
        merchant:
          id: DM7VKY8Q63GNP
          business_name: Apple A Day
          country: US
          language_code: en-US
          currency: USD
          status: ACTIVE
          main_location_id: 9A65CGC72ZQG1
      x-release-status: PUBLIC
    RetrieveSubscriptionRequest:
      type: object
      properties: {}
      description: "Defines parameters in a \n[RetrieveSubscription](#endpoint-subscriptions-retrievesubscription)\
        \ endpoint request."
      x-release-status: BETA
    RetrieveSubscriptionResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information about errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
        subscription:
          $ref: '#/components/schemas/Subscription'
      description: |-
        Defines the fields that are included in the response from the
        [RetrieveSubscription](#endpoint-subscriptions-retrievesubscription) endpoint.
      example:
        subscription:
          id: 8151fc89-da15-4eb9-a685-1a70883cebfc
          location_id: S8GWD5R9QB376
          plan_id: 6JHXF3B2CW3YKHDV4XEM674H
          customer_id: CHFGVKYY8RSV93M5KCYTG4PN0G
          start_date: 2020-05-11
          charged_through_date: 2020-06-11
          status: ACTIVE
          invoice_ids:
          - grebK0Q_l8H4fqoMMVvt-Q
          - rcX_i3sNmHTGKhI4W2mceA
          price_override_money:
            amount: 1000
            currency: USD
          created_at: 2020-08-03T21:53:10Z
          paid_until_date: 2020-06-11
          timezone: America/Los_Angeles
      x-release-status: BETA
    RetrieveTeamMemberRequest:
      type: object
      properties: {}
      description: Represents a retrieve request for a `TeamMember` object.
      example: {}
      x-release-status: PUBLIC
    RetrieveTeamMemberResponse:
      type: object
      properties:
        team_member:
          $ref: '#/components/schemas/TeamMember'
        errors:
          type: array
          description: The errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: Represents a response from a retrieve request, containing a `TeamMember`
        object or error messages.
      example:
        team_member:
          id: 1yJlHapkseYnNPETIU1B
          reference_id: reference_id_1
          is_owner: false
          status: ACTIVE
          given_name: Joe
          family_name: Doe
          email_address: joe_doe@gmail.com
          phone_number: +14159283333
          created_at: 2020-06-11T22:55:45.867Z
          updated_at: 2020-06-11T22:55:45.867Z
          assigned_locations:
            assignment_type: EXPLICIT_LOCATIONS
            location_ids:
            - GA2Y9HSJ8KRYT
            - YSGH2WBKG94QZ
      x-release-status: PUBLIC
    RetrieveTransactionRequest:
      type: object
      properties: {}
      x-release-status: DEPRECATED
      x-sq-sdk-sample-code:
        python: /sdk_samples/RetrieveTransaction/RetrieveTransactionRequest.python
        csharp: /sdk_samples/RetrieveTransaction/RetrieveTransactionRequest.csharp
        java: /sdk_samples/RetrieveTransaction/RetrieveTransactionRequest.java
        php: /sdk_samples/RetrieveTransaction/RetrieveTransactionRequest.php
        javascript: /sdk_samples/RetrieveTransaction/RetrieveTransactionRequest.javascript
        ruby: /sdk_samples/RetrieveTransaction/RetrieveTransactionRequest.ruby
    RetrieveTransactionResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        transaction:
          $ref: '#/components/schemas/Transaction'
      description: |-
        Defines the fields that are included in the response body of
        a request to the [RetrieveTransaction](#endpont-retrievetransaction) endpoint.

        One of `errors` or `transaction` is present in a given response (never both).
      example:
        transaction:
          id: KnL67ZIwXCPtzOrqj0HrkxMF
          location_id: 18YC4JDH91E1H
          created_at: 2016-03-10T22:57:56Z
          tenders:
          - id: MtZRYYdDrYNQbOvV7nbuBvMF
            location_id: 18YC4JDH91E1H
            transaction_id: KnL67ZIwXCPtzOrqj0HrkxMF
            created_at: 2016-03-10T22:57:56Z
            note: some optional note
            amount_money:
              amount: 5000
              currency: USD
            processing_fee_money:
              amount: 138
              currency: USD
            type: CARD
            card_details:
              status: CAPTURED
              card:
                card_brand: VISA
                last_4: "1111"
              entry_method: KEYED
            additional_recipients:
            - location_id: 057P5VYJ4A5X1
              description: Application fees
              amount_money:
                amount: 20
                currency: USD
          reference_id: some optional reference id
          product: EXTERNAL_API
      x-release-status: DEPRECATED
      x-sq-sdk-sample-code:
        python: /sdk_samples/RetrieveTransaction/RetrieveTransactionResponse.python
        csharp: /sdk_samples/RetrieveTransaction/RetrieveTransactionResponse.csharp
        java: /sdk_samples/RetrieveTransaction/RetrieveTransactionResponse.java
        php: /sdk_samples/RetrieveTransaction/RetrieveTransactionResponse.php
        javascript: /sdk_samples/RetrieveTransaction/RetrieveTransactionResponse.javascript
        ruby: /sdk_samples/RetrieveTransaction/RetrieveTransactionResponse.ruby
    RetrieveWageSettingRequest:
      type: object
      properties: {}
      description: Represents a retrieve request for the wage setting of a team member
      example: {}
      x-release-status: PUBLIC
    RetrieveWageSettingResponse:
      type: object
      properties:
        wage_setting:
          $ref: '#/components/schemas/WageSetting'
        errors:
          type: array
          description: The errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: Represents a response from a retrieve request, containing the specified
        `WageSetting` object or error messages.
      example:
        wage_setting:
          team_member_id: 1yJlHapkseYnNPETIU1B
          job_assignments:
          - job_title: Manager
            pay_type: SALARY
            hourly_rate:
              amount: 2164
              currency: USD
            annual_rate:
              amount: 4500000
              currency: USD
            weekly_hours: 40
          is_overtime_exempt: false
          version: 1
          created_at: 2020-06-11T23:01:21+00:00
          updated_at: 2020-06-11T23:01:21+00:00
      x-release-status: PUBLIC
    RevokeTokenRequest:
      type: object
      properties:
        client_id:
          type: string
          description: |-
            The Square issued ID for your application, available from the
            [application dashboard](https://connect.squareup.com/apps).
        access_token:
          type: string
          description: |-
            The access token of the merchant whose token you want to revoke.
            Do not provide a value for merchant_id if you provide this parameter.
        merchant_id:
          type: string
          description: |-
            The ID of the merchant whose token you want to revoke.
            Do not provide a value for access_token if you provide this parameter.
        revoke_only_access_token:
          type: boolean
          description: |-
            If `true`, terminate the given single access token, but do not
            terminate the entire authorization.
            Default: `false`
      example:
        access_token: ACCESS_TOKEN
        client_id: CLIENT_ID
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/RevokeToken/RevokeTokenRequest.python
        csharp: /sdk_samples/RevokeToken/RevokeTokenRequest.csharp
        java: /sdk_samples/RevokeToken/RevokeTokenRequest.java
        php: /sdk_samples/RevokeToken/RevokeTokenRequest.php
        javascript: /sdk_samples/RevokeToken/RevokeTokenRequest.javascript
        ruby: /sdk_samples/RevokeToken/RevokeTokenRequest.ruby
    RevokeTokenResponse:
      type: object
      properties:
        success:
          type: boolean
          description: If the request is successful, this is true.
      example:
        success: true
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/RevokeToken/RevokeTokenResponse.python
        csharp: /sdk_samples/RevokeToken/RevokeTokenResponse.csharp
        java: /sdk_samples/RevokeToken/RevokeTokenResponse.java
        php: /sdk_samples/RevokeToken/RevokeTokenResponse.php
        javascript: /sdk_samples/RevokeToken/RevokeTokenResponse.javascript
        ruby: /sdk_samples/RevokeToken/RevokeTokenResponse.ruby
    SearchCatalogItemsRequest:
      type: object
      properties:
        text_filter:
          type: string
          description: |-
            The text filter expression to return items or item variations containing specified text in
            the `name`, `description`, or `abbreviation` attribute value of an item, or in
            the `name`, `sku`, or `upc` attribute value of an item variation.
        category_ids:
          type: array
          description: The category id query expression to return items containing
            the specified category IDs.
          items:
            type: string
        stock_levels:
          type: array
          description: |-
            The stock-level query expression to return item variations with the specified stock levels.
            See [SearchCatalogItemsRequestStockLevel](#type-searchcatalogitemsrequeststocklevel) for possible values
          items:
            $ref: '#/components/schemas/SearchCatalogItemsRequestStockLevel'
        enabled_location_ids:
          type: array
          description: The enabled-location query expression to return items and item
            variations having specified enabled locations.
          items:
            type: string
        cursor:
          type: string
          description: The pagination token, returned in the previous response, used
            to fetch the next batch of pending results.
        limit:
          maximum: 100
          type: integer
          description: The maximum number of results to return per page. The default
            value is 100.
        sort_order:
          $ref: '#/components/schemas/SortOrder'
        product_types:
          type: array
          description: |-
            The product types query expression to return items or item variations having the specified product types.
            See [CatalogItemProductType](#type-catalogitemproducttype) for possible values
          items:
            $ref: '#/components/schemas/CatalogItemProductType'
        custom_attribute_filters:
          type: array
          description: |-
            The customer-attribute filter to return items or item variations matching the specified
            custom attribute expressions. A maximum number of 10 custom attribute expressions are supported in
            a single call to the [SearchCatalogItems](#endpoint-Catalog-SearchCatalogItems) endpoint.
          items:
            $ref: '#/components/schemas/CustomAttributeFilter'
      description: Defines the request body for the [SearchCatalogItems](#endpoint-Catalog-SearchCatalogItems)
        endpoint.
      example:
        sort_order: ASC
        product_types:
        - REGULAR
        category_ids:
        - WINE_CATEGORY_ID
        enabled_location_ids:
        - ATL_LOCATION_ID
        text_filter: red
        custom_attribute_filters:
        - custom_attribute_definition_id: VEGAN_DEFINITION_ID
          bool_filter: true
        - custom_attribute_definition_id: BRAND_DEFINITION_ID
          string_filter: Dark Horse
        - key: VINTAGE
          number_filter:
            min: 2017
            max: 2018
        - custom_attribute_definition_id: VARIETAL_DEFINITION_ID
          selection_ids_filter: MERLOT_SELECTION_ID
        stock_levels:
        - OUT
        - LOW
        limit: 100
      x-release-status: BETA
    SearchCatalogItemsResponse:
      type: object
      properties:
        errors:
          type: array
          description: Errors detected when the call to [SearchCatalogItems](#endpoint-Catalog-SearchCatalogItems)
            endpoint fails.
          items:
            $ref: '#/components/schemas/Error'
        items:
          type: array
          description: Returned items matching the specified query expressions.
          items:
            $ref: '#/components/schemas/CatalogObject'
        cursor:
          type: string
          description: Pagination token used in the next request to return more of
            the search result.
        matched_variation_ids:
          type: array
          description: Ids of returned item variations matching the specified query
            expression.
          items:
            type: string
      description: Defines the response body returned from the [SearchCatalogItems](#endpoint-Catalog-SearchCatalogItems)
        endpoint.
      example:
        items:
        - type: ITEM
          id: GPOKJPTV2KDLVKCADJ7I77EZ
          updated_at: 2020-06-18T17:55:56.646Z
          version: 1592502956646
          is_deleted: false
          present_at_all_locations: true
          custom_attribute_values:
            VINTAGE:
              name: Vintage
              custom_attribute_definition_id: EI7IJQDUKYSHULREPIPH6HNU
              type: NUMBER
              number_value: 2018
              key: VINTAGE
            VARIETAL:
              name: Varietal
              custom_attribute_definition_id: VARIETAL_DEFINITION_ID
              type: SELECTION
              selection_uid_values:
              - MERLOT_SELECTION_ID
              - null
              key: VARIETAL
            BRAND:
              name: Brand
              custom_attribute_definition_id: BRAND_DEFINITION_ID
              type: STRING
              string_value: Dark Horse
              key: BRAND
          item_data:
            name: Dark Horse Merlot 2018
            product_type: REGULAR
            description: A nice red wine
            variations:
            - type: ITEM_VARIATION
              id: VBJNPHCOKDFECR6VU25WRJUD
              updated_at: 2020-06-18T17:55:56.646Z
              version: 1592502956646
              is_deleted: false
              present_at_all_locations: true
              item_variation_data:
                item_id: GPOKJPTV2KDLVKCADJ7I77EZ
                name: 750 mL
                ordinal: 0
                pricing_type: FIXED_PRICING
                price_money:
                  amount: 1000
                  currency: USD
        matched_variation_ids:
        - VBJNPHCOKDFECR6VU25WRJUD
      x-release-status: BETA
    SearchCatalogObjectsRequest:
      type: object
      properties:
        cursor:
          type: string
          description: |-
            The pagination cursor returned in the previous response. Leave unset for an initial request.
            See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.
        object_types:
          type: array
          description: |-
            The desired set of object types to appear in the search results.
            The legal values are taken from the CatalogObjectType enum: `"ITEM"`, `"ITEM_VARIATION"`, `"CATEGORY"`,
            `"DISCOUNT"`, `"TAX"`, `"MODIFIER"`, or `"MODIFIER_LIST"`.
            See [CatalogObjectType](#type-catalogobjecttype) for possible values
          items:
            $ref: '#/components/schemas/CatalogObjectType'
        include_deleted_objects:
          type: boolean
          description: |-
            If `true`, deleted objects will be included in the results. Deleted objects will have their
            `is_deleted` field set to `true`.
        include_related_objects:
          type: boolean
          description: |-
            If `true`, the response will include additional objects that are related to the
            requested object, as follows:

            If a CatalogItem is returned in the object field of the response,
            its associated CatalogCategory, CatalogTax objects,
            CatalogImage objects and CatalogModifierList objects
            will be included in the `related_objects` field of the response.

            If a CatalogItemVariation is returned in the object field of the
            response, its parent CatalogItem will be included in the `related_objects` field of
            the response.
        begin_time:
          type: string
          description: |-
            Return objects modified after this [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates), in RFC 3339
            format, e.g., `2016-09-04T23:59:33.123Z`. The timestamp is exclusive - objects with a
            timestamp equal to `begin_time` will not be included in the response.
        query:
          $ref: '#/components/schemas/CatalogQuery'
        limit:
          type: integer
          description: |-
            A limit on the number of results to be returned in a single page. The limit is advisory -
            the implementation may return more or fewer results. If the supplied limit is negative, zero, or
            is higher than the maximum limit of 1,000, it will be ignored.
      example:
        object_types:
        - ITEM
        query:
          prefix_query:
            attribute_name: name
            attribute_prefix: tea
        limit: 100
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsRequest.python
        csharp: /sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsRequest.csharp
        java: /sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsRequest.java
        php: /sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsRequest.php
        javascript: /sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsRequest.javascript
        ruby: /sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsRequest.ruby
    SearchCatalogObjectsResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on any errors encountered.
          items:
            $ref: '#/components/schemas/Error'
        cursor:
          type: string
          description: |-
            The pagination cursor to be used in a subsequent request. If unset, this is the final response.
            See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.
        objects:
          type: array
          description: The CatalogObjects returned.
          items:
            $ref: '#/components/schemas/CatalogObject'
        related_objects:
          type: array
          description: A list of CatalogObjects referenced by the objects in the `objects`
            field.
          items:
            $ref: '#/components/schemas/CatalogObject'
        latest_time:
          type: string
          description: |-
            When the associated product catalog was last updated. Will
            match the value for `end_time` or `cursor` if either field is included in the `SearchCatalog` request.
          x-release-status: BETA
      example:
        objects:
        - type: ITEM
          id: X5DZ5NWWAQ44CKBLKIFQGOWK
          updated_at: 2017-10-26T15:41:32.337Z
          version: 1509032492337
          is_deleted: false
          present_at_all_locations: true
          item_data:
            name: Tea - Black
            description: A delicious blend of black tea.
            category_id: E7CLE5RZZ744BHWVQQEAHI2C
            product_type: REGULAR
            tax_ids:
            - ZXITPM6RWHZ7GZ7EIP3YKECM
            variations:
            - type: ITEM_VARIATION
              id: 5GSZPX6EU7MM75S57OONG3V5
              updated_at: 2017-10-26T15:27:31.626Z
              version: 1509031651626
              is_deleted: false
              present_at_all_locations: true
              item_variation_data:
                item_id: X5DZ5NWWAQ44CKBLKIFQGOWK
                name: Regular
                ordinal: 1
                price_money:
                  amount: 150
                  currency: USD
                pricing_type: FIXED_PRICING
            - type: ITEM_VARIATION
              id: XVLBN7DU6JTWHJTG5F265B43
              updated_at: 2017-10-26T15:27:31.626Z
              version: 1509031651626
              is_deleted: false
              present_at_all_locations: true
              item_variation_data:
                item_id: X5DZ5NWWAQ44CKBLKIFQGOWK
                name: Large
                ordinal: 2
                price_money:
                  amount: 225
                  currency: USD
                pricing_type: FIXED_PRICING
            visibility: PRIVATE
        - type: ITEM
          id: NNNEM3LA656Q46NXLWCNI7S5
          updated_at: 2017-10-26T15:41:23.232Z
          version: 1509032483232
          is_deleted: false
          present_at_all_locations: true
          item_data:
            name: Tea - Green
            description: Relaxing green herbal tea.
            category_id: E7CLE5RZZ744BHWVQQEAHI2C
            product_type: REGULAR
            tax_ids:
            - ZXITPM6RWHZ7GZ7EIP3YKECM
            variations:
            - type: ITEM_VARIATION
              id: FHYBVIA6NVBCSOVETA62WEA4
              updated_at: 2017-10-26T15:29:00.524Z
              version: 1509031740524
              is_deleted: false
              present_at_all_locations: true
              item_variation_data:
                item_id: NNNEM3LA656Q46NXLWCNI7S5
                name: Regular
                ordinal: 1
                price_money:
                  amount: 150
                  currency: USD
                pricing_type: FIXED_PRICING
            visibility: PRIVATE
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsResponse.python
        csharp: /sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsResponse.csharp
        java: /sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsResponse.java
        php: /sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsResponse.php
        javascript: /sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsResponse.javascript
        ruby: /sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsResponse.ruby
    SearchCustomersRequest:
      type: object
      properties:
        cursor:
          type: string
          description: |-
            Include the pagination cursor in subsequent calls to this endpoint to retrieve
            the next set of results associated with the original query.

            See the [Pagination guide](https://developer.squareup.com/docs/working-with-apis/pagination) for more information.
        limit:
          type: integer
          description: |-
            A limit on the number of results to be returned in a single page.
            The limit is advisory - the implementation may return more or fewer results.
            If the supplied limit is negative, zero, or is higher than the maximum limit
            of 100, it will be ignored.
          format: int64
        query:
          $ref: '#/components/schemas/CustomerQuery'
      description: |-
        Defines the fields included in the request body for the
        SearchCustomers endpoint.
      example:
        query:
          filter:
            email_address:
              fuzzy: example.com
            creation_source:
              values:
              - THIRD_PARTY
              rule: INCLUDE
            created_at:
              start_at: 2018-01-01T00:00:00-00:00
              end_at: 2018-02-01T00:00:00-00:00
            group_ids:
              all:
              - 545AXB44B4XXWMVQ4W8SBT3HHF
          sort:
            field: CREATED_AT
            order: ASC
        limit: 2
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/SearchCustomers/SearchCustomersRequest.python
        csharp: /sdk_samples/SearchCustomers/SearchCustomersRequest.csharp
        java: /sdk_samples/SearchCustomers/SearchCustomersRequest.java
        php: /sdk_samples/SearchCustomers/SearchCustomersRequest.php
        javascript: /sdk_samples/SearchCustomers/SearchCustomersRequest.javascript
        ruby: /sdk_samples/SearchCustomers/SearchCustomersRequest.ruby
    SearchCustomersResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        customers:
          type: array
          description: An array of `Customer` objects that match a query.
          items:
            $ref: '#/components/schemas/Customer'
        cursor:
          type: string
          description: |-
            A pagination cursor that can be used during subsequent calls
            to SearchCustomers to retrieve the next set of results associated
            with the original query. Pagination cursors are only present when
            a request succeeds and additional results are available.

            See the [Pagination guide](https://developer.squareup.com/docs/working-with-apis/pagination) for more information.
      description: |-
        Defines the fields that are included in the response body of
        a request to the SearchCustomers endpoint.

        One of `errors` or `customers` is present in a given response (never both).
      example:
        customers:
        - id: JDKYHBWT1D4F8MFH63DBMEN8Y4
          created_at: 2018-01-23T20:21:54.859Z
          updated_at: 2018-04-20T10:02:43.083Z
          given_name: James
          family_name: Bond
          email_address: james.bond@example.com
          address:
            address_line_1: 505 Electric Ave
            address_line_2: Suite 600
            locality: New York
            administrative_district_level_1: NY
            postal_code: "10003"
            country: US
          phone_number: 1-212-555-4250
          reference_id: YOUR_REFERENCE_ID_2
          creation_source: THIRD_PARTY
          groups:
          - id: 545AXB44B4XXWMVQ4W8SBT3HHF
            name: Aviation Enthusiasts
          - id: 1KB9JE5EGJXCW.REACHABLE
            name: Reachable
          group_ids:
          - 545AXB44B4XXWMVQ4W8SBT3HHF
          segment_ids:
          - 1KB9JE5EGJXCW.REACHABLE
        - id: JDKYHBWT1D4F8MFH63DBMEN8Y4
          created_at: 2018-01-30T14:10:54.859Z
          updated_at: 2018-03-08T18:25:54.859Z
          given_name: Amelia
          family_name: Earhart
          email_address: amelia.earhart@example.com
          address:
            address_line_1: 500 Electric Ave
            address_line_2: Suite 600
            locality: New York
            administrative_district_level_1: NY
            postal_code: "10003"
            country: US
          phone_number: 1-212-555-4240
          reference_id: YOUR_REFERENCE_ID_1
          note: a customer
          creation_source: THIRD_PARTY
          groups:
          - id: 545AXB44B4XXWMVQ4W8SBT3HHF
            name: Aviation Enthusiasts
          - id: 1KB9JE5EGJXCW.REACHABLE
            name: Reachable
          group_ids:
          - 545AXB44B4XXWMVQ4W8SBT3HHF
          segment_ids:
          - 1KB9JE5EGJXCW.REACHABLE
        cursor: 9dpS093Uy12AzeE
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/SearchCustomers/SearchCustomersResponse.python
        csharp: /sdk_samples/SearchCustomers/SearchCustomersResponse.csharp
        java: /sdk_samples/SearchCustomers/SearchCustomersResponse.java
        php: /sdk_samples/SearchCustomers/SearchCustomersResponse.php
        javascript: /sdk_samples/SearchCustomers/SearchCustomersResponse.javascript
        ruby: /sdk_samples/SearchCustomers/SearchCustomersResponse.ruby
    SearchInvoicesRequest:
      required:
      - query
      type: object
      properties:
        query:
          $ref: '#/components/schemas/InvoiceQuery'
        limit:
          minimum: 0
          type: integer
          description: "The maximum number of invoices to return (200 is the maximum\
            \ `limit`). \nIf not provided, the server \nuses a default limit of 100\
            \ invoices."
        cursor:
          type: string
          description: "A pagination cursor returned by a previous call to this endpoint.\
            \ \nProvide this cursor to retrieve the next set of results for your original\
            \ query.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination)."
      description: Describes a `SearchInvoices` request.
      example:
        query:
          filter:
            location_ids:
            - ES0RJRZYEC39A
            customer_ids:
            - JDKYHBWT1D4F8MFH63DBMEN8Y4
          sort:
            field: INVOICE_SORT_DATE
            order: DESC
          limit: 100
      x-release-status: BETA
    SearchInvoicesResponse:
      type: object
      properties:
        invoices:
          type: array
          description: The list of invoices returned by the search.
          items:
            $ref: '#/components/schemas/Invoice'
        cursor:
          type: string
          description: "When a response is truncated, it includes a cursor that you\
            \ can use in a \nsubsequent request to fetch the next set of invoices.\
            \ If empty, this is the final \nresponse. \nFor more information, see\
            \ [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination)."
        errors:
          type: array
          description: Information about errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: Describes a `SearchInvoices` response.
      example:
        invoices:
        - invoice:
            id: gt2zv1z6mnUm1V7KMxxf3w
            version: 0
            location_id: ES0RJRZYEC39A
            order_id: CAISENgvlJ6jLWAzERDzjyHVybY
            payment_requests:
            - uid: 2da7964f-f3d2-4f43-81e8-5aa220bf3355
              request_method: EMAIL
              request_type: BALANCE
              due_date: 2030-01-24
              tipping_enabled: true
              reminders:
              - uid: beebd363-e47f-4075-8785-c235aaa7df11
                relative_scheduled_days: -1
                message: Your invoice is due tomorrow
                status: PENDING
              computed_amount_money:
                amount: 10000
                currency: USD
              total_completed_amount_money:
                amount: 0
                currency: USD
            invoice_number: inv-100
            title: Event Planning Services
            description: We appreciate your business!
            scheduled_at: 2030-01-13T10:00:00Z
            status: DRAFT
            timezone: America/Los_Angeles
            created_at: 2020-06-18T17:45:13Z
            updated_at: 2020-06-18T17:45:13Z
            primary_recipient:
              customer_id: JDKYHBWT1D4F8MFH63DBMEN8Y4
              given_name: Amelia
              family_name: Earhart
              email_address: Amelia.Earhart@example.com
              phone_number: 1-212-555-4240
        cursor: CURSOR
      x-release-status: BETA
    SearchLoyaltyAccountsRequest:
      type: object
      properties:
        query:
          $ref: '#/components/schemas/SearchLoyaltyAccountsRequestLoyaltyAccountQuery'
        limit:
          maximum: 30
          minimum: 1
          type: integer
          description: The maximum number of results to include in the response.
        cursor:
          type: string
          description: "A pagination cursor returned by a previous call to \nthis\
            \ endpoint. Provide this to retrieve the next set of \nresults for the\
            \ original query.\n\nFor more information, \nsee [Pagination](https://developer.squareup.com/docs/docs/basics/api101/pagination)."
      description: A request to search for loyalty accounts.
      example:
        query:
          mappings:
          - type: PHONE
            value: +14155551234
        limit: 10
      x-release-status: BETA
    SearchLoyaltyAccountsRequestLoyaltyAccountQuery:
      type: object
      properties:
        mappings:
          type: array
          description: The set of mappings to use in the loyalty account search.
          items:
            $ref: '#/components/schemas/LoyaltyAccountMapping'
      description: The search criteria for the loyalty accounts.
      x-release-status: BETA
    SearchLoyaltyAccountsResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        loyalty_accounts:
          type: array
          description: "The loyalty accounts that met the search criteria,  \nin order\
            \ of creation date."
          items:
            $ref: '#/components/schemas/LoyaltyAccount'
        cursor:
          type: string
          description: "The pagination cursor to use in a subsequent \nrequest. If\
            \ empty, this is the final response.\nFor more information, \nsee [Pagination](https://developer.squareup.com/docs/docs/basics/api101/pagination)."
      description: A response that includes loyalty accounts that satisfy the search
        criteria.
      example:
        loyalty_accounts:
        - id: 79b807d2-d786-46a9-933b-918028d7a8c5
          mappings:
          - id: 66aaab3f-da99-49ed-8b19-b87f851c844f
            type: PHONE
            value: +14155551234
            created_at: 2020-05-08T21:44:32Z
          program_id: d619f755-2d17-41f3-990d-c04ecedd64dd
          balance: 10
          lifetime_points: 20
          customer_id: Q8002FAM9V1EZ0ADB2T5609X6NET1H0
          created_at: 2020-05-08T21:44:32Z
          updated_at: 2020-05-08T21:44:32Z
      x-release-status: BETA
    SearchLoyaltyEventsRequest:
      type: object
      properties:
        query:
          $ref: '#/components/schemas/LoyaltyEventQuery'
        limit:
          maximum: 30
          minimum: 1
          type: integer
          description: "The maximum number of results to include in the response.\
            \ \nThe last page might contain fewer events. \nThe default is 30 events."
        cursor:
          type: string
          description: |-
            A pagination cursor returned by a previous call to this endpoint.
            Provide this to retrieve the next set of results for your original query.
            For more information, see [Pagination](https://developer.squareup.com/docs/docs/basics/api101/pagination).
      description: A request to search for loyalty events.
      example:
        query:
          filter:
            order_filter:
              order_id: PyATxhYLfsMqpVkcKJITPydgEYfZY
        limit: 30
      x-release-status: BETA
    SearchLoyaltyEventsResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        events:
          type: array
          description: The loyalty events that satisfy the search criteria.
          items:
            $ref: '#/components/schemas/LoyaltyEvent'
        cursor:
          type: string
          description: "The pagination cursor to be used in a subsequent \nrequest.\
            \ If empty, this is the final response. \nFor more information, \nsee\
            \ [Pagination](https://developer.squareup.com/docs/docs/basics/api101/pagination)."
      description: "A response that contains loyalty events that satisfy the search\
        \ \ncriteria, in order by the `created_at` date."
      example:
        events:
        - id: c27c8465-806e-36f2-b4b3-71f5887b5ba8
          type: ACCUMULATE_POINTS
          created_at: 2020-05-08T22:01:30Z
          accumulate_points:
            loyalty_program_id: d619f755-2d17-41f3-990d-c04ecedd64dd
            points: 5
            order_id: PyATxhYLfsMqpVkcKJITPydgEYfZY
          loyalty_account_id: 5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd
          location_id: P034NEENMD09F
          source: LOYALTY_API
        - id: e4a5cbc3-a4d0-3779-98e9-e578885d9430
          type: REDEEM_REWARD
          created_at: 2020-05-08T22:01:15Z
          redeem_reward:
            loyalty_program_id: d619f755-2d17-41f3-990d-c04ecedd64dd
            reward_id: d03f79f4-815f-3500-b851-cc1e68a457f9
            order_id: PyATxhYLfsMqpVkcKJITPydgEYfZY
          loyalty_account_id: 5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd
          location_id: P034NEENMD09F
          source: LOYALTY_API
        - id: 5e127479-0b03-3671-ab1e-15faea8b7188
          type: CREATE_REWARD
          created_at: 2020-05-08T22:00:44Z
          create_reward:
            loyalty_program_id: d619f755-2d17-41f3-990d-c04ecedd64dd
            reward_id: d03f79f4-815f-3500-b851-cc1e68a457f9
            points: -10
          loyalty_account_id: 5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd
          source: LOYALTY_API
      x-release-status: BETA
    SearchLoyaltyRewardsRequest:
      type: object
      properties:
        query:
          $ref: '#/components/schemas/SearchLoyaltyRewardsRequestLoyaltyRewardQuery'
        limit:
          maximum: 30
          minimum: 1
          type: integer
          description: The maximum number of results to return in the response.
        cursor:
          type: string
          description: "A pagination cursor returned by a previous call to \nthis\
            \ endpoint. Provide this to retrieve the next set of \nresults for the\
            \ original query.\nFor more information, \nsee [Pagination](https://developer.squareup.com/docs/docs/basics/api101/pagination)."
      description: A request to search for loyalty rewards.
      example:
        query:
          loyalty_account_id: 5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd
        limit: 10
      x-release-status: BETA
    SearchLoyaltyRewardsRequestLoyaltyRewardQuery:
      required:
      - loyalty_account_id
      type: object
      properties:
        loyalty_account_id:
          type: string
          description: The ID of the [loyalty account](#type-LoyaltyAccount) to which
            the loyalty reward belongs.
        status:
          $ref: '#/components/schemas/LoyaltyRewardStatus'
      description: The set of search requirements.
      x-release-status: BETA
    SearchLoyaltyRewardsResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        rewards:
          type: array
          description: |-
            The loyalty rewards that satisfy the search criteria.
            These are returned in descending order by `updated_at`.
          items:
            $ref: '#/components/schemas/LoyaltyReward'
        cursor:
          type: string
          description: "The pagination cursor to be used in a subsequent \nrequest.\
            \ If empty, this is the final response."
      description: A response that includes the loyalty rewards satisfying the search
        criteria.
      example:
        rewards:
        - id: d03f79f4-815f-3500-b851-cc1e68a457f9
          status: REDEEMED
          loyalty_account_id: 5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd
          reward_tier_id: e1b39225-9da5-43d1-a5db-782cdd8ad94f
          points: 10
          order_id: PyATxhYLfsMqpVkcKJITPydgEYfZY
          created_at: 2020-05-08T22:00:44Z
          updated_at: 2020-05-08T22:01:17Z
          redeemed_at: 2020-05-08T22:01:17Z
        - id: 9f18ac21-233a-31c3-be77-b45840f5a810
          status: REDEEMED
          loyalty_account_id: 5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd
          reward_tier_id: e1b39225-9da5-43d1-a5db-782cdd8ad94f
          points: 10
          created_at: 2020-05-08T21:55:42Z
          updated_at: 2020-05-08T21:56:00Z
          redeemed_at: 2020-05-08T21:56:00Z
        - id: a8f43ebe-2ad6-3001-bdd5-7d7c2da08943
          status: DELETED
          loyalty_account_id: 5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd
          reward_tier_id: e1b39225-9da5-43d1-a5db-782cdd8ad94f
          points: 10
          order_id: 5NB69ZNh3FbsOs1ox43bh1xrli6YY
          created_at: 2020-05-01T21:49:54Z
          updated_at: 2020-05-08T21:55:10Z
        - id: a051254c-f840-3b45-8cf1-50bcd38ff92a
          status: ISSUED
          loyalty_account_id: 5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd
          reward_tier_id: e1b39225-9da5-43d1-a5db-782cdd8ad94f
          points: 10
          order_id: LQQ16znvi2VIUKPVhUfJefzr1eEZY
          created_at: 2020-05-01T20:20:37Z
          updated_at: 2020-05-01T20:20:40Z
      x-release-status: BETA
    SearchOrdersCustomerFilter:
      type: object
      properties:
        customer_ids:
          type: array
          description: |-
            List of customer IDs to filter by.

            Max: 10 customer IDs.
          items:
            type: string
      description: |-
        Filter based on Order `customer_id` and any Tender `customer_id`
        associated with the Order. Does not filter based on the
        [FulfillmentRecipient](#type-orderfulfillmentrecipient) `customer_id`.
      x-release-status: BETA
    SearchOrdersDateTimeFilter:
      type: object
      properties:
        created_at:
          $ref: '#/components/schemas/TimeRange'
        updated_at:
          $ref: '#/components/schemas/TimeRange'
        closed_at:
          $ref: '#/components/schemas/TimeRange'
      description: |-
        Filter for `Order` objects based on whether their `CREATED_AT`,
        `CLOSED_AT` or `UPDATED_AT` timestamps fall within a specified time range.
        You can specify the time range and which timestamp to filter for. You can filter
        for only one time range at a time.

        For each time range, the start time and end time are inclusive. If the end time
        is absent, it defaults to the time of the first request for the cursor.

        __Important:__ If you use the DateTimeFilter in a SearchOrders query,
        you must also set the `sort_field` in [OrdersSort](#type-searchorderordersort)
        to the same field you filter for. For example, if you set the `CLOSED_AT` field
        in DateTimeFilter, you must also set the `sort_field` in SearchOrdersSort to
        `CLOSED_AT`. Otherwise, SearchOrders will throw an error.
        [Learn more about filtering orders by time range](https://developer.squareup.com/docs/orders-api/manage-orders#important-note-on-filtering-orders-by-time-range).
      x-release-status: PUBLIC
    SearchOrdersFilter:
      type: object
      properties:
        state_filter:
          $ref: '#/components/schemas/SearchOrdersStateFilter'
        date_time_filter:
          $ref: '#/components/schemas/SearchOrdersDateTimeFilter'
        fulfillment_filter:
          $ref: '#/components/schemas/SearchOrdersFulfillmentFilter'
        source_filter:
          $ref: '#/components/schemas/SearchOrdersSourceFilter'
        customer_filter:
          $ref: '#/components/schemas/SearchOrdersCustomerFilter'
      description: |-
        Filtering criteria to use for a SearchOrders request. Multiple filters
        will be ANDed together.
      x-release-status: PUBLIC
    SearchOrdersFulfillmentFilter:
      type: object
      properties:
        fulfillment_types:
          type: array
          description: |-
            List of [fulfillment types](#type-orderfulfillmenttype) to filter
            for. Will return orders if any of its fulfillments match any of the fulfillment types
            listed in this field.
            See [OrderFulfillmentType](#type-orderfulfillmenttype) for possible values
          items:
            $ref: '#/components/schemas/OrderFulfillmentType'
        fulfillment_states:
          type: array
          description: |-
            List of [fulfillment states](#type-orderfulfillmentstate) to filter
            for. Will return orders if any of its fulfillments match any of the
            fulfillment states listed in this field.
            See [OrderFulfillmentState](#type-orderfulfillmentstate) for possible values
          items:
            $ref: '#/components/schemas/OrderFulfillmentState'
      description: Filter based on [Order Fulfillment](#type-orderfulfillment) information.
      x-release-status: PUBLIC
    SearchOrdersQuery:
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/SearchOrdersFilter'
        sort:
          $ref: '#/components/schemas/SearchOrdersSort'
      description: Contains query criteria for the search.
      x-release-status: PUBLIC
    SearchOrdersRequest:
      type: object
      properties:
        location_ids:
          type: array
          description: |-
            The location IDs for the orders to query. All locations must belong to
            the same merchant.

            Min: 1 location IDs.

            Max: 10 location IDs.
          items:
            type: string
        cursor:
          type: string
          description: |-
            A pagination cursor returned by a previous call to this endpoint.
            Provide this to retrieve the next set of results for your original query.
            See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.
        query:
          $ref: '#/components/schemas/SearchOrdersQuery'
        limit:
          minimum: 1
          type: integer
          description: |-
            Maximum number of results to be returned in a single page. It is
            possible to receive fewer results than the specified limit on a given page.

            Default: `500`
        return_entries:
          type: boolean
          description: |-
            Boolean that controls the format of the search results. If `true`,
            SearchOrders will return [`OrderEntry`](#type-orderentry) objects. If `false`, SearchOrders
            will return complete Order objects.

            Default: `false`.
      description: |-
        The request does not have any required fields. When given no query criteria,
        SearchOrders will return all results for all of the merchant’s locations. When fetching additional
        pages using a `cursor`, the `query` must be equal to the `query` used to fetch the first page of
        results.
      example:
        return_entries: true
        limit: 3
        location_ids:
        - 057P5VYJ4A5X1
        - 18YC4JDH91E1H
        query:
          filter:
            date_time_filter:
              closed_at:
                start_at: 2018-03-03T20:00:00+00:00
                end_at: 2019-03-04T21:54:45+00:00
            state_filter:
              states:
              - COMPLETED
          sort:
            sort_field: CLOSED_AT
            sort_order: DESC
      x-release-status: PUBLIC
    SearchOrdersResponse:
      type: object
      properties:
        order_entries:
          type: array
          description: |-
            List of [OrderEntries](#type-orderentry) that fit the query
            conditions. Populated only if `return_entries` was set to `true` in the request.
          items:
            $ref: '#/components/schemas/OrderEntry'
        orders:
          type: array
          description: |-
            List of
            [Order](#type-order) objects that match query conditions. Populated only if
            `return_entries` in the request is set to `false`.
          items:
            $ref: '#/components/schemas/Order'
        cursor:
          type: string
          description: |-
            The pagination cursor to be used in a subsequent request. If unset,
            this is the final response.
            See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.
        errors:
          type: array
          description: '[Errors](#type-error) encountered during the search.'
          items:
            $ref: '#/components/schemas/Error'
      description: |-
        Only one of `order_entries` or `orders` fields will be set, depending on whether
        `return_entries` was set on the [SearchOrdersRequest](#type-searchorderrequest).
      example:
        order_entries:
        - order_id: CAISEM82RcpmcFBM0TfOyiHV3es
          location_id: 057P5VYJ4A5X1
          version: 1
        - order_id: CAISENgvlJ6jLWAzERDzjyHVybY
          location_id: 18YC4JDH91E1H
        - order_id: CAISEM52YcpmcWAzERDOyiWS3ty
          location_id: 057P5VYJ4A5X1
        cursor: "123"
      x-release-status: PUBLIC
    SearchOrdersSort:
      required:
      - sort_field
      type: object
      properties:
        sort_field:
          $ref: '#/components/schemas/SearchOrdersSortField'
        sort_order:
          $ref: '#/components/schemas/SortOrder'
      description: |-
        Sorting criteria for a SearchOrders request. Results can only be sorted
        by a timestamp field.
      x-release-status: PUBLIC
    SearchOrdersSourceFilter:
      type: object
      properties:
        source_names:
          type: array
          description: |-
            Filters by [Source](#type-ordersource) `name`. Will return any orders
            with with a `source.name` that matches any of the listed source names.

            Max: 10 source names.
          items:
            type: string
      description: Filter based on order `source` information.
      x-release-status: PUBLIC
    SearchOrdersStateFilter:
      required:
      - states
      type: object
      properties:
        states:
          type: array
          description: |-
            States to filter for.
            See [OrderState](#type-orderstate) for possible values
          items:
            $ref: '#/components/schemas/OrderState'
      description: Filter by current Order `state`.
      x-release-status: PUBLIC
    SearchShiftsRequest:
      type: object
      properties:
        query:
          $ref: '#/components/schemas/ShiftQuery'
        limit:
          maximum: 200
          minimum: 1
          type: integer
          description: number of resources in a page (200 by default).
        cursor:
          type: string
          description: opaque cursor for fetching the next page.
      description: A request for a filtered and sorted set of `Shift` objects.
      example:
        query:
          filter:
            workday:
              date_range:
                start_date: 2019-01-20
                end_date: 2019-02-03
              match_shifts_by: START_AT
              default_timezone: America/Los_Angeles
        limit: 100
      x-release-status: PUBLIC
    SearchShiftsResponse:
      type: object
      properties:
        shifts:
          type: array
          description: Shifts
          items:
            $ref: '#/components/schemas/Shift'
        cursor:
          type: string
          description: Opaque cursor for fetching the next page.
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: |-
        The response to a request for `Shift` objects. Contains
        the requested `Shift` objects. May contain a set of `Error` objects if
        the request resulted in errors.
      example:
        shifts:
        - id: X714F3HA6D1PT
          team_member_id: ormj0jJJZ5OZIzxrZYJI
          employee_id: ormj0jJJZ5OZIzxrZYJI
          location_id: PAA1RJZZKXBFG
          timezone: America/New_York
          start_at: 2019-01-21T03:11:00-05:00
          end_at: 2019-01-21T13:11:00-05:00
          wage:
            title: Barista
            hourly_rate:
              amount: 1100
              currency: USD
          breaks:
          - id: SJW7X6AKEJQ65
            start_at: 2019-01-21T06:11:00-05:00
            end_at: 2019-01-21T06:11:00-05:00
            break_type_id: REGS1EQR1TPZ5
            name: Tea Break
            expected_duration: PT10M
            is_paid: true
          status: CLOSED
          version: 6
          created_at: 2019-01-24T01:12:03Z
          updated_at: 2019-02-07T22:21:08Z
        - id: GDHYBZYWK0P2V
          team_member_id: 33fJchumvVdJwxV0H6L9
          employee_id: 33fJchumvVdJwxV0H6L9
          location_id: PAA1RJZZKXBFG
          timezone: America/New_York
          start_at: 2019-01-22T12:02:00-05:00
          end_at: 2019-01-22T13:02:00-05:00
          wage:
            title: Cook
            hourly_rate:
              amount: 1600
              currency: USD
          breaks:
          - id: BKS6VR7WR748A
            start_at: 2019-01-23T14:30:00-05:00
            end_at: 2019-01-23T14:40:00-05:00
            break_type_id: WQX00VR99F53J
            name: Tea Break
            expected_duration: PT10M
            is_paid: true
          - id: BQFEZSHFZSC51
            start_at: 2019-01-22T12:30:00-05:00
            end_at: 2019-01-22T12:44:00-05:00
            break_type_id: P6Q468ZFRN1AC
            name: Coffee Break
            expected_duration: PT15M
            is_paid: false
          status: CLOSED
          version: 16
          created_at: 2019-01-23T23:32:45Z
          updated_at: 2019-01-24T00:56:25Z
      x-release-status: PUBLIC
    SearchSubscriptionsFilter:
      type: object
      properties:
        customer_ids:
          type: array
          description: A filter to select subscriptions based on the customer.
          items:
            type: string
        location_ids:
          type: array
          description: A filter to select subscriptions based the location.
          items:
            type: string
      description: Represents a set of SearchSubscriptionsQuery filters used to limit
        the set of Subscriptions returned by SearchSubscriptions.
      x-release-status: BETA
    SearchSubscriptionsQuery:
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/SearchSubscriptionsFilter'
      description: Represents a query (including filtering criteria) used to search
        for subscriptions.
      x-release-status: BETA
    SearchSubscriptionsRequest:
      type: object
      properties:
        cursor:
          type: string
          description: |-
            A pagination cursor returned by a previous call to this endpoint.
            Provide this to retrieve the next set of results for the original query.

            For more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination).
        limit:
          minimum: 1
          type: integer
          description: "The upper limit on the number of subscriptions to return \n\
            in the response. \n\nDefault: `200`"
        query:
          $ref: '#/components/schemas/SearchSubscriptionsQuery'
      description: "Defines parameters in a\n[SearchSubscriptions](#endpoint-subscriptions-searchsubscriptions)\
        \ endpoint \nrequest."
      example:
        query:
          filter:
            location_ids:
            - S8GWD5R9QB376
            customer_ids:
            - CHFGVKYY8RSV93M5KCYTG4PN0G
      x-release-status: BETA
    SearchSubscriptionsResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information about errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
        subscriptions:
          type: array
          description: The search result.
          items:
            $ref: '#/components/schemas/Subscription'
        cursor:
          type: string
          description: "When a response is truncated, it includes a cursor that you\
            \ can \nuse in a subsequent request to fetch the next set of subscriptions.\
            \ \nIf empty, this is the final response.\n\nFor more information, see\
            \ [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination)."
      description: |-
        Defines the fields that are included in the response from the
        [SearchSubscriptions](#endpoint-subscriptions-searchsubscriptions) endpoint.
      example:
        subscriptions:
        - id: de86fc96-8664-474b-af1a-abbe59cacf0e
          location_id: S8GWD5R9QB376
          plan_id: L3TJVDHVBEQEGQDEZL2JJM7R
          customer_id: CHFGVKYY8RSV93M5KCYTG4PN0G
          start_date: 2020-04-14
          canceled_date: 2020-04-14
          charged_through_date: 2020-05-14
          status: CANCELED
          created_at: 2020-08-03T21:53:10Z
          card_id: ccof:mueUsvgajChmjEbp4GB
          paid_until_date: 2020-05-14
          timezone: UTC
        - id: 56214fb2-cc85-47a1-93bc-44f3766bb56f
          location_id: S8GWD5R9QB376
          plan_id: 6JHXF3B2CW3YKHDV4XEM674H
          customer_id: CHFGVKYY8RSV93M5KCYTG4PN0G
          start_date: 2020-08-01
          status: PENDING
          tax_percentage: "5"
          price_override_money:
            amount: 100
            currency: USD
          version: 1594155459464
          created_at: 2020-08-03T21:53:10Z
          timezone: America/Los_Angeles
        - id: 8151fc89-da15-4eb9-a685-1a70883cebfc
          location_id: S8GWD5R9QB376
          plan_id: 6JHXF3B2CW3YKHDV4XEM674H
          customer_id: CHFGVKYY8RSV93M5KCYTG4PN0G
          start_date: 2020-05-11
          charged_through_date: 2020-06-11
          status: ACTIVE
          invoice_ids:
          - grebK0Q_l8H4fqoMMVvt-Q
          - rcX_i3sNmHTGKhI4W2mceA
          price_override_money:
            amount: 1000
            currency: USD
          created_at: 2020-08-03T21:53:10Z
          paid_until_date: 2020-06-11
          timezone: America/Los_Angeles
      x-release-status: BETA
    SearchTeamMembersFilter:
      type: object
      properties:
        location_ids:
          type: array
          description: |-
            When present, filter by team members assigned to the specified locations.
            When empty, include team members assigned to any location.
          items:
            type: string
        status:
          $ref: '#/components/schemas/TeamMemberStatus'
      description: |-
        Represents a filter used in a search for `TeamMember` objects. `AND` logic is applied
        between the individual fields, and `OR` logic is applied within list-based fields.
        For example, setting this filter value,
        ```
        filter = (locations_ids = ["A", "B"], status = ACTIVE)
        ```
        returns only active team members assigned to either location "A" or "B".
      x-release-status: PUBLIC
    SearchTeamMembersQuery:
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/SearchTeamMembersFilter'
      description: Represents the parameters in a search for `TeamMember` objects.
      x-release-status: PUBLIC
    SearchTeamMembersRequest:
      type: object
      properties:
        query:
          $ref: '#/components/schemas/SearchTeamMembersQuery'
        limit:
          maximum: 25
          minimum: 1
          type: integer
          description: The maximum number of `TeamMember` objects in a page (25 by
            default).
        cursor:
          type: string
          description: |-
            The opaque cursor for fetching the next page. Read about
            [pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination) with Square APIs for more information.
      description: Represents a search request for a filtered list of `TeamMember`
        objects.
      example:
        query:
          filter:
            location_ids:
            - 0G5P3VGACMMQZ
            status: ACTIVE
        limit: 10
      x-release-status: PUBLIC
    SearchTeamMembersResponse:
      type: object
      properties:
        team_members:
          type: array
          description: The filtered list of `TeamMember` objects.
          items:
            $ref: '#/components/schemas/TeamMember'
        cursor:
          type: string
          description: |-
            The opaque cursor for fetching the next page. Read about
            [pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination) with Square APIs for more information.
        errors:
          type: array
          description: The errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: Represents a response from a search request, containing a filtered
        list of `TeamMember` objects.
      example:
        team_members:
        - id: -3oZQKPKVk6gUXU_V5Qa
          reference_id: "12345678"
          is_owner: false
          status: ACTIVE
          given_name: Johnny
          family_name: Cash
          email_address: johnny_cash@squareup.com
          created_at: 2019-07-10T17:26:48Z
          updated_at: 2020-04-28T21:49:28.957Z
          assigned_locations:
            assignment_type: ALL_CURRENT_AND_FUTURE_LOCATIONS
        - id: 1AVJj0DjkzbmbJw5r4KK
          reference_id: abcded
          is_owner: false
          status: ACTIVE
          given_name: Lombard
          family_name: Smith
          phone_number: +14155552671
          created_at: 2020-03-24T18:14:01.127Z
          updated_at: 2020-06-09T17:38:05.423Z
          assigned_locations:
            assignment_type: ALL_CURRENT_AND_FUTURE_LOCATIONS
        - id: 2JCmiJol_KKFs9z2Evim
          is_owner: false
          status: ACTIVE
          given_name: Monica
          family_name: Sway
          created_at: 2020-03-24T01:09:25.010Z
          updated_at: 2020-03-24T01:09:25.010Z
          assigned_locations:
            assignment_type: ALL_CURRENT_AND_FUTURE_LOCATIONS
        - id: 4uXcJQSLtbk3F0UQHFNQ
          is_owner: false
          status: ACTIVE
          given_name: Elton
          family_name: Ipsum
          created_at: 2020-03-24T01:09:23.464Z
          updated_at: 2020-03-24T01:09:23.464Z
          assigned_locations:
            assignment_type: ALL_CURRENT_AND_FUTURE_LOCATIONS
        - id: 5CoUpyrw1YwGWcRd-eDL
          is_owner: false
          status: ACTIVE
          given_name: Steven
          family_name: Lo
          created_at: 2020-03-24T01:09:23.074Z
          updated_at: 2020-03-24T01:09:23.074Z
          assigned_locations:
            assignment_type: ALL_CURRENT_AND_FUTURE_LOCATIONS
        - id: 5MRPTTp8MMBLVSmzrGha
          is_owner: false
          status: ACTIVE
          given_name: Patrick
          family_name: Steward
          email_address: patrick_steward@gmail.com
          phone_number: +14155552671
          created_at: 2020-03-24T18:14:03.865Z
          updated_at: 2020-03-24T18:14:03.865Z
          assigned_locations:
            assignment_type: ALL_CURRENT_AND_FUTURE_LOCATIONS
        - id: 7F5ZxsfRnkexhu1PTbfh
          is_owner: false
          status: ACTIVE
          given_name: Ivy
          family_name: Manny
          created_at: 2020-03-24T01:09:25.180Z
          updated_at: 2020-03-24T01:09:25.180Z
          assigned_locations:
            assignment_type: ALL_CURRENT_AND_FUTURE_LOCATIONS
        - id: 808X9HR72yKvVaigQXf4
          is_owner: false
          status: ACTIVE
          given_name: John
          family_name: Smith
          email_address: john_smith@gmail.com
          phone_number: +14155552671
          created_at: 2020-03-24T18:14:02.797Z
          updated_at: 2020-03-24T18:14:02.797Z
          assigned_locations:
            assignment_type: ALL_CURRENT_AND_FUTURE_LOCATIONS
        - id: 9MVDVoY4hazkWKGo_OuZ
          is_owner: false
          status: ACTIVE
          given_name: Robert
          family_name: Wen
          email_address: r_wen@gmail.com
          phone_number: +14155552671
          created_at: 2020-03-24T18:14:00.399Z
          updated_at: 2020-03-24T18:14:00.399Z
          assigned_locations:
            assignment_type: ALL_CURRENT_AND_FUTURE_LOCATIONS
        - id: 9UglUjOXQ13-hMFypCft
          is_owner: false
          status: ACTIVE
          given_name: Ashley
          family_name: Simpson
          email_address: asimpson@gmail.com
          phone_number: +14155552671
          created_at: 2020-03-24T18:14:00.445Z
          updated_at: 2020-03-24T18:14:00.445Z
          assigned_locations:
            assignment_type: ALL_CURRENT_AND_FUTURE_LOCATIONS
        cursor: N:9UglUjOXQ13-hMFypCft
      x-release-status: PUBLIC
    SearchTerminalCheckoutsRequest:
      type: object
      properties:
        query:
          $ref: '#/components/schemas/TerminalCheckoutQuery'
        cursor:
          type: string
          description: |-
            A pagination cursor returned by a previous call to this endpoint.
            Provide this to retrieve the next set of results for the original query.
        limit:
          type: integer
          description: Limit the number of results returned for a single request.
      example:
        limit: 2
        query:
          filter:
            status: COMPLETED
      x-release-status: BETA
    SearchTerminalCheckoutsResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
        checkouts:
          type: array
          description: The requested search result of `TerminalCheckout`s.
          items:
            $ref: '#/components/schemas/TerminalCheckout'
        cursor:
          type: string
          description: |-
            The pagination cursor to be used in a subsequent request. If empty,
            this is the final response.

            See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.
      example:
        checkouts:
        - id: tsQPvzwBpMqqO
          amount_money:
            amount: 2610
            currency: USD
          reference_id: id14467
          note: A brief note
          device_options:
            device_id: dbb5d83a-7838-11ea-bc55-0242ac130003
            tip_settings:
              allow_tipping: false
            skip_receipt_screen: false
          status: COMPLETED
          payment_ids:
          - rXnhZzywrEk4vR6pw76fPZfgvaB
          created_at: 2020-03-31T18:13:15.921Z
          updated_at: 2020-03-31T18:13:52.725Z
          app_id: APP_ID
          deadline_duration: PT10M
        - id: XlOPTgcEhrbqO
          amount_money:
            amount: 2610
            currency: USD
          reference_id: id41623
          note: A brief note
          device_options:
            device_id: dbb5d83a-7838-11ea-bc55-0242ac130003
            tip_settings:
              allow_tipping: false
            skip_receipt_screen: true
          status: COMPLETED
          payment_ids:
          - VYBF861PaoKPP7Pih0TlbZiNvaB
          created_at: 2020-03-31T18:08:31.882Z
          updated_at: 2020-03-31T18:08:41.635Z
          app_id: APP_ID
          deadline_duration: PT10M
        cursor: RiTJqBoTuXlbLmmrPvEkX9iG7XnQ4W4RjGnH
      x-release-status: BETA
    Shift:
      required:
      - start_at
      type: object
      properties:
        id:
          maxLength: 255
          type: string
          description: UUID for this object
        employee_id:
          type: string
          description: The ID of the employee this shift belongs to. DEPRECATED at
            version 2020-08-26. Use `team_member_id` instead
          x-release-status: DEPRECATED
        location_id:
          type: string
          description: |-
            The ID of the location this shift occurred at. Should be based on
            where the employee clocked in.
        timezone:
          type: string
          description: |-
            Read-only convenience value that is calculated from the location based
            on `location_id`. Format: the IANA Timezone Database identifier for the
            location timezone.
        start_at:
          minLength: 1
          type: string
          description: |-
            RFC 3339; shifted to location timezone + offset. Precision up to the
            minute is respected; seconds are truncated.
        end_at:
          type: string
          description: |-
            RFC 3339; shifted to timezone + offset. Precision up to the minute is
            respected; seconds are truncated.
        wage:
          $ref: '#/components/schemas/ShiftWage'
        breaks:
          type: array
          description: A list of any paid or unpaid breaks that were taken during
            this shift.
          items:
            $ref: '#/components/schemas/Break'
        status:
          $ref: '#/components/schemas/ShiftStatus'
        version:
          minimum: 0
          type: integer
          description: |-
            Used for resolving concurrency issues; request will fail if version
            provided does not match server version at time of request. If not provided,
            Square executes a blind write; potentially overwriting data from another
            write.
        created_at:
          type: string
          description: A read-only timestamp in RFC 3339 format; presented in UTC.
          readOnly: true
        updated_at:
          type: string
          description: A read-only timestamp in RFC 3339 format; presented in UTC.
          readOnly: true
        team_member_id:
          type: string
          description: The ID of the team member this shift belongs to. Replaced `employee_id`
            at version "2020-08-26"
      description: |-
        A record of the hourly rate, start, and end times for a single work shift
        for an employee. May include a record of the start and end times for breaks
        taken during the shift.
      x-release-status: PUBLIC
    ShiftFilter:
      required:
      - location_ids
      - team_member_ids
      type: object
      properties:
        location_ids:
          type: array
          description: Fetch shifts for the specified location.
          items:
            minLength: 1
            type: string
        employee_ids:
          type: array
          description: Fetch shifts for the specified employees. DEPRECATED at version
            2020-08-26. Use `team_member_ids` instead
          items:
            type: string
          x-release-status: DEPRECATED
        status:
          $ref: '#/components/schemas/ShiftFilterStatus'
        start:
          $ref: '#/components/schemas/TimeRange'
        end:
          $ref: '#/components/schemas/TimeRange'
        workday:
          $ref: '#/components/schemas/ShiftWorkday'
        team_member_ids:
          type: array
          description: Fetch shifts for the specified team members. Replaced `employee_ids`
            at version "2020-08-26"
          items:
            minLength: 1
            type: string
      description: |-
        Defines a filter used in a search for `Shift` records. `AND` logic is
        used by Square's servers to apply each filter property specified.
      x-release-status: PUBLIC
    ShiftQuery:
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/ShiftFilter'
        sort:
          $ref: '#/components/schemas/ShiftSort'
      description: The parameters of a `Shift` search query. Includes filter and sort
        options.
      x-release-status: PUBLIC
    ShiftSort:
      type: object
      properties:
        field:
          $ref: '#/components/schemas/ShiftSortField'
        order:
          $ref: '#/components/schemas/SortOrder'
      description: Sets the sort order of search results.
      x-release-status: PUBLIC
    ShiftWage:
      type: object
      properties:
        title:
          type: string
          description: |-
            The name of the job performed during this shift. Square
            labor-reporting UIs may group shifts together by title.
        hourly_rate:
          $ref: '#/components/schemas/Money'
      description: The hourly wage rate used to compensate an employee for this shift.
      x-release-status: PUBLIC
    ShiftWorkday:
      type: object
      properties:
        date_range:
          $ref: '#/components/schemas/DateRange'
        match_shifts_by:
          $ref: '#/components/schemas/ShiftWorkdayMatcher'
        default_timezone:
          type: string
          description: |-
            Location-specific timezones convert workdays to datetime filters.
            Every location included in the query must have a timezone, or this field
            must be provided as a fallback. Format: the IANA timezone database
            identifier for the relevant timezone.
      description: |-
        A `Shift` search query filter parameter that sets a range of days that
        a `Shift` must start or end in before passing the filter condition.
      x-release-status: PUBLIC
    SourceApplication:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/Product'
        application_id:
          type: string
          description: |-
            Read-only Square ID assigned to the application. Only used for
            [Product](#type-product) type `EXTERNAL_API`.
        name:
          type: string
          description: |-
            Read-only display name assigned to the application
            (e.g. `"Custom Application"`, `"Square POS 4.74 for Android"`).
      description: Provides information about the application used to generate a change.
      x-release-status: PUBLIC
    StandardUnitDescription:
      type: object
      properties:
        unit:
          $ref: '#/components/schemas/MeasurementUnit'
        name:
          type: string
          description: UI display name of the measurement unit. For example, 'Pound'.
        abbreviation:
          type: string
          description: UI display abbreviation for the measurement unit. For example,
            'lb'.
      description: Contains the name and abbreviation for standard measurement unit.
      x-release-status: PUBLIC
    StandardUnitDescriptionGroup:
      type: object
      properties:
        standard_unit_descriptions:
          type: array
          description: List of standard (non-custom) measurement units in this description
            group.
          items:
            $ref: '#/components/schemas/StandardUnitDescription'
        language_code:
          type: string
          description: IETF language tag.
      description: Group of standard measurement units.
      x-release-status: PUBLIC
    SubmitEvidenceRequest:
      type: object
      properties: {}
      description: Defines parameters for a SubmitEvidence request.
      example: {}
      x-release-status: BETA
    SubmitEvidenceResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
        dispute:
          $ref: '#/components/schemas/Dispute'
      description: Defines fields in a SubmitEvidence response.
      example:
        dispute:
          dispute_id: EAZoK70gX3fyvibecLwIGB
          amount_money:
            amount: 2000
            currency: USD
          reason: NO_KNOWLEDGE
          state: PROCESSING
          due_at: 2018-11-01T00:00:00.000Z
          disputed_payments:
          - payment_id: 2yeBUWJzllJTpmnSqtMRAL19taB
          evidence_ids:
          - CKWRhnZN0eMSUbh38BKmD
          card_brand: visa
          created_at: 2018-10-18T16:02:15.313Z
          updated_at: 2018-10-18T16:02:15.313Z
          brand_dispute_id: "100000399240"
      x-release-status: BETA
    Subscription:
      type: object
      properties:
        id:
          maxLength: 255
          type: string
          description: The Square-assigned ID of the subscription.
          readOnly: true
        location_id:
          type: string
          description: The ID of the location associated with the subscription.
          readOnly: true
        plan_id:
          type: string
          description: The ID of the associated [subscription plan](#type-catalogsubscriptionplan).
          readOnly: true
        customer_id:
          type: string
          description: The ID of the associated [customer](#type-customer) profile.
          readOnly: true
        start_date:
          type: string
          description: |-
            The start date of the subscription, in YYYY-MM-DD format (for example,
            2013-01-15).
          readOnly: true
        canceled_date:
          type: string
          description: "The subscription cancellation date, in YYYY-MM-DD format (for\n\
            example, 2013-01-15). On this date, the subscription status changes \n\
            to `CANCELED` and the subscription billing stops. \nIf you don't set this\
            \ field, the subscription plan dictates if and \nwhen subscription ends.\
            \ \n\nYou cannot update this field, you can only clear it."
        status:
          $ref: '#/components/schemas/SubscriptionStatus'
        tax_percentage:
          type: string
          description: |-
            The tax amount applied when billing the subscription. The
            percentage is expressed in decimal form, using a `'.'` as the decimal
            separator and without a `'%'` sign. For example, a value of `7.5`
            corresponds to 7.5%.
        invoice_ids:
          type: array
          description: "The IDs of the [invoices](#type-invoice) created for the \n\
            subscription, listed in order when the invoices were created \n(oldest\
            \ invoices appear first)."
          readOnly: true
          items:
            type: string
        price_override_money:
          $ref: '#/components/schemas/Money'
        version:
          type: integer
          description: |-
            The version of the object. When updating an object, the version
            supplied must match the version in the database, otherwise the write will
            be rejected as conflicting.
          format: int64
        created_at:
          type: string
          description: The timestamp when the subscription was created, in RFC 3339
            format.
          readOnly: true
        card_id:
          type: string
          description: |-
            The ID of the [customer](#type-customer) [card](#type-card)
            that is charged for the subscription.
        paid_until_date:
          type: string
          description: |-
            The date up to which the customer is invoiced for the
            subscription, in YYYY-MM-DD format (for example, 2013-01-15).

            After the invoice is paid for a given billing period,
            this date will be the last day of the billing period.
            For example,
            suppose for the month of May a customer gets an invoice
            (or charged the card) on May 1. For the monthly billing scenario,
            this date is then set to May 31.
          readOnly: true
        timezone:
          type: string
          description: |-
            Timezone that will be used in date calculations for the subscription.
            Defaults to the timezone of the location based on `location_id`.
            Format: the IANA Timezone Database identifier for the location timezone (for example, `America/Los_Angeles`).
          readOnly: true
      description: "Represents a customer subscription to a subscription plan.\nFor\
        \ an overview of the `Subscription` type, see \n[Subscription object](https://developer.squareup.com/docs/docs/subscriptions-api/overview#subscription-object-overview)."
      x-release-status: BETA
    SubscriptionCreatedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        type:
          type: string
          description: The type of event this represents, `"subscription.created"`.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/SubscriptionCreatedWebhookData'
      description: Published when a [Subscription](#type-Subscription) is created.
      example:
        merchant_id: VSE65BA53PXCC
        type: subscription.created
        event_id: 65bc2e81-bcdc-4add-abfd-7a012b8f3d2a
        created_at: 2020-07-15T05:14:11.002Z
        data:
          type: subscription
          id: 592b9720-d2ef-4ee4-b3fd-9d98e4f829d2
          object:
            subscription:
              id: 592b9720-d2ef-4ee4-b3fd-9d98e4f829d2
              created_date: 2020-07-15
              customer_id: QX2XG9GMQS2BVBJKPG8CJ8JKCR
              location_id: EZHGJ7SNVAJ19
              plan_id: CRUUZUK5W6PIIM6H54242NV6
              start_date: 2020-07-15
              status: ACTIVE
              tax_percentage: "5"
              timezone: America/New_York
              version: 1594790050754
      x-release-status: BETA
      x-visibility: DOC_ONLY
      x-webhook:
        event: subscription.created
        scopes:
        - SUBSCRIPTIONS_READ
      x-api: '#/components/x-apis/Subscriptions'
      x-since: 2020-08-12
    SubscriptionCreatedWebhookData:
      type: object
      properties:
        type:
          maxLength: 50
          type: string
          description: Name of the affected object’s type, `"subscription"`.
        id:
          maxLength: 255
          type: string
          description: ID of the affected subscription.
        object:
          $ref: '#/components/schemas/SubscriptionCreatedWebhookObject'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    SubscriptionCreatedWebhookObject:
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/Subscription'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    SubscriptionEvent:
      required:
      - effective_date
      - id
      - plan_id
      - subscription_event_type
      type: object
      properties:
        id:
          type: string
          description: The ID of the subscription event.
        subscription_event_type:
          $ref: '#/components/schemas/SubscriptionEventSubscriptionEventType'
        effective_date:
          type: string
          description: |-
            The date, in YYYY-MM-DD format (for
            example, 2013-01-15), when the subscription event went into effect.
        plan_id:
          type: string
          description: The ID of the subscription plan associated with the subscription.
      description: Describes changes to subscription and billing states.
      x-release-status: BETA
    SubscriptionPhase:
      required:
      - cadence
      - recurring_price_money
      type: object
      properties:
        uid:
          type: string
          description: The Square-assigned ID of the subscription phase. This field
            cannot be changed after a `SubscriptionPhase` is created.
        cadence:
          $ref: '#/components/schemas/SubscriptionCadence'
        periods:
          minimum: 0
          type: integer
          description: The number of `cadence`s the phase lasts. If not set, the phase
            never ends. Only the last phase can be indefinite. This field cannot be
            changed after a `SubscriptionPhase` is created.
        recurring_price_money:
          $ref: '#/components/schemas/Money'
        ordinal:
          type: integer
          description: The position this phase appears in the sequence of phases defined
            for the plan, indexed from 0. This field cannot be changed after a `SubscriptionPhase`
            is created.
          format: int64
      description: |-
        Describes a phase in a subscription plan. For more information, see
        [Set Up and Manage a Subscription Plan](https://developer.squareup.com/docs/docs/subscriptions-api/setup-plan).
      x-release-status: BETA
    SubscriptionUpdatedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        type:
          type: string
          description: The type of event this represents, `"subscription.updated"`.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/SubscriptionUpdatedWebhookData'
      description: |-
        Published when a [Subscription](#type-Subscription) is updated.
        Typically the `subscription.status` is updated as subscriptions become active
        or cancelled.
      example:
        merchant_id: VSE65BA53PXCC
        type: subscription.updated
        event_id: c0b40cc0-7cb2-4aa1-81ce-0893b9b0b9b8
        created_at: 2020-07-15T05:14:11.213Z
        data:
          type: subscription
          id: 592b9720-d2ef-4ee4-b3fd-9d98e4f829d2
          object:
            subscription:
              id: 592b9720-d2ef-4ee4-b3fd-9d98e4f829d2
              created_date: 2020-07-15
              customer_id: QX2XG9GMQS2BVBJKPG8CJ8JKCR
              location_id: EZHGJ7SNVAJ19
              plan_id: CRUUZUK5W6PIIM6H54242NV6
              start_date: 2020-07-15
              status: ACTIVE
              tax_percentage: "5"
              timezone: America/New_York
              version: 1594790050754
      x-release-status: BETA
      x-visibility: DOC_ONLY
      x-webhook:
        event: subscription.updated
        scopes:
        - SUBSCRIPTIONS_READ
      x-api: '#/components/x-apis/Subscriptions'
      x-since: 2020-08-12
    SubscriptionUpdatedWebhookData:
      type: object
      properties:
        type:
          maxLength: 50
          type: string
          description: Name of the affected object’s type, `"subscription"`.
        id:
          maxLength: 255
          type: string
          description: ID of the affected subscription.
        object:
          $ref: '#/components/schemas/SubscriptionUpdatedWebhookObject'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    SubscriptionUpdatedWebhookObject:
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/Subscription'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    TeamMember:
      type: object
      properties:
        id:
          type: string
          description: The unique ID for the team member.
          readOnly: true
        reference_id:
          type: string
          description: A second ID used to associate the team member with an entity
            in another system.
        is_owner:
          type: boolean
          description: Whether the team member is the owner of the Square account.
          readOnly: true
        status:
          $ref: '#/components/schemas/TeamMemberStatus'
        given_name:
          type: string
          description: The given (i.e., first) name associated with the team member.
        family_name:
          type: string
          description: The family (i.e., last) name associated with the team member.
        email_address:
          type: string
          description: The email address associated with the team member.
        phone_number:
          type: string
          description: |-
            The team member's phone number in E.164 format. Examples:
            +14155552671 - the country code is 1 for US
            +551155256325 - the country code is 55 for BR
        created_at:
          type: string
          description: |-
            The timestamp in RFC 3339 format describing when the team member was created.
            Ex: "2018-10-04T04:00:00-07:00" or "2019-02-05T12:00:00Z"
          readOnly: true
        updated_at:
          type: string
          description: |-
            The timestamp in RFC 3339 format describing when the team member was last updated.
            Ex: "2018-10-04T04:00:00-07:00" or "2019-02-05T12:00:00Z"
          readOnly: true
        assigned_locations:
          $ref: '#/components/schemas/TeamMemberAssignedLocations'
      description: A record representing an individual team member for a business.
      x-release-status: PUBLIC
    TeamMemberAssignedLocations:
      type: object
      properties:
        assignment_type:
          $ref: '#/components/schemas/TeamMemberAssignedLocationsAssignmentType'
        location_ids:
          type: array
          description: The locations that the team member is assigned to.
          items:
            type: string
      description: An object that represents a team member's assignment to locations.
      x-release-status: PUBLIC
    TeamMemberWage:
      type: object
      properties:
        id:
          type: string
          description: UUID for this object.
        team_member_id:
          type: string
          description: The `Team Member` that this wage is assigned to.
        title:
          type: string
          description: The job title that this wage relates to.
        hourly_rate:
          $ref: '#/components/schemas/Money'
      description: |-
        The hourly wage rate that a team member will earn on a `Shift` for doing the job
        specified by the `title` property of this object.
      x-release-status: PUBLIC
    Tender:
      required:
      - type
      type: object
      properties:
        id:
          maxLength: 192
          type: string
          description: The tender's unique ID.
        location_id:
          maxLength: 50
          type: string
          description: The ID of the transaction's associated location.
        transaction_id:
          maxLength: 192
          type: string
          description: The ID of the tender's associated transaction.
        created_at:
          maxLength: 32
          type: string
          description: The timestamp for when the tender was created, in RFC 3339
            format.
          readOnly: true
        note:
          maxLength: 500
          type: string
          description: An optional note associated with the tender at the time of
            payment.
        amount_money:
          $ref: '#/components/schemas/Money'
        tip_money:
          $ref: '#/components/schemas/Money'
        processing_fee_money:
          $ref: '#/components/schemas/Money'
        customer_id:
          maxLength: 191
          type: string
          description: |-
            If the tender is associated with a customer or represents a customer's card on file,
            this is the ID of the associated customer.
        type:
          $ref: '#/components/schemas/TenderType'
        card_details:
          $ref: '#/components/schemas/TenderCardDetails'
        cash_details:
          $ref: '#/components/schemas/TenderCashDetails'
        bank_transfer_details:
          $ref: '#/components/schemas/TenderBankTransferDetails'
        additional_recipients:
          type: array
          description: |-
            Additional recipients (other than the merchant) receiving a portion of this tender.
            For example, fees assessed on the purchase by a third party integration.
          items:
            $ref: '#/components/schemas/AdditionalRecipient'
        payment_id:
          maxLength: 192
          type: string
          description: |-
            The ID of the [Payment](#type-payment) that corresponds to this tender.
            This value is only present for payments created with the v2 Payments API.
      description: Represents a tender (i.e., a method of payment) used in a Square
        transaction.
      x-release-status: PUBLIC
    TenderBankTransferDetails:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/TenderBankTransferDetailsStatus'
      description: |-
        Represents the details of a tender with `type` `BANK_TRANSFER`.

        See [PaymentBankTransferDetails](#type-paymentbanktransferdetails) for more exposed details of a bank transfer payment.
      x-release-status: PUBLIC
    TenderCardDetails:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/TenderCardDetailsStatus'
        card:
          $ref: '#/components/schemas/Card'
        entry_method:
          $ref: '#/components/schemas/TenderCardDetailsEntryMethod'
      description: Represents additional details of a tender with `type` `CARD` or
        `SQUARE_GIFT_CARD`
      x-release-status: PUBLIC
    TenderCashDetails:
      type: object
      properties:
        buyer_tendered_money:
          $ref: '#/components/schemas/Money'
        change_back_money:
          $ref: '#/components/schemas/Money'
      description: Represents the details of a tender with `type` `CASH`.
      x-release-status: PUBLIC
    TerminalCheckout:
      required:
      - amount_money
      - device_options
      type: object
      properties:
        id:
          type: string
          description: A unique ID for this `TerminalCheckout`
          readOnly: true
        amount_money:
          $ref: '#/components/schemas/Money'
        reference_id:
          maxLength: 40
          type: string
          description: |-
            An optional user-defined reference ID which can be used to associate
            this TerminalCheckout to another entity in an external system. For example, an order
            ID generated by a third-party shopping cart. Will also be associated with any payments
            used to complete the checkout.
        note:
          maxLength: 250
          type: string
          description: An optional note to associate with the checkout, as well any
            payments used to complete the checkout.
        device_options:
          $ref: '#/components/schemas/DeviceCheckoutOptions'
        deadline_duration:
          type: string
          description: |-
            The duration as an RFC 3339 duration, after which the checkout will be automatically canceled.
            TerminalCheckouts that are PENDING will be automatically CANCELED and have a cancellation reason
            of “TIMED\_OUT”.

            Default: 5 minutes from creation

            Maximum: 5 minutes
        status:
          type: string
          description: |-
            The status of the `TerminalCheckout`.
            Options: PENDING, IN\_PROGRESS, CANCELED, COMPLETED
          readOnly: true
        cancel_reason:
          $ref: '#/components/schemas/ActionCancelReason'
        payment_ids:
          type: array
          description: A list of payments created by this `TerminalCheckout`.
          readOnly: true
          items:
            type: string
        created_at:
          type: string
          description: The time when the `TerminalCheckout` was created as an RFC
            3339 timestamp.
          readOnly: true
        updated_at:
          type: string
          description: The time when the `TerminalCheckout` was last updated as an
            RFC 3339 timestamp.
          readOnly: true
      x-release-status: BETA
    TerminalCheckoutCreatedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        type:
          type: string
          description: The type of event this represents, `"terminal.checkout.created"`.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: RFC 3339 timestamp of when the webhook event was created.
        data:
          $ref: '#/components/schemas/TerminalCheckoutCreatedWebhookData'
      description: Published when a [TerminalCheckout](#type-TerminalCheckout) is
        created.
      example:
        merchant_id: 7NZR58EPNGNPC
        type: terminal.checkout.created
        event_id: 7229a692-def5-4a7e-b4f3-80638aa2f24d
        created_at: 2020-04-10T14:43:55.262Z
        data:
          type: checkout.event
          id: dhgENdnFOPXqO
          object:
            checkout:
              amount_money:
                amount: 111
                currency: USD
              app_id: sq0idp-734Md5EcFjFmwpaR0Snm6g
              created_at: 2020-04-10T14:43:55.262Z
              deadline_duration: PT5M
              device_options:
                device_id: 907CS13101300122
                skip_receipt_screen: false
                tip_settings:
                  allow_tipping: false
              id: dhgENdnFOPXqO
              note: A simple note
              reference_id: id72709
              status: PENDING
              updated_at: 2020-04-10T14:43:55.262Z
      x-release-status: BETA
      x-visibility: DOC_ONLY
      x-webhook:
        event: terminal.checkout.created
        scopes:
        - PAYMENTS_READ
      x-api: '#/components/x-apis/Terminal'
      x-since: 2020-04-22
    TerminalCheckoutCreatedWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the created object’s type, `"terminal.checkout"`.
        id:
          type: string
          description: ID of the created terminal checkout.
        object:
          $ref: '#/components/schemas/TerminalCheckoutCreatedWebhookObject'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    TerminalCheckoutCreatedWebhookObject:
      type: object
      properties:
        checkout:
          $ref: '#/components/schemas/TerminalCheckout'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    TerminalCheckoutQuery:
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/TerminalCheckoutQueryFilter'
        sort:
          $ref: '#/components/schemas/TerminalCheckoutQuerySort'
      x-release-status: BETA
    TerminalCheckoutQueryFilter:
      type: object
      properties:
        device_id:
          type: string
          description: |-
            `TerminalCheckout`s associated with a specific device. If no device is specified then all
            `TerminalCheckout`s for the merchant will be displayed.
        created_at:
          $ref: '#/components/schemas/TimeRange'
        status:
          type: string
          description: |-
            Filtered results with the desired status of the `TerminalCheckout`
            Options: PENDING, IN\_PROGRESS, CANCELED, COMPLETED
      x-release-status: BETA
    TerminalCheckoutQuerySort:
      type: object
      properties:
        sort_order:
          type: string
          description: |-
            The order in which results are listed.
            - `ASC` - oldest to newest
            - `DESC` - newest to oldest (default).
      x-release-status: BETA
    TerminalCheckoutUpdatedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        type:
          type: string
          description: The type of event this represents, `"terminal.checkout.updated"`.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: RFC 3339 timestamp of when the webhook event was created.
        data:
          $ref: '#/components/schemas/TerminalCheckoutUpdatedWebhookData'
      description: Published when a [TerminalCheckout](#type-TerminalCheckout) is
        updated.
      example:
        merchant_id: 7NZR58EPNGNPC
        type: terminal.checkout.updated
        event_id: 1c3ef831-670d-4f4c-b59c-f0bb2d2fc872
        created_at: 2020-04-10T14:44:06.039Z
        data:
          type: checkout.event
          id: dhgENdnFOPXqO
          object:
            checkout:
              amount_money:
                amount: 111
                currency: USD
              app_id: sq0idp-734Md5EcFjFmwpaR0Snm6g
              created_at: 2020-04-10T14:43:55.262Z
              deadline_duration: PT5M
              device_options:
                device_id: 907CS13101300122
                skip_receipt_screen: false
                tip_settings:
                  allow_tipping: false
              id: dhgENdnFOPXqO
              note: A simple note
              payment_ids:
              - dgzrZTeIeVuOGwYgekoTHsPouaB
              reference_id: id72709
              status: COMPLETED
              updated_at: 2020-04-10T14:44:06.039Z
      x-release-status: BETA
      x-visibility: DOC_ONLY
      x-webhook:
        event: terminal.checkout.updated
        scopes:
        - PAYMENTS_READ
      x-api: '#/components/x-apis/Terminal'
      x-since: 2020-04-22
    TerminalCheckoutUpdatedWebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the updated object’s type, `"terminal.checkout"`.
        id:
          type: string
          description: ID of the updated terminal checkout.
        object:
          $ref: '#/components/schemas/TerminalCheckoutUpdatedWebhookObject'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    TerminalCheckoutUpdatedWebhookObject:
      type: object
      properties:
        checkout:
          $ref: '#/components/schemas/TerminalCheckout'
      x-release-status: BETA
      x-visibility: DOC_ONLY
    TimeRange:
      type: object
      properties:
        start_at:
          type: string
          description: |-
            A datetime value in RFC 3339 format indicating when the time range
            starts.
        end_at:
          type: string
          description: |-
            A datetime value in RFC 3339 format indicating when the time range
            ends.
      description: |-
        Represents a generic time range. The start and end values are
        represented in RFC 3339 format. Time ranges are customized to be
        inclusive or exclusive based on the needs of a particular endpoint.
        Refer to the relevant endpoint-specific documentation to determine
        how time ranges are handled.
      x-release-status: PUBLIC
    TipSettings:
      type: object
      properties:
        allow_tipping:
          type: boolean
          description: Indicates whether tipping is enabled for this checkout. Defaults
            to false.
        separate_tip_screen:
          type: boolean
          description: |-
            Indicates whether tip options should be presented on their own screen before presenting
            the signature screen during card payment. Defaults to false.
        custom_tip_field:
          type: boolean
          description: Indicates whether custom tip amounts are allowed during the
            checkout flow. Defaults to false.
      x-release-status: BETA
    Transaction:
      type: object
      properties:
        id:
          maxLength: 192
          type: string
          description: The transaction's unique ID, issued by Square payments servers.
        location_id:
          maxLength: 50
          type: string
          description: The ID of the transaction's associated location.
        created_at:
          maxLength: 32
          type: string
          description: The timestamp for when the transaction was created, in RFC
            3339 format.
        tenders:
          type: array
          description: The tenders used to pay in the transaction.
          items:
            $ref: '#/components/schemas/Tender'
        refunds:
          type: array
          description: Refunds that have been applied to any tender in the transaction.
          items:
            $ref: '#/components/schemas/Refund'
        reference_id:
          maxLength: 40
          type: string
          description: |-
            If the transaction was created with the [Charge](#endpoint-charge)
            endpoint, this value is the same as the value provided for the `reference_id`
            parameter in the request to that endpoint. Otherwise, it is not set.
        product:
          $ref: '#/components/schemas/TransactionProduct'
        client_id:
          maxLength: 192
          type: string
          description: |-
            If the transaction was created in the Square Point of Sale app, this value
            is the ID generated for the transaction by Square Point of Sale.

            This ID has no relationship to the transaction's canonical `id`, which is
            generated by Square's backend servers. This value is generated for bookkeeping
            purposes, in case the transaction cannot immediately be completed (for example,
            if the transaction is processed in offline mode).

            It is not currently possible with the Connect API to perform a transaction
            lookup by this value.
        shipping_address:
          $ref: '#/components/schemas/Address'
        order_id:
          maxLength: 192
          type: string
          description: The order_id is an identifier for the order associated with
            this transaction, if any.
      description: |-
        Represents a transaction processed with Square, either with the
        Connect API or with Square Point of Sale.

        The `tenders` field of this object lists all methods of payment used to pay in
        the transaction.
      x-release-status: DEPRECATED
    UpdateBreakTypeRequest:
      required:
      - break_type
      type: object
      properties:
        break_type:
          $ref: '#/components/schemas/BreakType'
      description: A request to update a `BreakType`
      example:
        break_type:
          location_id: 26M7H24AZ9N6R
          break_name: Lunch
          expected_duration: PT50M
          is_paid: true
          version: 1
      x-release-status: PUBLIC
    UpdateBreakTypeResponse:
      type: object
      properties:
        break_type:
          $ref: '#/components/schemas/BreakType'
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: |-
        A response to a request to update a `BreakType`. Contains
        the requested `BreakType` objects. May contain a set of `Error` objects if
        the request resulted in errors.
      example:
        break_type:
          id: Q6JSJS6D4DBCH
          location_id: 26M7H24AZ9N6R
          break_name: Lunch
          expected_duration: PT50M
          is_paid: true
          version: 2
          created_at: 2018-06-12T20:19:12Z
          updated_at: 2019-02-26T23:12:59Z
      x-release-status: PUBLIC
    UpdateCustomerGroupRequest:
      required:
      - group
      type: object
      properties:
        group:
          $ref: '#/components/schemas/CustomerGroup'
      description: |-
        Defines the body parameters that can be provided in a request to the
        [UpdateCustomerGroup](#endpoint-updatecustomergroup) endpoint.
      example:
        group:
          name: Loyal Customers
      x-release-status: BETA
    UpdateCustomerGroupResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        group:
          $ref: '#/components/schemas/CustomerGroup'
      description: |-
        Defines the fields that are included in the response body of
        a request to the [UpdateCustomerGroup](#endpoint-updatecustomergroup) endpoint.

        One of `errors` or `group` is present in a given response (never both).
      example:
        group:
          id: 2TAT3CMH4Q0A9M87XJZED0WMR3
          name: Loyal Customers
          created_at: 2020-04-13T21:54:57.863Z
          updated_at: 2020-04-13T21:54:58Z
      x-release-status: BETA
    UpdateCustomerRequest:
      type: object
      properties:
        given_name:
          type: string
          description: The given (i.e., first) name associated with the customer profile.
        family_name:
          type: string
          description: The family (i.e., last) name associated with the customer profile.
        company_name:
          type: string
          description: A business name associated with the customer profile.
        nickname:
          type: string
          description: A nickname for the customer profile.
        email_address:
          type: string
          description: The email address associated with the customer profile.
        address:
          $ref: '#/components/schemas/Address'
        phone_number:
          type: string
          description: The 11-digit phone number associated with the customer profile.
        reference_id:
          type: string
          description: |-
            An optional, second ID used to associate the customer profile with an
            entity in another system.
        note:
          type: string
          description: A custom note associated with the customer profile.
        birthday:
          type: string
          description: |-
            The birthday associated with the customer profile, in RFC-3339 format.
            Year is optional, timezone and times are not allowed.
            For example: `0000-09-01T00:00:00-00:00` indicates a birthday on September 1st.
            `1998-09-01T00:00:00-00:00` indications a birthday on September 1st __1998__.
      description: |-
        Defines the body parameters that can be provided in a request to the
        UpdateCustomer endpoint.
      example:
        phone_number: ""
        email_address: New.Amelia.Earhart@example.com
        note: updated customer note
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/UpdateCustomer/UpdateCustomerRequest.python
        csharp: /sdk_samples/UpdateCustomer/UpdateCustomerRequest.csharp
        java: /sdk_samples/UpdateCustomer/UpdateCustomerRequest.java
        php: /sdk_samples/UpdateCustomer/UpdateCustomerRequest.php
        javascript: /sdk_samples/UpdateCustomer/UpdateCustomerRequest.javascript
        ruby: /sdk_samples/UpdateCustomer/UpdateCustomerRequest.ruby
    UpdateCustomerResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        customer:
          $ref: '#/components/schemas/Customer'
      description: |-
        Defines the fields that are included in the response body of
        a request to the UpdateCustomer endpoint.

        One of `errors` or `customer` is present in a given response (never both).
      example:
        customer:
          id: JDKYHBWT1D4F8MFH63DBMEN8Y4
          created_at: 2016-03-23T20:21:54.859Z
          updated_at: 2016-03-25T20:21:55Z
          given_name: Amelia
          family_name: Earhart
          email_address: New.Amelia.Earhart@example.com
          address:
            address_line_1: 500 Electric Ave
            address_line_2: Suite 600
            locality: New York
            administrative_district_level_1: NY
            postal_code: "10003"
            country: US
          reference_id: YOUR_REFERENCE_ID
          note: updated customer note
          groups:
          - id: 16894e93-96eb-4ced-b24b-f71d42bf084c
            name: Aviation Enthusiasts
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/UpdateCustomer/UpdateCustomerResponse.python
        csharp: /sdk_samples/UpdateCustomer/UpdateCustomerResponse.csharp
        java: /sdk_samples/UpdateCustomer/UpdateCustomerResponse.java
        php: /sdk_samples/UpdateCustomer/UpdateCustomerResponse.php
        javascript: /sdk_samples/UpdateCustomer/UpdateCustomerResponse.javascript
        ruby: /sdk_samples/UpdateCustomer/UpdateCustomerResponse.ruby
    UpdateInvoiceRequest:
      required:
      - invoice
      type: object
      properties:
        invoice:
          $ref: '#/components/schemas/Invoice'
        idempotency_key:
          maxLength: 128
          type: string
          description: |-
            A unique string that identifies the `UpdateInvoice` request. If you do not
            provide `idempotency_key` (or provide an empty string as the value), the endpoint
            treats each request as independent.

            For more information, see [Idempotency](https://developer.squareup.com/docs/docs/working-with-apis/idempotency).
        fields_to_clear:
          type: array
          description: |-
            List of fields to clear.
            For examples, see [Update an invoice](https://developer.squareup.com/docs/docs/invoices-api/overview#update-an-invoice).
          items:
            type: string
      description: Describes a `UpdateInvoice` request.
      example:
        idempotency_key: 4ee82288-0910-499e-ab4c-5d0071dad1be
        invoice:
          payment_requests:
          - uid: 2da7964f-f3d2-4f43-81e8-5aa220bf3355
            tipping_enabled: false
        fields_to_clear:
        - payments_requests[2da7964f-f3d2-4f43-81e8-5aa220bf3355].reminders
      x-release-status: BETA
    UpdateInvoiceResponse:
      type: object
      properties:
        invoice:
          $ref: '#/components/schemas/Invoice'
        errors:
          type: array
          description: Information about errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: Describes a `UpdateInvoice` response.
      example:
        invoice:
          id: gt2zv1z6mnUm1V7KMxxf3w
          version: 2
          location_id: ES0RJRZYEC39A
          order_id: CAISENgvlJ6jLWAzERDzjyHVybY
          payment_requests:
          - uid: 2da7964f-f3d2-4f43-81e8-5aa220bf3355
            request_method: EMAIL
            request_type: BALANCE
            due_date: 2030-01-24
            tipping_enabled: false
            reminders:
            - uid: beebd363-e47f-4075-8785-c235aaa7df11
              relative_scheduled_days: -1
              message: Your invoice is due tomorrow
              status: PENDING
            computed_amount_money:
              amount: 10000
              currency: USD
            total_completed_amount_money:
              amount: 0
              currency: USD
          invoice_number: inv-100
          title: Event Planning Services
          description: We appreciate your business!
          scheduled_at: 2030-01-13T10:00:00Z
          status: UNPAID
          timezone: America/Los_Angeles
          created_at: 2020-06-18T17:45:13Z
          updated_at: 2020-06-18T18:23:11Z
          primary_recipient:
            customer_id: JDKYHBWT1D4F8MFH63DBMEN8Y4
            given_name: Amelia
            family_name: Earhart
            email_address: Amelia.Earhart@example.com
            phone_number: 1-212-555-4240
          next_payment_amount_money:
            amount: 10000
            currency: USD
      x-release-status: BETA
    UpdateItemModifierListsRequest:
      required:
      - item_ids
      type: object
      properties:
        item_ids:
          type: array
          description: The IDs of the catalog items associated with the CatalogModifierList
            objects being updated.
          items:
            type: string
        modifier_lists_to_enable:
          type: array
          description: The IDs of the CatalogModifierList objects to enable for the
            CatalogItem.
          items:
            type: string
        modifier_lists_to_disable:
          type: array
          description: The IDs of the CatalogModifierList objects to disable for the
            CatalogItem.
          items:
            type: string
      example:
        item_ids:
        - H42BRLUJ5KTZTTMPVSLFAACQ
        - 2JXOBJIHCWBQ4NZ3RIXQGJA6
        modifier_lists_to_enable:
        - H42BRLUJ5KTZTTMPVSLFAACQ
        - 2JXOBJIHCWBQ4NZ3RIXQGJA6
        modifier_lists_to_disable:
        - 7WRC16CJZDVLSNDQ35PP6YAD
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsRequest.python
        csharp: /sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsRequest.csharp
        java: /sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsRequest.java
        php: /sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsRequest.php
        javascript: /sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsRequest.javascript
        ruby: /sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsRequest.ruby
    UpdateItemModifierListsResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on any errors encountered.
          items:
            $ref: '#/components/schemas/Error'
        updated_at:
          type: string
      example:
        updated_at: 2016-11-16T22:25:24.878Z
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsResponse.python
        csharp: /sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsResponse.csharp
        java: /sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsResponse.java
        php: /sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsResponse.php
        javascript: /sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsResponse.javascript
        ruby: /sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsResponse.ruby
    UpdateItemTaxesRequest:
      required:
      - item_ids
      type: object
      properties:
        item_ids:
          type: array
          description: IDs for the CatalogItems associated with the CatalogTax objects
            being updated.
          items:
            type: string
        taxes_to_enable:
          type: array
          description: IDs of the CatalogTax objects to enable.
          items:
            type: string
        taxes_to_disable:
          type: array
          description: IDs of the CatalogTax objects to disable.
          items:
            type: string
      example:
        item_ids:
        - H42BRLUJ5KTZTTMPVSLFAACQ
        - 2JXOBJIHCWBQ4NZ3RIXQGJA6
        taxes_to_enable:
        - 4WRCNHCJZDVLSNDQ35PP6YAD
        taxes_to_disable:
        - AQCEGCEBBQONINDOHRGZISEX
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesRequest.python
        csharp: /sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesRequest.csharp
        java: /sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesRequest.java
        php: /sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesRequest.php
        javascript: /sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesRequest.javascript
        ruby: /sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesRequest.ruby
    UpdateItemTaxesResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on any errors encountered.
          items:
            $ref: '#/components/schemas/Error'
        updated_at:
          type: string
          description: The database [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
            of this update in RFC 3339 format, e.g., `2016-09-04T23:59:33.123Z`.
      example:
        updated_at: 2016-11-16T22:25:24.878Z
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesResponse.python
        csharp: /sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesResponse.csharp
        java: /sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesResponse.java
        php: /sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesResponse.php
        javascript: /sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesResponse.javascript
        ruby: /sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesResponse.ruby
    UpdateLocationRequest:
      type: object
      properties:
        location:
          $ref: '#/components/schemas/Location'
      description: Request object for the [UpdateLocation](#endpoint-updatelocation)
        endpoint.
      example:
        location:
          name: Updated nickname
          description: Updated description
          facebook_url: null
          twitter_username: twitter
          instagram_username: instagram
          address:
            address_line_1: 1234 Peachtree St. NE
            administrative_district_level_1: GA
            locality: Atlanta
            postal_code: "30309"
          business_hours:
            periods:
            - day_of_week: MON
              start_local_time: 09:00
              end_local_time: 17:00
      x-release-status: BETA
    UpdateLocationResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
        location:
          $ref: '#/components/schemas/Location'
      description: Response object returned by the [UpdateLocation](#endpoint-updatelocation)
        endpoint.
      example:
        location:
          id: LOCATION_ID
          name: Updated nickname
          address:
            address_line_1: 1234 Peachtree St. NE
            locality: Atlanta
            administrative_district_level_1: GA
            postal_code: "30309"
          timezone: America/New_York
          capabilities:
          - CREDIT_CARD_PROCESSING
          status: ACTIVE
          created_at: 2019-07-19T17:58:25Z
          merchant_id: MERCHANT_ID
          country: US
          language_code: en-US
          currency: USD
          phone_number: "5559211234"
          business_name: Business Name
          type: MOBILE
          website_url: examplewebsite.com
          business_hours:
            periods:
            - day_of_week: MON
              start_local_time: 09:00
              end_local_time: 17:00
          business_email: example@squareup.com
          description: Updated description
          twitter_username: twitter
          instagram_username: instagram
          coordinates:
            latitude: 33.788567
            longitude: -84.466947
          mcc: "1234"
      x-release-status: BETA
    UpdateOrderRequest:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/Order'
        fields_to_clear:
          type: array
          description: |-
            The [dot notation paths](https://developer.squareup.com/docs/orders-api/manage-orders#on-dot-notation)
            fields to clear. For example, `line_items[uid].note`
            [Read more about Deleting fields](https://developer.squareup.com/docs/orders-api/manage-orders#delete-fields).
          items:
            type: string
        idempotency_key:
          maxLength: 192
          type: string
          description: |-
            A value you specify that uniquely identifies this update request

            If you're unsure whether a particular update was applied to an order successfully,
            you can reattempt it with the same idempotency key without
            worrying about creating duplicate updates to the order.
            The latest order version will be returned.

            See [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency) for more information.
      description: |-
        Defines the fields that are included in requests to the
        [UpdateOrder](#endpoint-orders-updateorder) endpoint.
      example:
        idempotency_key: UNIQUE_STRING
        order:
          version: 1
          line_items:
          - uid: cookie_uid
            quantity: "2"
            name: COOKIE
            base_price_money:
              amount: 200
              currency: USD
        fields_to_clear:
        - discounts
      x-release-status: BETA
    UpdateOrderResponse:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/Order'
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: |-
        Defines the fields that are included in the response body of
        a request to the [UpdateOrder](#endpoint-orders-updateorder) endpoint.
      example:
        order:
          version: 2
          total_money:
            currency: USD
            amount: 900
          source:
            name: Cookies
          line_items:
          - total_tax_money:
              currency: USD
              amount: 0
            total_money:
              amount: 500
              currency: USD
            gross_sales_money:
              amount: 500
              currency: USD
            base_price_money:
              amount: 500
              currency: USD
            quantity: "1"
            total_discount_money:
              currency: USD
              amount: 0
            name: Small Coffee
            uid: EuYkakhmu3ksHIds5Hiot
            variation_total_price_money:
              amount: 500
              currency: USD
          - total_money:
              amount: 400
              currency: USD
            gross_sales_money:
              currency: USD
              amount: 400
            total_tax_money:
              currency: USD
              amount: 0
            variation_total_price_money:
              currency: USD
              amount: 400
            name: COOKIE
            uid: cookie_uid
            base_price_money:
              amount: 200
              currency: USD
            quantity: "2"
            total_discount_money:
              amount: 0
              currency: USD
          state: OPEN
          total_service_charge_money:
            amount: 0
            currency: USD
          id: DREk7wJcyXNHqULq8JJ2iPAsluJZY
          location_id: MXVQSVNDGN3C8
          total_tax_money:
            amount: 0
            currency: USD
          created_at: 2019-08-23T18:26:18.243Z
          total_discount_money:
            amount: 0
            currency: USD
          net_amounts:
            service_charge_money:
              currency: USD
              amount: 0
            total_money:
              amount: 900
              currency: USD
            discount_money:
              currency: USD
              amount: 0
            tax_money:
              currency: USD
              amount: 0
          updated_at: 2019-08-23T18:33:47.523Z
      x-release-status: BETA
    UpdateShiftRequest:
      required:
      - shift
      type: object
      properties:
        shift:
          $ref: '#/components/schemas/Shift'
      description: A request to update a `Shift` object.
      example:
        shift:
          team_member_id: ormj0jJJZ5OZIzxrZYJI
          location_id: PAA1RJZZKXBFG
          start_at: 2019-01-25T03:11:00-05:00
          end_at: 2019-01-25T13:11:00-05:00
          wage:
            title: Bartender
            hourly_rate:
              amount: 1500
              currency: USD
          breaks:
          - id: X7GAQYVVRRG6P
            start_at: 2019-01-25T06:11:00-05:00
            end_at: 2019-01-25T06:16:00-05:00
            break_type_id: REGS1EQR1TPZ5
            name: Tea Break
            expected_duration: PT5M
            is_paid: true
          version: 1
      x-release-status: PUBLIC
    UpdateShiftResponse:
      type: object
      properties:
        shift:
          $ref: '#/components/schemas/Shift'
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: |-
        The response to a request to update a `Shift`. Contains
        the updated `Shift` object. May contain a set of `Error` objects if
        the request resulted in errors.
      example:
        shift:
          id: K0YH4CV5462JB
          team_member_id: ormj0jJJZ5OZIzxrZYJI
          employee_id: ormj0jJJZ5OZIzxrZYJI
          location_id: PAA1RJZZKXBFG
          timezone: America/New_York
          start_at: 2019-01-25T03:11:00-05:00
          end_at: 2019-01-25T13:11:00-05:00
          wage:
            title: Bartender
            hourly_rate:
              amount: 1500
              currency: USD
          breaks:
          - id: X7GAQYVVRRG6P
            start_at: 2019-01-25T06:11:00-05:00
            end_at: 2019-01-25T06:16:00-05:00
            break_type_id: REGS1EQR1TPZ5
            name: Tea Break
            expected_duration: PT5M
            is_paid: true
          status: CLOSED
          version: 2
          created_at: 2019-02-28T00:39:02Z
          updated_at: 2019-02-28T00:42:41Z
      x-release-status: PUBLIC
    UpdateSubscriptionRequest:
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/Subscription'
      description: "Defines parameters in a\n[UpdateSubscription](#endpoint-subscriptions-updatesubscription)\
        \ endpoint \nrequest."
      example:
        subscription:
          version: 1594155459464
          tax_percentage: null
          price_override_money:
            amount: 2000
            currency: USD
      x-release-status: BETA
    UpdateSubscriptionResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information about errors encountered during the request.
          items:
            $ref: '#/components/schemas/Error'
        subscription:
          $ref: '#/components/schemas/Subscription'
      description: |-
        Defines the fields that are included in the response from the
        [UpdateSubscription](#endpoint-subscriptions-updatesubscription) endpoint.
      example:
        subscription:
          id: 9ba40961-995a-4a3d-8c53-048c40cafc13
          location_id: S8GWD5R9QB376
          plan_id: 6JHXF3B2CW3YKHDV4XEM674H
          customer_id: CHFGVKYY8RSV93M5KCYTG4PN0G
          status: ACTIVE
          price_override_money:
            amount: 2000
            currency: USD
          version: 1594311617331
          created_at: 2020-08-03T21:53:10Z
          timezone: America/Los_Angeles
      x-release-status: BETA
    UpdateTeamMemberRequest:
      type: object
      properties:
        team_member:
          $ref: '#/components/schemas/TeamMember'
      description: Represents an update request for a `TeamMember` object.
      example:
        team_member:
          reference_id: reference_id_1
          status: ACTIVE
          given_name: Joe
          family_name: Doe
          email_address: joe_doe@gmail.com
          phone_number: +14159283333
          assigned_locations:
            location_ids:
            - YSGH2WBKG94QZ
            - GA2Y9HSJ8KRYT
            assignment_type: EXPLICIT_LOCATIONS
      x-release-status: PUBLIC
    UpdateTeamMemberResponse:
      type: object
      properties:
        team_member:
          $ref: '#/components/schemas/TeamMember'
        errors:
          type: array
          description: The errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: Represents a response from an update request, containing the updated
        `TeamMember` object or error messages.
      example:
        team_member:
          id: 1yJlHapkseYnNPETIU1B
          reference_id: reference_id_1
          is_owner: false
          status: ACTIVE
          given_name: Joe
          family_name: Doe
          email_address: joe_doe@gmail.com
          phone_number: +14159283333
          created_at: 2020-06-11T22:55:45.867Z
          assigned_locations:
            assignment_type: EXPLICIT_LOCATIONS
            location_ids:
            - GA2Y9HSJ8KRYT
            - YSGH2WBKG94QZ
      x-release-status: PUBLIC
    UpdateWageSettingRequest:
      required:
      - wage_setting
      type: object
      properties:
        wage_setting:
          $ref: '#/components/schemas/WageSetting'
      description: Represents an update request for the `WageSetting` object describing
        a `TeamMember`.
      example:
        wage_setting:
          is_overtime_exempt: true
          job_assignments:
          - job_title: Manager
            pay_type: SALARY
            annual_rate:
              amount: 3000000
              currency: USD
            weekly_hours: 40
          - job_title: Cashier
            pay_type: HOURLY
            hourly_rate:
              amount: 1200
              currency: USD
      x-release-status: PUBLIC
    UpdateWageSettingResponse:
      type: object
      properties:
        wage_setting:
          $ref: '#/components/schemas/WageSetting'
        errors:
          type: array
          description: The errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: |-
        Represents a response from an update request, containing the updated `WageSetting` object
        or error messages.
      example:
        wage_setting:
          team_member_id: -3oZQKPKVk6gUXU_V5Qa
          job_assignments:
          - job_title: Manager
            pay_type: SALARY
            hourly_rate:
              amount: 1443
              currency: USD
            annual_rate:
              amount: 3000000
              currency: USD
            weekly_hours: 40
          - job_title: Cashier
            pay_type: HOURLY
            hourly_rate:
              amount: 1200
              currency: USD
          is_overtime_exempt: true
          version: 1
          created_at: 2019-07-10T17:26:48+00:00
          updated_at: 2020-06-11T23:12:04+00:00
      x-release-status: PUBLIC
    UpdateWorkweekConfigRequest:
      required:
      - workweek_config
      type: object
      properties:
        workweek_config:
          $ref: '#/components/schemas/WorkweekConfig'
      description: A request to update a `WorkweekConfig` object
      example:
        workweek_config:
          start_of_week: MON
          start_of_day_local_time: 10:00
          version: 10
      x-release-status: PUBLIC
    UpdateWorkweekConfigResponse:
      type: object
      properties:
        workweek_config:
          $ref: '#/components/schemas/WorkweekConfig'
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: |-
        The response to a request to update a `WorkweekConfig` object. Contains
        the updated `WorkweekConfig` object. May contain a set of `Error` objects if
        the request resulted in errors.
      example:
        workweek_config:
          id: FY4VCAQN700GM
          start_of_week: MON
          start_of_day_local_time: 10:00
          version: 11
          created_at: 2016-02-04T00:58:24Z
          updated_at: 2019-02-28T01:04:35Z
      x-release-status: PUBLIC
    UpsertCatalogObjectRequest:
      required:
      - idempotency_key
      - object
      type: object
      properties:
        idempotency_key:
          minLength: 1
          type: string
          description: |-
            A value you specify that uniquely identifies this
            request among all your requests. A common way to create
            a valid idempotency key is to use a Universally unique
            identifier (UUID).

            If you're unsure whether a particular request was successful,
            you can reattempt it with the same idempotency key without
            worrying about creating duplicate objects.

            See [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency) for more information.
        object:
          $ref: '#/components/schemas/CatalogObject'
      example:
        idempotency_key: af3d1afc-7212-4300-b463-0bfc5314a5ae
        object:
          type: ITEM
          id: '#Cocoa'
          item_data:
            name: Cocoa
            description: Hot chocolate
            abbreviation: Ch
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectRequest.python
        csharp: /sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectRequest.csharp
        java: /sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectRequest.java
        php: /sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectRequest.php
        javascript: /sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectRequest.javascript
        ruby: /sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectRequest.ruby
    UpsertCatalogObjectResponse:
      type: object
      properties:
        errors:
          type: array
          description: Information on any errors encountered.
          items:
            $ref: '#/components/schemas/Error'
        catalog_object:
          $ref: '#/components/schemas/CatalogObject'
        id_mappings:
          type: array
          description: The mapping between client and server IDs for this upsert.
          items:
            $ref: '#/components/schemas/CatalogIdMapping'
      example:
        catalog_object:
          type: ITEM
          id: 7SB3ZQYJ5GDMVFL7JK46JCHT
          updated_at: 2016-11-16T22:32:42.996Z
          version: 1479335562996
          is_deleted: false
          item_data:
            name: Cocoa
            description: Hot chocolate
            abbreviation: Ch
        id_mappings:
        - client_object_id: '#Cocoa'
          object_id: 7SB3ZQYJ5GDMVFL7JK46JCHT
      x-release-status: PUBLIC
      x-sq-sdk-sample-code:
        python: /sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectResponse.python
        csharp: /sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectResponse.csharp
        java: /sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectResponse.java
        php: /sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectResponse.php
        javascript: /sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectResponse.javascript
        ruby: /sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectResponse.ruby
    V1AdjustInventoryRequest:
      type: object
      properties:
        quantity_delta:
          type: number
          description: The number to adjust the variation's quantity by.
        adjustment_type:
          $ref: '#/components/schemas/V1AdjustInventoryRequestAdjustmentType'
        memo:
          type: string
          description: A note about the inventory adjustment.
      description: V1AdjustInventoryRequest
      x-release-status: DEPRECATED
    V1ApplyFeeRequest:
      type: object
      properties: {}
      x-release-status: DEPRECATED
    V1ApplyModifierListRequest:
      type: object
      properties: {}
      x-release-status: DEPRECATED
    V1BankAccount:
      type: object
      properties:
        id:
          type: string
          description: The bank account's Square-issued ID.
        merchant_id:
          type: string
          description: The Square-issued ID of the merchant associated with the bank
            account.
        bank_name:
          type: string
          description: The name of the bank that manages the account.
        name:
          type: string
          description: The name associated with the bank account.
        routing_number:
          type: string
          description: The bank account's routing number.
        account_number_suffix:
          type: string
          description: The last few digits of the bank account number.
        currency_code:
          type: string
          description: The currency code of the currency associated with the bank
            account, in ISO 4217 format. For example, the currency code for US dollars
            is USD.
        type:
          $ref: '#/components/schemas/V1BankAccountType'
      description: V1BankAccount
      example:
        bank_name: bank_name
        name: name
        id: id
        merchant_id: merchant_id
        routing_number: routing_number
        type: BUSINESS_CHECKING
        account_number_suffix: account_number_suffix
        currency_code: currency_code
      x-release-status: DEPRECATED
    V1CashDrawerEvent:
      type: object
      properties:
        id:
          type: string
          description: The event's unique ID.
        employee_id:
          type: string
          description: The ID of the employee that created the event.
        event_type:
          $ref: '#/components/schemas/V1CashDrawerEventEventType'
        event_money:
          $ref: '#/components/schemas/V1Money'
        created_at:
          type: string
          description: The time when the event occurred, in ISO 8601 format.
        description:
          type: string
          description: An optional description of the event, entered by the employee
            that created it.
      description: V1CashDrawerEvent
      example:
        event_money: null
        event_type: NO_SALE
        employee_id: employee_id
        created_at: created_at
        description: description
        id: id
      x-release-status: DEPRECATED
    V1CashDrawerShift:
      type: object
      properties:
        id:
          type: string
          description: The shift's unique ID.
        event_type:
          $ref: '#/components/schemas/V1CashDrawerShiftEventType'
        opened_at:
          type: string
          description: The time when the shift began, in ISO 8601 format.
        ended_at:
          type: string
          description: The time when the shift ended, in ISO 8601 format.
        closed_at:
          type: string
          description: The time when the shift was closed, in ISO 8601 format.
        employee_ids:
          type: array
          description: The IDs of all employees that were logged into Square Register
            at some point during the cash drawer shift.
          items:
            type: string
        opening_employee_id:
          type: string
          description: The ID of the employee that started the cash drawer shift.
        ending_employee_id:
          type: string
          description: The ID of the employee that ended the cash drawer shift.
        closing_employee_id:
          type: string
          description: The ID of the employee that closed the cash drawer shift by
            auditing the cash drawer's contents.
        description:
          type: string
          description: A description of the cash drawer shift.
        starting_cash_money:
          $ref: '#/components/schemas/V1Money'
        cash_payment_money:
          $ref: '#/components/schemas/V1Money'
        cash_refunds_money:
          $ref: '#/components/schemas/V1Money'
        cash_paid_in_money:
          $ref: '#/components/schemas/V1Money'
        cash_paid_out_money:
          $ref: '#/components/schemas/V1Money'
        expected_cash_money:
          $ref: '#/components/schemas/V1Money'
        closed_cash_money:
          $ref: '#/components/schemas/V1Money'
        device:
          $ref: '#/components/schemas/Device'
        events:
          type: array
          description: All of the events (payments, refunds, and so on) that involved
            the cash drawer during the shift.
          items:
            $ref: '#/components/schemas/V1CashDrawerEvent'
      description: Contains details for a single cash drawer shift.
      example:
        starting_cash_money:
          amount: 0
          currency_code: UNKNOWN_CURRENCY
        expected_cash_money: null
        closed_at: closed_at
        ending_employee_id: ending_employee_id
        employee_ids:
        - employee_ids
        - employee_ids
        cash_refunds_money: null
        description: description
        closing_employee_id: closing_employee_id
        cash_paid_out_money: null
        closed_cash_money: null
        cash_paid_in_money: null
        opened_at: opened_at
        event_type: OPEN
        opening_employee_id: opening_employee_id
        cash_payment_money: null
        id: id
        device:
          name: name
          id: id
        ended_at: ended_at
        events:
        - event_money: null
          event_type: NO_SALE
          employee_id: employee_id
          created_at: created_at
          description: description
          id: id
        - event_money: null
          event_type: NO_SALE
          employee_id: employee_id
          created_at: created_at
          description: description
          id: id
      x-release-status: DEPRECATED
    V1Category:
      type: object
      properties:
        id:
          type: string
          description: The category's unique ID.
        name:
          type: string
          description: The category's name.
        v2_id:
          type: string
          description: The ID of the CatalogObject in the Connect v2 API. Objects
            that are shared across multiple locations share the same v2 ID.
      description: V1Category
      example:
        name: name
        v2_id: v2_id
        id: id
      x-release-status: DEPRECATED
    V1CreateCategoryRequest:
      type: object
      properties:
        body:
          $ref: '#/components/schemas/V1Category'
      x-release-status: DEPRECATED
    V1CreateDiscountRequest:
      type: object
      properties:
        body:
          $ref: '#/components/schemas/V1Discount'
      x-release-status: DEPRECATED
    V1CreateEmployeeRoleRequest:
      type: object
      properties:
        employee_role:
          $ref: '#/components/schemas/V1EmployeeRole'
      x-release-status: PUBLIC
    V1CreateFeeRequest:
      type: object
      properties:
        body:
          $ref: '#/components/schemas/V1Fee'
      x-release-status: DEPRECATED
    V1CreateItemRequest:
      type: object
      properties:
        body:
          $ref: '#/components/schemas/V1Item'
      x-release-status: DEPRECATED
    V1CreateModifierListRequest:
      type: object
      properties:
        body:
          $ref: '#/components/schemas/V1ModifierList'
      x-release-status: DEPRECATED
    V1CreateModifierOptionRequest:
      type: object
      properties:
        body:
          $ref: '#/components/schemas/V1ModifierOption'
      x-release-status: DEPRECATED
    V1CreatePageRequest:
      type: object
      properties:
        body:
          $ref: '#/components/schemas/V1Page'
      x-release-status: DEPRECATED
    V1CreateRefundRequest:
      required:
      - payment_id
      - reason
      - type
      type: object
      properties:
        payment_id:
          type: string
          description: |-
            The ID of the payment to refund. If you are creating a `PARTIAL`
            refund for a split tender payment, instead provide the id of the
            particular tender you want to refund.
        type:
          $ref: '#/components/schemas/V1CreateRefundRequestType'
        reason:
          type: string
          description: The reason for the refund.
        refunded_money:
          $ref: '#/components/schemas/V1Money'
        request_idempotence_key:
          type: string
          description: An optional key to ensure idempotence if you issue the same
            PARTIAL refund request more than once.
      description: V1CreateRefundRequest
      x-release-status: PUBLIC
    V1CreateVariationRequest:
      type: object
      properties:
        body:
          $ref: '#/components/schemas/V1Variation'
      x-release-status: DEPRECATED
    V1DeleteCategoryRequest:
      type: object
      properties: {}
      x-release-status: DEPRECATED
    V1DeleteDiscountRequest:
      type: object
      properties: {}
      x-release-status: DEPRECATED
    V1DeleteFeeRequest:
      type: object
      properties: {}
      x-release-status: DEPRECATED
    V1DeleteItemRequest:
      type: object
      properties: {}
      x-release-status: DEPRECATED
    V1DeleteModifierListRequest:
      type: object
      properties: {}
      x-release-status: DEPRECATED
    V1DeleteModifierOptionRequest:
      type: object
      properties: {}
      x-release-status: DEPRECATED
    V1DeletePageCellRequest:
      type: object
      properties:
        row:
          type: string
          description: The row of the cell to clear. Always an integer between 0 and
            4, inclusive. Row 0 is the top row.
        column:
          type: string
          description: The column of the cell to clear. Always an integer between
            0 and 4, inclusive. Column 0 is the leftmost column.
      x-release-status: DEPRECATED
    V1DeletePageRequest:
      type: object
      properties: {}
      x-release-status: DEPRECATED
    V1DeleteTimecardRequest:
      type: object
      properties: {}
      x-release-status: DEPRECATED
    V1DeleteTimecardResponse:
      type: object
      properties: {}
      x-release-status: DEPRECATED
    V1DeleteVariationRequest:
      type: object
      properties: {}
      x-release-status: DEPRECATED
    V1Discount:
      type: object
      properties:
        id:
          type: string
          description: The discount's unique ID.
        name:
          type: string
          description: The discount's name.
        rate:
          type: string
          description: The rate of the discount, as a string representation of a decimal
            number. A value of 0.07 corresponds to a rate of 7%. This rate is 0 if
            discount_type is VARIABLE_PERCENTAGE.
        amount_money:
          $ref: '#/components/schemas/V1Money'
        discount_type:
          $ref: '#/components/schemas/V1DiscountDiscountType'
        pin_required:
          type: boolean
          description: Indicates whether a mobile staff member needs to enter their
            PIN to apply the discount to a payment.
        color:
          $ref: '#/components/schemas/V1DiscountColor'
        v2_id:
          type: string
          description: The ID of the CatalogObject in the Connect v2 API. Objects
            that are shared across multiple locations share the same v2 ID.
      description: V1Discount
      example:
        pin_required: true
        color: 9da2a6
        rate: rate
        name: name
        v2_id: v2_id
        amount_money:
          amount: 0
          currency_code: UNKNOWN_CURRENCY
        id: id
        discount_type: FIXED
      x-release-status: DEPRECATED
    V1Employee:
      required:
      - first_name
      - last_name
      type: object
      properties:
        id:
          type: string
          description: The employee's unique ID.
        first_name:
          type: string
          description: The employee's first name.
        last_name:
          type: string
          description: The employee's last name.
        role_ids:
          type: array
          description: The ids of the employee's associated roles. Currently, you
            can specify only one or zero roles per employee.
          items:
            type: string
        authorized_location_ids:
          type: array
          description: The IDs of the locations the employee is allowed to clock in
            at.
          items:
            type: string
        email:
          type: string
          description: The employee's email address.
        status:
          $ref: '#/components/schemas/V1EmployeeStatus'
        external_id:
          type: string
          description: An ID the merchant can set to associate the employee with an
            entity in another system.
        created_at:
          type: string
          description: The time when the employee entity was created, in ISO 8601
            format.
        updated_at:
          type: string
          description: The time when the employee entity was most recently updated,
            in ISO 8601 format.
      description: Represents one of a business's employees.
      example:
        updated_at: updated_at
        last_name: last_name
        created_at: created_at
        external_id: external_id
        id: id
        first_name: first_name
        role_ids:
        - role_ids
        - role_ids
        email: email
        authorized_location_ids:
        - authorized_location_ids
        - authorized_location_ids
        status: ACTIVE
      x-release-status: PUBLIC
    V1EmployeeRole:
      required:
      - name
      - permissions
      type: object
      properties:
        id:
          type: string
          description: The role's unique ID, Can only be set by Square.
        name:
          type: string
          description: The role's merchant-defined name.
        permissions:
          type: array
          description: |-
            The role's permissions.
            See [V1EmployeeRolePermissions](#type-v1employeerolepermissions) for possible values
          items:
            $ref: '#/components/schemas/V1EmployeeRolePermissions'
        is_owner:
          type: boolean
          description: If true, employees with this role have all permissions, regardless
            of the values indicated in permissions.
        created_at:
          type: string
          description: The time when the employee entity was created, in ISO 8601
            format. Is set by Square when the Role is created.
        updated_at:
          type: string
          description: The time when the employee entity was most recently updated,
            in ISO 8601 format. Is set by Square when the Role updated.
      description: V1EmployeeRole
      example:
        updated_at: updated_at
        permissions:
        - REGISTER_ACCESS_SALES_HISTORY
        - REGISTER_ACCESS_SALES_HISTORY
        is_owner: true
        name: name
        created_at: created_at
        id: id
      x-release-status: PUBLIC
    V1Fee:
      type: object
      properties:
        id:
          type: string
          description: The fee's unique ID.
        name:
          type: string
          description: The fee's name.
        rate:
          type: string
          description: The rate of the fee, as a string representation of a decimal
            number. A value of 0.07 corresponds to a rate of 7%.
        calculation_phase:
          $ref: '#/components/schemas/V1FeeCalculationPhase'
        adjustment_type:
          $ref: '#/components/schemas/V1FeeAdjustmentType'
        applies_to_custom_amounts:
          type: boolean
          description: If true, the fee applies to custom amounts entered into Square
            Point of Sale that are not associated with a particular item.
        enabled:
          type: boolean
          description: If true, the fee is applied to all appropriate items. If false,
            the fee is not applied at all.
        inclusion_type:
          $ref: '#/components/schemas/V1FeeInclusionType'
        type:
          $ref: '#/components/schemas/V1FeeType'
        v2_id:
          type: string
          description: The ID of the CatalogObject in the Connect v2 API. Objects
            that are shared across multiple locations share the same v2 ID.
      description: V1Fee
      example:
        calculation_phase: FEE_SUBTOTAL_PHASE
        rate: rate
        name: name
        adjustment_type: TAX
        v2_id: v2_id
        id: id
        inclusion_type: ADDITIVE
        type: CA_GST
        applies_to_custom_amounts: true
        enabled: true
      x-release-status: DEPRECATED
    V1InventoryEntry:
      type: object
      properties:
        variation_id:
          type: string
          description: The variation that the entry corresponds to.
        quantity_on_hand:
          type: number
          description: The current available quantity of the item variation.
      description: V1InventoryEntry
      example:
        variation_id: variation_id
        quantity_on_hand: 0.8008281904610115
      x-release-status: DEPRECATED
    V1InventoryUpdatedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        location_id:
          type: string
          description: The ID of the target merchant associated with the event.
        event_type:
          type: string
          description: The type of event this represents, i.e. `INVENTORY_UPDATED`.
        entity_id:
          type: string
          description: The ID of the V1 Item whose inventory was updated.
      description: Published when the inventory quantity for a catalog item is updated.
      example:
        merchant_id: 18YC4JBH91E1H
        location_id: JGHJ0343
        event_type: INVENTORY_UPDATED
        entity_id: Jq74mCczmFXk1tC10GB
      x-release-status: DEPRECATED
      x-visibility: DOC_ONLY
      x-webhook:
        event: INVENTORY_UPDATED
        scopes:
        - ITEMS_READ
      x-api: '#/components/x-apis/Inventory'
    V1Item:
      type: object
      properties:
        id:
          type: string
          description: The item's ID. Must be unique among all entity IDs ever provided
            on behalf of the merchant. You can never reuse an ID. This value can include
            alphanumeric characters, dashes (-), and underscores (_).
        name:
          type: string
          description: The item's name.
        description:
          type: string
          description: The item's description.
        type:
          $ref: '#/components/schemas/V1ItemType'
        color:
          $ref: '#/components/schemas/V1ItemColor'
        abbreviation:
          type: string
          description: The text of the item's display label in Square Point of Sale.
            Only up to the first five characters of the string are used.
        visibility:
          $ref: '#/components/schemas/V1ItemVisibility'
        available_online:
          type: boolean
          description: If true, the item can be added to shipping orders from the
            merchant's online store.
        master_image:
          $ref: '#/components/schemas/V1ItemImage'
        category:
          $ref: '#/components/schemas/V1Category'
        variations:
          type: array
          description: The item's variations. You must specify at least one variation.
          items:
            $ref: '#/components/schemas/V1Variation'
        modifier_lists:
          type: array
          description: The modifier lists that apply to the item, if any.
          items:
            $ref: '#/components/schemas/V1ModifierList'
        fees:
          type: array
          description: The fees that apply to the item, if any.
          items:
            $ref: '#/components/schemas/V1Fee'
        taxable:
          type: boolean
          description: Deprecated. This field is not used.
        category_id:
          type: string
          description: The ID of the item's category, if any.
        available_for_pickup:
          type: boolean
          description: 'If true, the item can be added to pickup orders from the merchant''s
            online store. Default value: false'
        v2_id:
          type: string
          description: The ID of the CatalogObject in the Connect v2 API. Objects
            that are shared across multiple locations share the same v2 ID.
      description: V1Item
      example:
        master_image:
          id: id
          url: url
        fees:
        - calculation_phase: FEE_SUBTOTAL_PHASE
          rate: rate
          name: name
          adjustment_type: TAX
          v2_id: v2_id
          id: id
          inclusion_type: ADDITIVE
          type: CA_GST
          applies_to_custom_amounts: true
          enabled: true
        - calculation_phase: FEE_SUBTOTAL_PHASE
          rate: rate
          name: name
          adjustment_type: TAX
          v2_id: v2_id
          id: id
          inclusion_type: ADDITIVE
          type: CA_GST
          applies_to_custom_amounts: true
          enabled: true
        color: 9da2a6
        visibility: PUBLIC
        taxable: true
        description: description
        v2_id: v2_id
        type: NORMAL
        abbreviation: abbreviation
        modifier_lists:
        - selection_type: SINGLE
          name: name
          v2_id: v2_id
          id: id
          modifier_options:
          - price_money: null
            on_by_default: true
            name: name
            v2_id: v2_id
            id: id
            modifier_list_id: modifier_list_id
            ordinal: 1
          - price_money: null
            on_by_default: true
            name: name
            v2_id: v2_id
            id: id
            modifier_list_id: modifier_list_id
            ordinal: 1
        - selection_type: SINGLE
          name: name
          v2_id: v2_id
          id: id
          modifier_options:
          - price_money: null
            on_by_default: true
            name: name
            v2_id: v2_id
            id: id
            modifier_list_id: modifier_list_id
            ordinal: 1
          - price_money: null
            on_by_default: true
            name: name
            v2_id: v2_id
            id: id
            modifier_list_id: modifier_list_id
            ordinal: 1
        category_id: category_id
        variations:
        - pricing_type: FIXED_PRICING
          price_money:
            amount: 0
            currency_code: UNKNOWN_CURRENCY
          item_id: item_id
          inventory_alert_threshold: 6
          name: name
          track_inventory: true
          v2_id: v2_id
          id: id
          user_data: user_data
          sku: sku
          ordinal: 0
          inventory_alert_type: LOW_QUANTITY
        - pricing_type: FIXED_PRICING
          price_money:
            amount: 0
            currency_code: UNKNOWN_CURRENCY
          item_id: item_id
          inventory_alert_threshold: 6
          name: name
          track_inventory: true
          v2_id: v2_id
          id: id
          user_data: user_data
          sku: sku
          ordinal: 0
          inventory_alert_type: LOW_QUANTITY
        name: name
        id: id
        category:
          name: name
          v2_id: v2_id
          id: id
        available_online: true
        available_for_pickup: true
      x-release-status: DEPRECATED
    V1ItemImage:
      type: object
      properties:
        id:
          type: string
          description: The image's unique ID.
        url:
          type: string
          description: The image's publicly accessible URL.
      description: V1ItemImage
      example:
        id: id
        url: url
      x-release-status: DEPRECATED
    V1ListBankAccountsRequest:
      type: object
      properties: {}
      x-release-status: DEPRECATED
    V1ListBankAccountsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/V1BankAccount'
      x-release-status: DEPRECATED
    V1ListCashDrawerShiftsRequest:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/SortOrder'
        begin_time:
          type: string
          description: 'The beginning of the requested reporting period, in ISO 8601
            format. Default value: The current time minus 90 days.'
        end_time:
          type: string
          description: 'The beginning of the requested reporting period, in ISO 8601
            format. Default value: The current time.'
      x-release-status: DEPRECATED
    V1ListCashDrawerShiftsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/V1CashDrawerShift'
      x-release-status: DEPRECATED
    V1ListCategoriesRequest:
      type: object
      properties: {}
      x-release-status: DEPRECATED
    V1ListCategoriesResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/V1Category'
      x-release-status: DEPRECATED
    V1ListDiscountsRequest:
      type: object
      properties: {}
      x-release-status: DEPRECATED
    V1ListDiscountsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/V1Discount'
      x-release-status: DEPRECATED
    V1ListEmployeeRolesRequest:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/SortOrder'
        limit:
          type: integer
          description: The maximum integer number of employee entities to return in
            a single response. Default 100, maximum 200.
        batch_token:
          type: string
          description: |-
            A pagination cursor to retrieve the next set of results for your
            original query to the endpoint.
      x-release-status: PUBLIC
    V1ListEmployeeRolesResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/V1EmployeeRole'
      x-release-status: PUBLIC
    V1ListEmployeesRequest:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/SortOrder'
        begin_updated_at:
          type: string
          description: If filtering results by their updated_at field, the beginning
            of the requested reporting period, in ISO 8601 format
        end_updated_at:
          type: string
          description: If filtering results by there updated_at field, the end of
            the requested reporting period, in ISO 8601 format.
        begin_created_at:
          type: string
          description: If filtering results by their created_at field, the beginning
            of the requested reporting period, in ISO 8601 format.
        end_created_at:
          type: string
          description: If filtering results by their created_at field, the end of
            the requested reporting period, in ISO 8601 format.
        status:
          $ref: '#/components/schemas/V1ListEmployeesRequestStatus'
        external_id:
          type: string
          description: If provided, the endpoint returns only employee entities with
            the specified external_id.
        limit:
          type: integer
          description: The maximum integer number of employee entities to return in
            a single response. Default 100, maximum 200.
        batch_token:
          type: string
          description: |-
            A pagination cursor to retrieve the next set of results for your
            original query to the endpoint.
      x-release-status: PUBLIC
    V1ListEmployeesResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/V1Employee'
      x-release-status: PUBLIC
    V1ListFeesRequest:
      type: object
      properties: {}
      x-release-status: DEPRECATED
    V1ListFeesResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/V1Fee'
      x-release-status: DEPRECATED
    V1ListInventoryRequest:
      type: object
      properties:
        limit:
          type: integer
          description: The maximum number of inventory entries to return in a single
            response. This value cannot exceed 1000.
        batch_token:
          type: string
          description: |-
            A pagination cursor to retrieve the next set of results for your
            original query to the endpoint.
      x-release-status: DEPRECATED
    V1ListInventoryResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/V1InventoryEntry'
      x-release-status: DEPRECATED
    V1ListItemsRequest:
      type: object
      properties:
        batch_token:
          type: string
          description: |-
            A pagination cursor to retrieve the next set of results for your
            original query to the endpoint.
      x-release-status: DEPRECATED
    V1ListItemsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/V1Item'
      x-release-status: DEPRECATED
    V1ListLocationsRequest:
      type: object
      properties: {}
      x-release-status: DEPRECATED
    V1ListLocationsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/V1Merchant'
      x-release-status: DEPRECATED
    V1ListModifierListsRequest:
      type: object
      properties: {}
      x-release-status: DEPRECATED
    V1ListModifierListsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/V1ModifierList'
      x-release-status: DEPRECATED
    V1ListPagesRequest:
      type: object
      properties: {}
      x-release-status: DEPRECATED
    V1ListPagesResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/V1Page'
      x-release-status: DEPRECATED
    V1ListPaymentsRequest:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/SortOrder'
        begin_time:
          type: string
          description: 'The beginning of the requested reporting period, in ISO 8601
            format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z),
            this endpoint returns an error. Default value: The current time minus
            one year.'
        end_time:
          type: string
          description: 'The end of the requested reporting period, in ISO 8601 format.
            If this value is more than one year greater than begin_time, this endpoint
            returns an error. Default value: The current time.'
        limit:
          type: integer
          description: The maximum number of payments to return in a single response.
            This value cannot exceed 200.
        batch_token:
          type: string
          description: |-
            A pagination cursor to retrieve the next set of results for your
            original query to the endpoint.
        include_partial:
          type: boolean
          description: Indicates whether or not to include partial payments in the
            response. Partial payments will have the tenders collected so far, but
            the itemizations will be empty until the payment is completed.
      x-release-status: PUBLIC
    V1ListPaymentsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/V1Payment'
      x-release-status: PUBLIC
    V1ListRefundsRequest:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/SortOrder'
        begin_time:
          type: string
          description: 'The beginning of the requested reporting period, in ISO 8601
            format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z),
            this endpoint returns an error. Default value: The current time minus
            one year.'
        end_time:
          type: string
          description: 'The end of the requested reporting period, in ISO 8601 format.
            If this value is more than one year greater than begin_time, this endpoint
            returns an error. Default value: The current time.'
        limit:
          type: integer
          description: 'The approximate number of refunds to return in a single response.
            Default: 100. Max: 200. Response may contain more results than the prescribed
            limit when refunds are made simultaneously to multiple tenders in a payment
            or when refunds are generated in an exchange to account for the value
            of returned goods.'
        batch_token:
          type: string
          description: |-
            A pagination cursor to retrieve the next set of results for your
            original query to the endpoint.
      x-release-status: PUBLIC
    V1ListRefundsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/V1Refund'
      x-release-status: PUBLIC
    V1ListSettlementsRequest:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/SortOrder'
        begin_time:
          type: string
          description: 'The beginning of the requested reporting period, in ISO 8601
            format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z),
            this endpoint returns an error. Default value: The current time minus
            one year.'
        end_time:
          type: string
          description: 'The end of the requested reporting period, in ISO 8601 format.
            If this value is more than one year greater than begin_time, this endpoint
            returns an error. Default value: The current time.'
        limit:
          type: integer
          description: The maximum number of settlements to return in a single response.
            This value cannot exceed 200.
        status:
          $ref: '#/components/schemas/V1ListSettlementsRequestStatus'
        batch_token:
          type: string
          description: |-
            A pagination cursor to retrieve the next set of results for your
            original query to the endpoint.
      x-release-status: PUBLIC
    V1ListSettlementsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/V1Settlement'
      x-release-status: PUBLIC
    V1ListTimecardEventsRequest:
      type: object
      properties: {}
      x-release-status: DEPRECATED
    V1ListTimecardEventsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/V1TimecardEvent'
      x-release-status: DEPRECATED
    V1ListTimecardsRequest:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/SortOrder'
        employee_id:
          type: string
          description: If provided, the endpoint returns only timecards for the employee
            with the specified ID.
        begin_clockin_time:
          type: string
          description: If filtering results by their clockin_time field, the beginning
            of the requested reporting period, in ISO 8601 format.
        end_clockin_time:
          type: string
          description: If filtering results by their clockin_time field, the end of
            the requested reporting period, in ISO 8601 format.
        begin_clockout_time:
          type: string
          description: If filtering results by their clockout_time field, the beginning
            of the requested reporting period, in ISO 8601 format.
        end_clockout_time:
          type: string
          description: If filtering results by their clockout_time field, the end
            of the requested reporting period, in ISO 8601 format.
        begin_updated_at:
          type: string
          description: If filtering results by their updated_at field, the beginning
            of the requested reporting period, in ISO 8601 format.
        end_updated_at:
          type: string
          description: If filtering results by their updated_at field, the end of
            the requested reporting period, in ISO 8601 format.
        deleted:
          type: boolean
          description: If true, only deleted timecards are returned. If false, only
            valid timecards are returned.If you don't provide this parameter, both
            valid and deleted timecards are returned.
        limit:
          type: integer
          description: The maximum integer number of employee entities to return in
            a single response. Default 100, maximum 200.
        batch_token:
          type: string
          description: |-
            A pagination cursor to retrieve the next set of results for your
            original query to the endpoint.
      x-release-status: DEPRECATED
    V1ListTimecardsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/V1Timecard'
      x-release-status: DEPRECATED
    V1ListWebhooksRequest:
      type: object
      properties: {}
      description: V1ListWebhooksRequest
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    V1ListWebhooksResponse:
      type: object
      properties:
        events:
          type: array
          description: |-
            A list of webhook event enums.
            See [V1WebhooksEvents](#type-v1webhooksevents) for possible values
          items:
            $ref: '#/components/schemas/V1WebhooksEvents'
      description: V1ListWebhooksResponse
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    V1Merchant:
      type: object
      properties:
        id:
          type: string
          description: The merchant account's unique identifier.
        name:
          type: string
          description: The name associated with the merchant account.
        email:
          type: string
          description: The email address associated with the merchant account.
        account_type:
          $ref: '#/components/schemas/V1MerchantAccountType'
        account_capabilities:
          type: array
          description: Capabilities that are enabled for the merchant's Square account.
            Capabilities that are not listed in this array are not enabled for the
            account.
          items:
            type: string
        country_code:
          type: string
          description: The country associated with the merchant account, in ISO 3166-1-alpha-2
            format.
        language_code:
          type: string
          description: The language associated with the merchant account, in BCP 47
            format.
        currency_code:
          type: string
          description: The currency associated with the merchant account, in ISO 4217
            format. For example, the currency code for US dollars is USD.
        business_name:
          type: string
          description: The name of the merchant's business.
        business_address:
          $ref: '#/components/schemas/Address'
        business_phone:
          $ref: '#/components/schemas/V1PhoneNumber'
        business_type:
          $ref: '#/components/schemas/V1MerchantBusinessType'
        shipping_address:
          $ref: '#/components/schemas/Address'
        location_details:
          $ref: '#/components/schemas/V1MerchantLocationDetails'
        market_url:
          type: string
          description: The URL of the merchant's online store.
      description: |-
        Defines the fields that are included in the response body of
        a request to the **RetrieveBusiness** endpoint.
      example:
        business_name: business_name
        account_type: LOCATION
        account_capabilities:
        - account_capabilities
        - account_capabilities
        business_address:
          country: ZZ
          administrative_district_level_3: administrative_district_level_3
          locality: locality
          sublocality: sublocality
          last_name: last_name
          administrative_district_level_2: administrative_district_level_2
          administrative_district_level_1: administrative_district_level_1
          sublocality_3: sublocality_3
          sublocality_2: sublocality_2
          organization: organization
          address_line_1: address_line_1
          address_line_3: address_line_3
          address_line_2: address_line_2
          postal_code: postal_code
          first_name: first_name
        currency_code: currency_code
        country_code: country_code
        language_code: language_code
        market_url: market_url
        business_phone:
          number: number
          calling_code: calling_code
        location_details:
          nickname: nickname
        business_type: ACCOUNTING
        name: name
        id: id
        shipping_address: null
        email: email
      x-release-status: DEPRECATED
    V1MerchantLocationDetails:
      type: object
      properties:
        nickname:
          type: string
          description: The nickname assigned to the single-location account by the
            parent business. This value appears in the parent business's multi-location
            dashboard.
      description: Additional information for a single-location account specified
        by its associated business account, if it has one.
      example:
        nickname: nickname
      x-release-status: DEPRECATED
    V1ModifierList:
      type: object
      properties:
        id:
          type: string
          description: The modifier list's unique ID.
        name:
          type: string
          description: The modifier list's name.
        selection_type:
          $ref: '#/components/schemas/V1ModifierListSelectionType'
        modifier_options:
          type: array
          description: The options included in the modifier list.
          items:
            $ref: '#/components/schemas/V1ModifierOption'
        v2_id:
          type: string
          description: The ID of the CatalogObject in the Connect v2 API. Objects
            that are shared across multiple locations share the same v2 ID.
      description: V1ModifierList
      example:
        selection_type: SINGLE
        name: name
        v2_id: v2_id
        id: id
        modifier_options:
        - price_money: null
          on_by_default: true
          name: name
          v2_id: v2_id
          id: id
          modifier_list_id: modifier_list_id
          ordinal: 1
        - price_money: null
          on_by_default: true
          name: name
          v2_id: v2_id
          id: id
          modifier_list_id: modifier_list_id
          ordinal: 1
      x-release-status: DEPRECATED
    V1ModifierOption:
      type: object
      properties:
        id:
          type: string
          description: The modifier option's unique ID.
        name:
          type: string
          description: The modifier option's name.
        price_money:
          $ref: '#/components/schemas/V1Money'
        on_by_default:
          type: boolean
          description: If true, the modifier option is the default option in a modifier
            list for which selection_type is SINGLE.
        ordinal:
          type: integer
          description: Indicates the modifier option's list position when displayed
            in Square Point of Sale and the merchant dashboard. If more than one modifier
            option in the same modifier list has the same ordinal value, those options
            are displayed in alphabetical order.
        modifier_list_id:
          type: string
          description: The ID of the modifier list the option belongs to.
        v2_id:
          type: string
          description: The ID of the CatalogObject in the Connect v2 API. Objects
            that are shared across multiple locations share the same v2 ID.
      description: V1ModifierOption
      example:
        price_money: null
        on_by_default: true
        name: name
        v2_id: v2_id
        id: id
        modifier_list_id: modifier_list_id
        ordinal: 1
      x-release-status: DEPRECATED
    V1Money:
      type: object
      properties:
        amount:
          type: integer
          description: |-
            Amount in the lowest denominated value of this Currency. E.g. in USD
            these are cents, in JPY they are Yen (which do not have a 'cent' concept).
        currency_code:
          $ref: '#/components/schemas/Currency'
      example:
        amount: 0
        currency_code: UNKNOWN_CURRENCY
      x-release-status: DEPRECATED
    V1Page:
      type: object
      properties:
        id:
          type: string
          description: The page's unique identifier.
        name:
          type: string
          description: The page's name, if any.
        page_index:
          maximum: 6
          minimum: 0
          type: integer
          description: The page's position in the merchant's list of pages. Always
            an integer between 0 and 6, inclusive.
        cells:
          type: array
          description: The cells included on the page.
          items:
            $ref: '#/components/schemas/V1PageCell'
      description: V1Page
      example:
        cells:
        - page_id: page_id
          object_type: ITEM
          placeholder_type: ALL_ITEMS
          column: 1
          row: 6
          object_id: object_id
        - page_id: page_id
          object_type: ITEM
          placeholder_type: ALL_ITEMS
          column: 1
          row: 6
          object_id: object_id
        page_index: 0
        name: name
        id: id
      x-release-status: DEPRECATED
    V1PageCell:
      type: object
      properties:
        page_id:
          type: string
          description: The unique identifier of the page the cell is included on.
        row:
          type: integer
          description: The row of the cell. Always an integer between 0 and 4, inclusive.
        column:
          type: integer
          description: The column of the cell. Always an integer between 0 and 4,
            inclusive.
        object_type:
          $ref: '#/components/schemas/V1PageCellObjectType'
        object_id:
          type: string
          description: The unique identifier of the entity represented in the cell.
            Not present for cells with an object_type of PLACEHOLDER.
        placeholder_type:
          $ref: '#/components/schemas/V1PageCellPlaceholderType'
      description: V1PageCell
      example:
        page_id: page_id
        object_type: ITEM
        placeholder_type: ALL_ITEMS
        column: 1
        row: 6
        object_id: object_id
      x-release-status: DEPRECATED
    V1Payment:
      type: object
      properties:
        id:
          type: string
          description: The payment's unique identifier.
        merchant_id:
          type: string
          description: The unique identifier of the merchant that took the payment.
        created_at:
          type: string
          description: The time when the payment was created, in ISO 8601 format.
            Reflects the time of the first payment if the object represents an incomplete
            partial payment, and the time of the last or complete payment otherwise.
        creator_id:
          type: string
          description: The unique identifier of the Square account that took the payment.
        device:
          $ref: '#/components/schemas/Device'
        payment_url:
          type: string
          description: The URL of the payment's detail page in the merchant dashboard.
            The merchant must be signed in to the merchant dashboard to view this
            page.
        receipt_url:
          type: string
          description: |-
            The URL of the receipt for the payment. Note that for split tender
            payments, this URL corresponds to the receipt for the first tender
            listed in the payment's tender field. Each Tender object has its own
            receipt_url field you can use to get the other receipts associated with
            a split tender payment.
        inclusive_tax_money:
          $ref: '#/components/schemas/V1Money'
        additive_tax_money:
          $ref: '#/components/schemas/V1Money'
        tax_money:
          $ref: '#/components/schemas/V1Money'
        tip_money:
          $ref: '#/components/schemas/V1Money'
        discount_money:
          $ref: '#/components/schemas/V1Money'
        total_collected_money:
          $ref: '#/components/schemas/V1Money'
        processing_fee_money:
          $ref: '#/components/schemas/V1Money'
        net_total_money:
          $ref: '#/components/schemas/V1Money'
        refunded_money:
          $ref: '#/components/schemas/V1Money'
        swedish_rounding_money:
          $ref: '#/components/schemas/V1Money'
        gross_sales_money:
          $ref: '#/components/schemas/V1Money'
        net_sales_money:
          $ref: '#/components/schemas/V1Money'
        inclusive_tax:
          type: array
          description: All of the inclusive taxes associated with the payment.
          items:
            $ref: '#/components/schemas/V1PaymentTax'
        additive_tax:
          type: array
          description: All of the additive taxes associated with the payment.
          items:
            $ref: '#/components/schemas/V1PaymentTax'
        tender:
          type: array
          description: All of the tenders associated with the payment.
          items:
            $ref: '#/components/schemas/V1Tender'
        refunds:
          type: array
          description: All of the refunds applied to the payment. Note that the value
            of all refunds on a payment can exceed the value of all tenders if a merchant
            chooses to refund money to a tender after previously accepting returned
            goods as part of an exchange.
          items:
            $ref: '#/components/schemas/V1Refund'
        itemizations:
          type: array
          description: The items purchased in the payment.
          items:
            $ref: '#/components/schemas/V1PaymentItemization'
        surcharge_money:
          $ref: '#/components/schemas/V1Money'
        surcharges:
          type: array
          description: A list of all surcharges associated with the payment.
          items:
            $ref: '#/components/schemas/V1PaymentSurcharge'
        is_partial:
          type: boolean
          description: |-
            Indicates whether or not the payment is only partially paid for.
            If true, this payment will have the tenders collected so far, but the
            itemizations will be empty until the payment is completed.
      description: |-
        A payment represents a paid transaction between a Square merchant and a
        customer. Payment details are usually available from Connect API endpoints
        within a few minutes after the transaction completes.

        Each Payment object includes several fields that end in `_money`. These fields
        describe the various amounts of money that contribute to the payment total:

        <ul>
        <li>
        Monetary values are <b>positive</b> if they represent an
        <em>increase</em> in the amount of money the merchant receives (e.g.,
        <code>tax_money</code>, <code>tip_money</code>).
        </li>
        <li>
        Monetary values are <b>negative</b> if they represent an
        <em>decrease</em> in the amount of money the merchant receives (e.g.,
        <code>discount_money</code>, <code>refunded_money</code>).
        </li>
        </ul>
      example:
        payment_url: payment_url
        is_partial: true
        created_at: created_at
        merchant_id: merchant_id
        additive_tax:
        - null
        - null
        gross_sales_money: null
        refunds:
        - reason: reason
          refunded_tip_money: null
          refunded_additive_tax:
          - null
          - null
          refunded_additive_tax_money: null
          refunded_inclusive_tax_money: null
          created_at: created_at
          refunded_surcharges:
          - applied_money: null
            taxable: true
            rate: rate
            name: name
            taxes:
            - null
            - null
            amount_money: null
            type: UNKNOWN
            surcharge_id: surcharge_id
          - applied_money: null
            taxable: true
            rate: rate
            name: name
            taxes:
            - null
            - null
            amount_money: null
            type: UNKNOWN
            surcharge_id: surcharge_id
          refunded_discount_money: null
          merchant_id: merchant_id
          type: FULL
          is_exchange: true
          refunded_processing_fee_money: null
          payment_id: payment_id
          refunded_surcharge_money: null
          processed_at: processed_at
          refunded_money: null
          refunded_inclusive_tax:
          - null
          - null
          refunded_tax_money: null
        - reason: reason
          refunded_tip_money: null
          refunded_additive_tax:
          - null
          - null
          refunded_additive_tax_money: null
          refunded_inclusive_tax_money: null
          created_at: created_at
          refunded_surcharges:
          - applied_money: null
            taxable: true
            rate: rate
            name: name
            taxes:
            - null
            - null
            amount_money: null
            type: UNKNOWN
            surcharge_id: surcharge_id
          - applied_money: null
            taxable: true
            rate: rate
            name: name
            taxes:
            - null
            - null
            amount_money: null
            type: UNKNOWN
            surcharge_id: surcharge_id
          refunded_discount_money: null
          merchant_id: merchant_id
          type: FULL
          is_exchange: true
          refunded_processing_fee_money: null
          payment_id: payment_id
          refunded_surcharge_money: null
          processed_at: processed_at
          refunded_money: null
          refunded_inclusive_tax:
          - null
          - null
          refunded_tax_money: null
        receipt_url: receipt_url
        id: id
        swedish_rounding_money: null
        discount_money: null
        tender:
        - type: CREDIT_CARD
          tendered_at: tendered_at
          pan_suffix: pan_suffix
          change_back_money: null
          entry_method: MANUAL
          tendered_money: null
          is_exchange: true
          receipt_url: receipt_url
          payment_note: payment_note
          employee_id: employee_id
          name: name
          card_brand: OTHER_BRAND
          id: id
          total_money: null
          settled_at: settled_at
          refunded_money: null
        - type: CREDIT_CARD
          tendered_at: tendered_at
          pan_suffix: pan_suffix
          change_back_money: null
          entry_method: MANUAL
          tendered_money: null
          is_exchange: true
          receipt_url: receipt_url
          payment_note: payment_note
          employee_id: employee_id
          name: name
          card_brand: OTHER_BRAND
          id: id
          total_money: null
          settled_at: settled_at
          refunded_money: null
        itemizations:
        - discount_money: null
          single_quantity_money: null
          quantity: 0.8008281904610115
          notes: notes
          taxes:
          - null
          - null
          modifiers:
          - applied_money: null
            name: name
            modifier_option_id: modifier_option_id
          - applied_money: null
            name: name
            modifier_option_id: modifier_option_id
          gross_sales_money: null
          item_detail:
            category_name: category_name
            item_id: item_id
            item_variation_id: item_variation_id
            sku: sku
          discounts:
          - applied_money: null
            name: name
            discount_id: discount_id
          - applied_money: null
            name: name
            discount_id: discount_id
          name: name
          itemization_type: ITEM
          item_variation_name: item_variation_name
          total_money: null
          net_sales_money: null
        - discount_money: null
          single_quantity_money: null
          quantity: 0.8008281904610115
          notes: notes
          taxes:
          - null
          - null
          modifiers:
          - applied_money: null
            name: name
            modifier_option_id: modifier_option_id
          - applied_money: null
            name: name
            modifier_option_id: modifier_option_id
          gross_sales_money: null
          item_detail:
            category_name: category_name
            item_id: item_id
            item_variation_id: item_variation_id
            sku: sku
          discounts:
          - applied_money: null
            name: name
            discount_id: discount_id
          - applied_money: null
            name: name
            discount_id: discount_id
          name: name
          itemization_type: ITEM
          item_variation_name: item_variation_name
          total_money: null
          net_sales_money: null
        inclusive_tax:
        - applied_money: null
          rate: rate
          name: name
          fee_id: fee_id
          inclusion_type: ADDITIVE
          errors:
          - code: INTERNAL_SERVER_ERROR
            field: field
            detail: detail
            category: API_ERROR
          - code: INTERNAL_SERVER_ERROR
            field: field
            detail: detail
            category: API_ERROR
        - applied_money: null
          rate: rate
          name: name
          fee_id: fee_id
          inclusion_type: ADDITIVE
          errors:
          - code: INTERNAL_SERVER_ERROR
            field: field
            detail: detail
            category: API_ERROR
          - code: INTERNAL_SERVER_ERROR
            field: field
            detail: detail
            category: API_ERROR
        surcharge_money: null
        processing_fee_money: null
        net_total_money: null
        tip_money: null
        total_collected_money: null
        creator_id: creator_id
        surcharges:
        - null
        - null
        inclusive_tax_money:
          amount: 0
          currency_code: UNKNOWN_CURRENCY
        refunded_money: null
        additive_tax_money: null
        tax_money: null
        device:
          name: name
          id: id
        net_sales_money: null
      x-release-status: PUBLIC
    V1PaymentDiscount:
      type: object
      properties:
        name:
          type: string
          description: The discount's name.
        applied_money:
          $ref: '#/components/schemas/V1Money'
        discount_id:
          type: string
          description: The ID of the applied discount, if available. Discounts applied
            in older versions of Square Register might not have an ID.
      description: V1PaymentDiscount
      example:
        applied_money: null
        name: name
        discount_id: discount_id
      x-release-status: PUBLIC
    V1PaymentItemDetail:
      type: object
      properties:
        category_name:
          type: string
          description: The name of the item's merchant-defined category, if any.
        sku:
          type: string
          description: ' The item''s merchant-defined SKU, if any.'
        item_id:
          type: string
          description: The unique ID of the item purchased, if any.
        item_variation_id:
          type: string
          description: The unique ID of the item variation purchased, if any.
      description: V1PaymentItemDetail
      example:
        category_name: category_name
        item_id: item_id
        item_variation_id: item_variation_id
        sku: sku
      x-release-status: PUBLIC
    V1PaymentItemization:
      type: object
      properties:
        name:
          type: string
          description: The item's name.
        quantity:
          type: number
          description: The quantity of the item purchased. This can be a decimal value.
        itemization_type:
          $ref: '#/components/schemas/V1PaymentItemizationItemizationType'
        item_detail:
          $ref: '#/components/schemas/V1PaymentItemDetail'
        notes:
          type: string
          description: Notes entered by the merchant about the item at the time of
            payment, if any.
        item_variation_name:
          type: string
          description: The name of the item variation purchased, if any.
        total_money:
          $ref: '#/components/schemas/V1Money'
        single_quantity_money:
          $ref: '#/components/schemas/V1Money'
        gross_sales_money:
          $ref: '#/components/schemas/V1Money'
        discount_money:
          $ref: '#/components/schemas/V1Money'
        net_sales_money:
          $ref: '#/components/schemas/V1Money'
        taxes:
          type: array
          description: All taxes applied to this itemization.
          items:
            $ref: '#/components/schemas/V1PaymentTax'
        discounts:
          type: array
          description: All discounts applied to this itemization.
          items:
            $ref: '#/components/schemas/V1PaymentDiscount'
        modifiers:
          type: array
          description: All modifier options applied to this itemization.
          items:
            $ref: '#/components/schemas/V1PaymentModifier'
      description: |-
        Payment include an` itemizations` field that lists the items purchased,
        along with associated fees, modifiers, and discounts. Each itemization has an
        `itemization_type` field that indicates which of the following the itemization
        represents:

        <ul>
        <li>An item variation from the merchant's item library</li>
        <li>A custom monetary amount</li>
        <li>
        An action performed on a Square gift card, such as activating or
        reloading it.
        </li>
        </ul>

        *Note**: itemization information included in a `Payment` object reflects
        details collected **at the time of the payment**. Details such as the name or
        price of items might have changed since the payment was processed.
      example:
        discount_money: null
        single_quantity_money: null
        quantity: 0.8008281904610115
        notes: notes
        taxes:
        - null
        - null
        modifiers:
        - applied_money: null
          name: name
          modifier_option_id: modifier_option_id
        - applied_money: null
          name: name
          modifier_option_id: modifier_option_id
        gross_sales_money: null
        item_detail:
          category_name: category_name
          item_id: item_id
          item_variation_id: item_variation_id
          sku: sku
        discounts:
        - applied_money: null
          name: name
          discount_id: discount_id
        - applied_money: null
          name: name
          discount_id: discount_id
        name: name
        itemization_type: ITEM
        item_variation_name: item_variation_name
        total_money: null
        net_sales_money: null
      x-release-status: PUBLIC
    V1PaymentModifier:
      type: object
      properties:
        name:
          type: string
          description: The modifier option's name.
        applied_money:
          $ref: '#/components/schemas/V1Money'
        modifier_option_id:
          type: string
          description: TThe ID of the applied modifier option, if available. Modifier
            options applied in older versions of Square Register might not have an
            ID.
      description: V1PaymentModifier
      example:
        applied_money: null
        name: name
        modifier_option_id: modifier_option_id
      x-release-status: PUBLIC
    V1PaymentSurcharge:
      type: object
      properties:
        name:
          type: string
          description: The name of the surcharge.
        applied_money:
          $ref: '#/components/schemas/V1Money'
        rate:
          type: string
          description: The amount of the surcharge as a percentage. The percentage
            is provided as a string representing the decimal equivalent of the percentage.
            For example, "0.7" corresponds to a 7% surcharge. Exactly one of rate
            or amount_money should be set.
        amount_money:
          $ref: '#/components/schemas/V1Money'
        type:
          $ref: '#/components/schemas/V1PaymentSurchargeType'
        taxable:
          type: boolean
          description: Indicates whether the surcharge is taxable.
        taxes:
          type: array
          description: The list of taxes that should be applied to the surcharge.
          items:
            $ref: '#/components/schemas/V1PaymentTax'
        surcharge_id:
          type: string
          description: A Square-issued unique identifier associated with the surcharge.
      description: V1PaymentSurcharge
      example:
        applied_money: null
        taxable: true
        rate: rate
        name: name
        taxes:
        - null
        - null
        amount_money: null
        type: UNKNOWN
        surcharge_id: surcharge_id
      x-release-status: PUBLIC
    V1PaymentTax:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
        name:
          type: string
          description: The merchant-defined name of the tax.
        applied_money:
          $ref: '#/components/schemas/V1Money'
        rate:
          type: string
          description: The rate of the tax, as a string representation of a decimal
            number. A value of 0.07 corresponds to a rate of 7%.
        inclusion_type:
          $ref: '#/components/schemas/V1PaymentTaxInclusionType'
        fee_id:
          type: string
          description: The ID of the tax, if available. Taxes applied in older versions
            of Square Register might not have an ID.
      description: V1PaymentTax
      example:
        applied_money: null
        rate: rate
        name: name
        fee_id: fee_id
        inclusion_type: ADDITIVE
        errors:
        - code: INTERNAL_SERVER_ERROR
          field: field
          detail: detail
          category: API_ERROR
        - code: INTERNAL_SERVER_ERROR
          field: field
          detail: detail
          category: API_ERROR
      x-release-status: PUBLIC
    V1PaymentUpdatedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        location_id:
          type: string
          description: The ID of the target merchant associated with the event.
        event_type:
          type: string
          description: The type of event this represents, i.e. `PAYMENT_UPDATED`.
        entity_id:
          type: string
          description: The ID of the updated V1 Payment.
      description: |-
        Published when a charge is made or refunded through the Square
        Point of Sale app or the Transactions API.
      example:
        merchant_id: 18YC4JBH91E1H
        location_id: JGHJ0343
        event_type: PAYMENT_UPDATED
        entity_id: Jq74mCczmFXk1tC10GB
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
      x-webhook:
        event: PAYMENT_UPDATED
        scopes:
        - PAYMENTS_READ
      x-api: '#/components/x-apis/Payments'
    V1PhoneNumber:
      required:
      - calling_code
      - number
      type: object
      properties:
        calling_code:
          type: string
          description: The phone number's international calling code. For US phone
            numbers, this value is +1.
        number:
          type: string
          description: The phone number.
      description: Represents a phone number.
      example:
        number: number
        calling_code: calling_code
      x-release-status: DEPRECATED
    V1Refund:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/V1RefundType'
        reason:
          type: string
          description: The merchant-specified reason for the refund.
        refunded_money:
          $ref: '#/components/schemas/V1Money'
        refunded_processing_fee_money:
          $ref: '#/components/schemas/V1Money'
        refunded_tax_money:
          $ref: '#/components/schemas/V1Money'
        refunded_additive_tax_money:
          $ref: '#/components/schemas/V1Money'
        refunded_additive_tax:
          type: array
          description: All of the additive taxes associated with the refund.
          items:
            $ref: '#/components/schemas/V1PaymentTax'
        refunded_inclusive_tax_money:
          $ref: '#/components/schemas/V1Money'
        refunded_inclusive_tax:
          type: array
          description: All of the inclusive taxes associated with the refund.
          items:
            $ref: '#/components/schemas/V1PaymentTax'
        refunded_tip_money:
          $ref: '#/components/schemas/V1Money'
        refunded_discount_money:
          $ref: '#/components/schemas/V1Money'
        refunded_surcharge_money:
          $ref: '#/components/schemas/V1Money'
        refunded_surcharges:
          type: array
          description: A list of all surcharges associated with the refund.
          items:
            $ref: '#/components/schemas/V1PaymentSurcharge'
        created_at:
          type: string
          description: The time when the merchant initiated the refund for Square
            to process, in ISO 8601 format.
        processed_at:
          type: string
          description: The time when Square processed the refund on behalf of the
            merchant, in ISO 8601 format.
        payment_id:
          type: string
          description: A Square-issued ID associated with the refund. For single-tender
            refunds, payment_id is the ID of the original payment ID. For split-tender
            refunds, payment_id is the ID of the original tender. For exchange-based
            refunds (is_exchange == true), payment_id is the ID of the original payment
            ID even if the payment includes other tenders.
        merchant_id:
          type: string
        is_exchange:
          type: boolean
          description: Indicates whether or not the refund is associated with an exchange.
            If is_exchange is true, the refund reflects the value of goods returned
            in the exchange not the total money refunded.
      description: V1Refund
      example:
        reason: reason
        refunded_tip_money: null
        refunded_additive_tax:
        - null
        - null
        refunded_additive_tax_money: null
        refunded_inclusive_tax_money: null
        created_at: created_at
        refunded_surcharges:
        - applied_money: null
          taxable: true
          rate: rate
          name: name
          taxes:
          - null
          - null
          amount_money: null
          type: UNKNOWN
          surcharge_id: surcharge_id
        - applied_money: null
          taxable: true
          rate: rate
          name: name
          taxes:
          - null
          - null
          amount_money: null
          type: UNKNOWN
          surcharge_id: surcharge_id
        refunded_discount_money: null
        merchant_id: merchant_id
        type: FULL
        is_exchange: true
        refunded_processing_fee_money: null
        payment_id: payment_id
        refunded_surcharge_money: null
        processed_at: processed_at
        refunded_money: null
        refunded_inclusive_tax:
        - null
        - null
        refunded_tax_money: null
      x-release-status: PUBLIC
    V1RemoveFeeRequest:
      type: object
      properties: {}
      x-release-status: DEPRECATED
    V1RemoveModifierListRequest:
      type: object
      properties: {}
      x-release-status: DEPRECATED
    V1RetrieveBankAccountRequest:
      type: object
      properties: {}
      x-release-status: DEPRECATED
    V1RetrieveBusinessRequest:
      type: object
      properties: {}
      x-release-status: DEPRECATED
    V1RetrieveCashDrawerShiftRequest:
      type: object
      properties: {}
      x-release-status: DEPRECATED
    V1RetrieveEmployeeRequest:
      type: object
      properties: {}
      x-release-status: PUBLIC
    V1RetrieveEmployeeRoleRequest:
      type: object
      properties: {}
      x-release-status: PUBLIC
    V1RetrieveItemRequest:
      type: object
      properties: {}
      x-release-status: DEPRECATED
    V1RetrieveModifierListRequest:
      type: object
      properties: {}
      x-release-status: DEPRECATED
    V1RetrievePaymentRequest:
      type: object
      properties: {}
      x-release-status: PUBLIC
    V1RetrieveSettlementRequest:
      type: object
      properties: {}
      x-release-status: PUBLIC
    V1RetrieveTimecardRequest:
      type: object
      properties: {}
      x-release-status: DEPRECATED
    V1Settlement:
      type: object
      properties:
        id:
          type: string
          description: The settlement's unique identifier.
        status:
          $ref: '#/components/schemas/V1SettlementStatus'
        total_money:
          $ref: '#/components/schemas/V1Money'
        initiated_at:
          type: string
          description: The time when the settlement was submitted for deposit or withdrawal,
            in ISO 8601 format.
        bank_account_id:
          type: string
          description: The Square-issued unique identifier for the bank account associated
            with the settlement.
        entries:
          type: array
          description: The entries included in this settlement.
          items:
            $ref: '#/components/schemas/V1SettlementEntry'
      description: V1Settlement
      example:
        bank_account_id: bank_account_id
        entries:
        - payment_id: payment_id
          fee_money: null
          amount_money: null
          type: ADJUSTMENT
        - payment_id: payment_id
          fee_money: null
          amount_money: null
          type: ADJUSTMENT
        id: id
        total_money:
          amount: 0
          currency_code: UNKNOWN_CURRENCY
        initiated_at: initiated_at
        status: FAILED
      x-release-status: PUBLIC
    V1SettlementEntry:
      type: object
      properties:
        payment_id:
          type: string
          description: The settlement's unique identifier.
        type:
          $ref: '#/components/schemas/V1SettlementEntryType'
        amount_money:
          $ref: '#/components/schemas/V1Money'
        fee_money:
          $ref: '#/components/schemas/V1Money'
      description: V1SettlementEntry
      example:
        payment_id: payment_id
        fee_money: null
        amount_money: null
        type: ADJUSTMENT
      x-release-status: PUBLIC
    V1SubmitBatchRequest:
      required:
      - requests
      type: object
      properties:
        requests:
          type: array
          description: The set of API actions to perform.
          items:
            $ref: '#/components/schemas/BatchRequest'
      x-release-status: DEPRECATED
      x-visibility: DOC_ONLY
    V1SubmitBatchResponse:
      type: object
      properties:
        items:
          type: array
          description: |-
            An array of `BatchResponse` objects corresponding to requests. The
            index of each response in the array matches the index of the
            corresponding request.
          items:
            $ref: '#/components/schemas/BatchResponse'
      x-release-status: DEPRECATED
      x-visibility: DOC_ONLY
    V1Tender:
      type: object
      properties:
        id:
          type: string
          description: The tender's unique ID.
        type:
          $ref: '#/components/schemas/V1TenderType'
        name:
          type: string
          description: A human-readable description of the tender.
        employee_id:
          type: string
          description: The ID of the employee that processed the tender.
        receipt_url:
          type: string
          description: The URL of the receipt for the tender.
        card_brand:
          $ref: '#/components/schemas/V1TenderCardBrand'
        pan_suffix:
          type: string
          description: The last four digits of the provided credit card's account
            number.
        entry_method:
          $ref: '#/components/schemas/V1TenderEntryMethod'
        payment_note:
          type: string
          description: 'Notes entered by the merchant about the tender at the time
            of payment, if any. Typically only present for tender with the type: OTHER.'
        total_money:
          $ref: '#/components/schemas/V1Money'
        tendered_money:
          $ref: '#/components/schemas/V1Money'
        tendered_at:
          type: string
          description: The time when the tender was created, in ISO 8601 format.
        settled_at:
          type: string
          description: The time when the tender was settled, in ISO 8601 format.
        change_back_money:
          $ref: '#/components/schemas/V1Money'
        refunded_money:
          $ref: '#/components/schemas/V1Money'
        is_exchange:
          type: boolean
          description: Indicates whether or not the tender is associated with an exchange.
            If is_exchange is true, the tender represents the value of goods returned
            in an exchange not the actual money paid. The exchange value reduces the
            tender amounts needed to pay for items purchased in the exchange.
      description: |-
        A tender represents a discrete monetary exchange. Square represents this
        exchange as a money object with a specific currency and amount, where the
        amount is given in the smallest denomination of the given currency.

        Square POS can accept more than one form of tender for a single payment (such
        as by splitting a bill between a credit card and a gift card). The `tender`
        field of the Payment object lists all forms of tender used for the payment.

        Split tender payments behave slightly differently from single tender payments:

        The receipt_url for a split tender corresponds only to the first tender listed
        in the tender field. To get the receipt URLs for the remaining tenders, use
        the receipt_url fields of the corresponding Tender objects.

        *A note on gift cards**: when a customer purchases a Square gift card from a
        merchant, the merchant receives the full amount of the gift card in the
        associated payment.

        When that gift card is used as a tender, the balance of the gift card is
        reduced and the merchant receives no funds. A `Tender` object with a type of
        `SQUARE_GIFT_CARD` indicates a gift card was used for some or all of the
        associated payment.
      example:
        type: CREDIT_CARD
        tendered_at: tendered_at
        pan_suffix: pan_suffix
        change_back_money: null
        entry_method: MANUAL
        tendered_money: null
        is_exchange: true
        receipt_url: receipt_url
        payment_note: payment_note
        employee_id: employee_id
        name: name
        card_brand: OTHER_BRAND
        id: id
        total_money: null
        settled_at: settled_at
        refunded_money: null
      x-release-status: DEPRECATED
    V1Timecard:
      required:
      - employee_id
      type: object
      properties:
        id:
          type: string
          description: The timecard's unique ID.
        employee_id:
          type: string
          description: The ID of the employee the timecard is associated with.
        deleted:
          type: boolean
          description: If true, the timecard was deleted by the merchant, and it is
            no longer valid.
        clockin_time:
          type: string
          description: The clock-in time for the timecard, in ISO 8601 format.
        clockout_time:
          type: string
          description: The clock-out time for the timecard, in ISO 8601 format. Provide
            this value only if importing timecard information from another system.
        clockin_location_id:
          type: string
          description: The ID of the location the employee clocked in from. We strongly
            reccomend providing a clockin_location_id. Square uses the clockin_location_id
            to determine a timecard’s timezone and overtime rules.
        clockout_location_id:
          type: string
          description: The ID of the location the employee clocked out from. Provide
            this value only if importing timecard information from another system.
        created_at:
          type: string
          description: The time when the timecard was created, in ISO 8601 format.
        updated_at:
          type: string
          description: The time when the timecard was most recently updated, in ISO
            8601 format.
        regular_seconds_worked:
          type: number
          description: The total number of regular (non-overtime) seconds worked in
            the timecard.
        overtime_seconds_worked:
          type: number
          description: The total number of overtime seconds worked in the timecard.
        doubletime_seconds_worked:
          type: number
          description: The total number of doubletime seconds worked in the timecard.
      description: Represents a timecard for an employee.
      example:
        deleted: true
        doubletime_seconds_worked: 1.4658129805029452
        updated_at: updated_at
        clockin_time: clockin_time
        employee_id: employee_id
        overtime_seconds_worked: 6.027456183070403
        clockin_location_id: clockin_location_id
        created_at: created_at
        clockout_time: clockout_time
        id: id
        regular_seconds_worked: 0.8008281904610115
        clockout_location_id: clockout_location_id
      x-release-status: DEPRECATED
    V1TimecardEvent:
      type: object
      properties:
        id:
          type: string
          description: The event's unique ID.
        event_type:
          $ref: '#/components/schemas/V1TimecardEventEventType'
        clockin_time:
          type: string
          description: The time the employee clocked in, in ISO 8601 format.
        clockout_time:
          type: string
          description: The time the employee clocked out, in ISO 8601 format.
        created_at:
          type: string
          description: The time when the event was created, in ISO 8601 format.
      description: V1TimecardEvent
      example:
        event_type: API_CREATE
        clockin_time: clockin_time
        created_at: created_at
        clockout_time: clockout_time
        id: id
      x-release-status: DEPRECATED
    V1TimecardUpdatedWebhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        location_id:
          type: string
          description: The ID of the target merchant associated with the event.
        event_type:
          type: string
          description: The type of event this represents, i.e. `TIMECARD_UPDATED`.
        entity_id:
          type: string
          description: The ID of the updated V1 Timecard.
      description: |-
        Published when a timecard is created in the Seller Dashboard
        or an employee clocks in using the Square Point of Sale app.
      example:
        merchant_id: 18YC4JBH91E1H
        location_id: JGHJ0343
        event_type: TIMECARD_UPDATED
        entity_id: Jq74mCczmFXk1tC10GB
      x-release-status: DEPRECATED
      x-visibility: DOC_ONLY
      x-webhook:
        event: TIMECARD_UPDATED
        scopes:
        - TIMECARDS_READ
      x-api: '#/components/x-apis/Labor'
    V1UpdateCategoryRequest:
      required:
      - body
      type: object
      properties:
        body:
          $ref: '#/components/schemas/V1Category'
      x-release-status: DEPRECATED
    V1UpdateDiscountRequest:
      required:
      - body
      type: object
      properties:
        body:
          $ref: '#/components/schemas/V1Discount'
      x-release-status: DEPRECATED
    V1UpdateEmployeeRequest:
      required:
      - body
      type: object
      properties:
        body:
          $ref: '#/components/schemas/V1Employee'
      x-release-status: PUBLIC
    V1UpdateEmployeeRoleRequest:
      required:
      - body
      type: object
      properties:
        body:
          $ref: '#/components/schemas/V1EmployeeRole'
      x-release-status: PUBLIC
    V1UpdateFeeRequest:
      required:
      - body
      type: object
      properties:
        body:
          $ref: '#/components/schemas/V1Fee'
      x-release-status: DEPRECATED
    V1UpdateItemRequest:
      required:
      - body
      type: object
      properties:
        body:
          $ref: '#/components/schemas/V1Item'
      x-release-status: DEPRECATED
    V1UpdateModifierListRequest:
      type: object
      properties:
        name:
          type: string
          description: The modifier list's name.
        selection_type:
          $ref: '#/components/schemas/V1UpdateModifierListRequestSelectionType'
      description: V1UpdateModifierListRequest
      x-release-status: DEPRECATED
    V1UpdateModifierOptionRequest:
      required:
      - body
      type: object
      properties:
        body:
          $ref: '#/components/schemas/V1ModifierOption'
      x-release-status: DEPRECATED
    V1UpdatePageCellRequest:
      required:
      - body
      type: object
      properties:
        body:
          $ref: '#/components/schemas/V1PageCell'
      x-release-status: DEPRECATED
    V1UpdatePageRequest:
      required:
      - body
      type: object
      properties:
        body:
          $ref: '#/components/schemas/V1Page'
      x-release-status: DEPRECATED
    V1UpdateTimecardRequest:
      required:
      - body
      type: object
      properties:
        body:
          $ref: '#/components/schemas/V1Timecard'
      x-release-status: DEPRECATED
    V1UpdateVariationRequest:
      required:
      - body
      type: object
      properties:
        body:
          $ref: '#/components/schemas/V1Variation'
      x-release-status: DEPRECATED
    V1UpdateWebhooksRequest:
      type: object
      properties: {}
      description: V1UpdateWebhooksRequest
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    V1UpdateWebhooksResponse:
      type: object
      properties:
        events:
          type: array
          description: |-
            A list of webhook event enums the location is currently subscribed to.
            See [V1WebhooksEvents](#type-v1webhooksevents) for possible values
          items:
            $ref: '#/components/schemas/V1WebhooksEvents'
      description: V1UpdateWebhooksResponse
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    V1UploadItemImageRequest:
      required:
      - image_data
      type: object
      properties:
        image_data:
          type: byte
          description: The binary image data.
      x-release-status: DEPRECATED
      x-visibility: DOC_ONLY
    V1Variation:
      type: object
      properties:
        id:
          type: string
          description: The item variation's unique ID.
        name:
          type: string
          description: The item variation's name.
        item_id:
          type: string
          description: The ID of the variation's associated item.
        ordinal:
          type: integer
          description: Indicates the variation's list position when displayed in Square
            Point of Sale and the merchant dashboard. If more than one variation for
            the same item has the same ordinal value, those variations are displayed
            in alphabetical order
        pricing_type:
          $ref: '#/components/schemas/V1VariationPricingType'
        price_money:
          $ref: '#/components/schemas/V1Money'
        sku:
          type: string
          description: The item variation's SKU, if any.
        track_inventory:
          type: boolean
          description: If true, inventory tracking is active for the variation.
        inventory_alert_type:
          $ref: '#/components/schemas/V1VariationInventoryAlertType'
        inventory_alert_threshold:
          type: integer
          description: If the inventory quantity for the variation is less than or
            equal to this value and inventory_alert_type is LOW_QUANTITY, the variation
            displays an alert in the merchant dashboard.
        user_data:
          type: string
          description: Arbitrary metadata associated with the variation. Cannot exceed
            255 characters.
        v2_id:
          type: string
          description: The ID of the CatalogObject in the Connect v2 API. Objects
            that are shared across multiple locations share the same v2 ID.
      description: V1Variation
      example:
        pricing_type: FIXED_PRICING
        price_money:
          amount: 0
          currency_code: UNKNOWN_CURRENCY
        item_id: item_id
        inventory_alert_threshold: 6
        name: name
        track_inventory: true
        v2_id: v2_id
        id: id
        user_data: user_data
        sku: sku
        ordinal: 0
        inventory_alert_type: LOW_QUANTITY
      x-release-status: DEPRECATED
    VoidTransactionRequest:
      type: object
      properties: {}
      x-release-status: DEPRECATED
      x-sq-sdk-sample-code:
        python: /sdk_samples/VoidTransaction/VoidTransactionRequest.python
        csharp: /sdk_samples/VoidTransaction/VoidTransactionRequest.csharp
        java: /sdk_samples/VoidTransaction/VoidTransactionRequest.java
        php: /sdk_samples/VoidTransaction/VoidTransactionRequest.php
        javascript: /sdk_samples/VoidTransaction/VoidTransactionRequest.javascript
        ruby: /sdk_samples/VoidTransaction/VoidTransactionRequest.ruby
    VoidTransactionResponse:
      type: object
      properties:
        errors:
          type: array
          description: Any errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
      description: |-
        Defines the fields that are included in the response body of
        a request to the [VoidTransaction](#endpoint-voidtransaction) endpoint.
      example: {}
      x-release-status: DEPRECATED
      x-sq-sdk-sample-code:
        python: /sdk_samples/VoidTransaction/VoidTransactionResponse.python
        csharp: /sdk_samples/VoidTransaction/VoidTransactionResponse.csharp
        java: /sdk_samples/VoidTransaction/VoidTransactionResponse.java
        php: /sdk_samples/VoidTransaction/VoidTransactionResponse.php
        javascript: /sdk_samples/VoidTransaction/VoidTransactionResponse.javascript
        ruby: /sdk_samples/VoidTransaction/VoidTransactionResponse.ruby
    WageSetting:
      type: object
      properties:
        team_member_id:
          type: string
          description: The unique ID of the `TeamMember` whom this wage setting describes.
        job_assignments:
          type: array
          description: |-
            <b>Required</b> The ordered list of jobs that the team member is assigned to.
            The first job assignment is considered the team member's "Primary Job".
            <br>
            <b>Min Length 1    Max Length 12</b>
          items:
            $ref: '#/components/schemas/JobAssignment'
        is_overtime_exempt:
          type: boolean
          description: Whether the team member is exempt from the overtime rules of
            the seller country.
        version:
          minimum: 0
          type: integer
          description: |-
            Used for resolving concurrency issues; request will fail if version
            provided does not match server version at time of request. If not provided,
            Square executes a blind write, potentially overwriting data from another write. Read
            about [optimistic concurrency](https://developer.squareup.com/docs/docs/working-with-apis/optimistic-concurrency)
            in Square APIs for more information.
        created_at:
          type: string
          description: |-
            The timestamp in RFC 3339 format describing when the wage setting object was created.
            Ex: "2018-10-04T04:00:00-07:00" or "2019-02-05T12:00:00Z"
          readOnly: true
        updated_at:
          type: string
          description: |-
            The timestamp in RFC 3339 format describing when the wage setting object was last updated.
            Ex: "2018-10-04T04:00:00-07:00" or "2019-02-05T12:00:00Z"
          readOnly: true
      description: An object representing a team member's wage information.
      x-release-status: PUBLIC
    Webhook:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the target merchant associated with the event.
        account_id:
          type: string
          description: The ID of the target platform account associated with the event.
        location_id:
          type: string
          description: The ID of the location associated with the event.
        type:
          type: string
          description: The type of event this represents.
        event_id:
          type: string
          description: A unique ID for the webhook event.
        created_at:
          type: string
          description: Timestamp of when the webhook event was created, in RFC 3339
            format.
        data:
          $ref: '#/components/schemas/WebhookData'
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    WebhookData:
      type: object
      properties:
        type:
          type: string
          description: Name of the affected object’s type.
        id:
          type: string
          description: ID of the affected object.
        deleted:
          type: boolean
          description: Is true if the affected object was deleted. Otherwise absent.
        object:
          type: object
          description: An object containing fields and values relevant to the event.
            Is absent if affected object was deleted.
      x-release-status: PUBLIC
      x-visibility: DOC_ONLY
    WorkweekConfig:
      required:
      - start_of_day_local_time
      - start_of_week
      type: object
      properties:
        id:
          type: string
          description: UUID for this object
        start_of_week:
          $ref: '#/components/schemas/Weekday'
        start_of_day_local_time:
          minLength: 1
          type: string
          description: |-
            The local time at which a business week cuts over. Represented as a
            string in `HH:MM` format (`HH:MM:SS` is also accepted, but seconds are
            truncated).
        version:
          minimum: 0
          type: integer
          description: |-
            Used for resolving concurrency issues; request will fail if version
            provided does not match server version at time of request. If not provided,
            Square executes a blind write; potentially overwriting data from another
            write.
        created_at:
          type: string
          description: A read-only timestamp in RFC 3339 format; presented in UTC
          readOnly: true
        updated_at:
          type: string
          description: A read-only timestamp in RFC 3339 format; presented in UTC
          readOnly: true
      description: |-
        Sets the Day of the week and hour of the day that a business starts a
        work week. Used for the calculation of overtime pay.
      x-release-status: PUBLIC
    body:
      type: object
      properties:
        request:
          $ref: '#/components/schemas/CreateCatalogImageRequest'
        image_file:
          type: string
          format: binary
    body_1:
      type: object
      properties:
        request:
          $ref: '#/components/schemas/CreateDisputeEvidenceFileRequest'
        image_file:
          type: string
          format: binary
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://connect.squareup.com/oauth2/authorize
          tokenUrl: https://connect.squareup.com/oauth2/token
          scopes:
            BANK_ACCOUNTS_READ: |-
              __HTTP Method__: `GET`

              Grants read access to bank account information associated with the targeted
              Square account. For example, to call the Connect v1 ListBankAccounts endpoint.
            CASH_DRAWER_READ: |-
              __HTTP Method__: `GET`

              Grants read access to cash drawer shift information. For example, to call the
              ListCashDrawerShifts endpoint.
            CUSTOMERS_READ: |-
              __HTTP Method__: `GET`

              Grants read access to customer information. For example, to call the
              ListCustomers endpoint.
            CUSTOMERS_WRITE: |-
              __HTTP Method__: `POST`, `PUT`, `DELETE`

              Grants write access to customer information. For example, to create and update
              customer profiles.
            DEVICE_CREDENTIAL_MANAGEMENT: |-
              __HTTP Method__: `POST`, `GET`

              Grants read/write access to device credentials information. For example, to
              call the CreateDeviceCode endpoint.
            EMPLOYEES_READ: |-
              __HTTP Method__: `GET`

              Grants read access to employee profile information. For example, to call the
              Connect v1 Employees API.
            EMPLOYEES_WRITE: |-
              __HTTP Method__: `POST`, `PUT`, `DELETE`

              Grants write access to employee profile information. For example, to create
              and modify employee profiles.
            INVENTORY_READ: |-
              __HTTP Method__: `GET`

              Grants read access to inventory information. For example, to call the
              RetrieveInventoryCount endpoint.
            INVENTORY_WRITE: |-
              __HTTP Method__:  `POST`, `PUT`, `DELETE`

              Grants write access to inventory information. For example, to call the
              BatchChangeInventory endpoint.
            ITEMS_READ: |-
              __HTTP Method__: `GET`

              Grants read access to business and location information. For example, to
              obtain a location ID for subsequent activity.
            ITEMS_WRITE: |-
              __HTTP Method__: `POST`, `PUT`, `DELETE`

              Grants write access to product catalog information. For example, to modify or
              add to a product catalog.
            LOYALTY_READ: |-
              __HTTP Method__: `GET`

              Grants read access to loyalty information. For example, to call the
              ListLoyaltyPrograms endpoint.
            LOYALTY_WRITE: |-
              __HTTP Method__: `POST`, `PUT`, `DELETE`

              Grants write access to loyalty information. For example, to call the
              CreateLoyaltyAccount endpoint.
            MERCHANT_PROFILE_READ: |-
              __HTTP Method__: `GET`

              Grants read access to business and location information. For example, to
              obtain a location ID for subsequent activity.
            ORDERS_READ: |-
              __HTTP Method__: `GET`

              Grants read access to order information. For example, to call the
              BatchRetrieveOrders endpoint.
            ORDERS_WRITE: |-
              __HTTP Method__: `POST`, `PUT`, `DELETE`

              Grants write access to order information. For example, to call the
              CreateCheckout endpoint.
            PAYMENTS_READ: |-
              __HTTP Method__: `GET`

              Grants read access to transaction and refund information. For example, to call
              the RetrieveTransaction endpoint.
            PAYMENTS_WRITE: |-
              __HTTP Method__: `POST`, `PUT`, `DELETE`

              Grants write access to transaction and refunds information. For example, to
              process payments with the Payments or Checkout API.
            PAYMENTS_WRITE_ADDITIONAL_RECIPIENTS: |-
              __HTTP Method__: `POST`, `PUT`, `DELETE`

              Allow third party applications to deduct a portion of each transaction amount.
              __Required__ to use multiparty transaction functionality with the Payments
              API.
            PAYMENTS_WRITE_IN_PERSON: |-
              __HTTP Method__: `POST`, `PUT`, `DELETE`

              Grants write access to payments and refunds information. For example, to
              process in-person payments.
            SETTLEMENTS_READ: |-
              __HTTP Method__: `GET`

              Grants read access to settlement (deposit) information. For example, to call
              the Connect v1 ListSettlements endpoint.
            TIMECARDS_READ: |-
              __HTTP Method__: `GET`

              Grants read access to employee timecard information. For example, to call the
              Connect v2 SearchShifts endpoint.
            TIMECARDS_WRITE: |-
              __HTTP Method__: `POST`, `PUT`, `DELETE`

              Grants write access to employee shift information. For example, to create
              and modify employee shifts.
            TIMECARDS_SETTINGS_READ: |-
              __HTTP Method__: `GET`

              Grants read access to employee timecard settings information. For example, to
              call the GetBreakType endpoint.
            TIMECARDS_SETTINGS_WRITE: |-
              __HTTP Method__: `POST`, `PUT`, `DELETE`

              Grants write access to employee timecard settings information. For example, to
              call the UpdateBreakType endpoint.
      x-additional-headers:
      - name: Square-Version
        description: Square Connect API versions
        schema:
          default: 2020-09-23
    oauth2ClientSecret:
      type: apiKey
      name: Authorization
      in: header
  x-apis:
    Checkout:
      name: Checkout
      summary: Accept itemized payments on a Square-hosted webpage, no frontend experience
        required
      description: |2-

        The Checkout API lets you create Square-hosted checkout webpages where your customers can pay for
        goods and services. Like the Orders API, it allows you to add custom line items or catalog objects
        so customers can see what they're purchasing.

        You can also configure a URL for customers to be redirected to once they complete their purchase, to
        verify that the payment went through successfully.
      externalDocsList:
      - description: Checkout
        url: https://developer.squareup.com/docs/checkout-api-overview
    Labor:
      name: Labor
      summary: Manage shifts, breaks, and wages for employees in Square POS
      description: |2-

        The Labor API allows you to see when employees clocked in and out, how much they worked during different
        periods, and how many breaks they took. You can also call the API to register a past break, adjust a shift,
        or update a wage.

        This API is best used in conjunction with the Team API.
      externalDocsList:
      - description: Labor
        url: https://developer.squareup.com/docs/labor-api/what-it-does
      - description: Webhooks
        url: https://developer.squareup.com/docs/webhooks-overview
    BankAccounts:
      name: Bank Accounts
      summary: Get a list of a merchant's bank accounts
      description: |2-

        The Bank Account API allows you to get basic details about a merchant's bank account, such as the
        last few digits of the account number and the routing number. It can be paired with the Settlements API to understand the
        pattern of deposits and withdrawals from a merchant's bank account.
      externalDocsList:
      - description: Bank Accounts
        url: https://developer.squareup.com/docs/bank-accounts-api
      - description: Webhooks
        url: https://developer.squareup.com/docs/webhooks-overview
    Loyalty:
      name: Loyalty
      summary: Create and manage loyalty accounts for buyers.
      description: |2

        The Loyalty API enables you to create and manage loyalty accounts for buyers in a loyalty program, allow them to earn points, and to redeem rewards.
      externalDocsList:
      - description: Loyalty
        url: https://developer.squareup.com/docs/loyalty/overview
      - description: Webhooks
        url: https://developer.squareup.com/docs/webhooks-overview
    Locations:
      name: Locations
      summary: Get a list of all a merchant's locations
      description: |2-

        Many merchants use multiple locations to track where they make sales. The locations API allows you to
        get data about those locations, such as their addresses, names, and business hours.
      externalDocsList:
      - description: Locations
        url: https://developer.squareup.com/docs/locations-api
    Devices:
      name: Devices
      summary: Manages pairing between a 3rd party Point of Sale app and a Square
        Terminal in a merchant location.
      description: ""
      externalDocsList:
      - description: Devices
        url: https://developer.squareup.com/docs/terminal-api/overview
      - description: Webhooks
        url: https://developer.squareup.com/docs/webhooks-overview
    Inventory:
      name: Inventory
      summary: Keep inventory of catalog items in sync across all commerce channels
      description: |2-

        The Inventory API provides the ability to do a 2-way sync between your inventory system and Square
        using catalog items. You can poll Square's inventory counts to update your system, and update counts
        in Square using the batch change inventory request.
      externalDocsList:
      - description: Inventory
        url: https://developer.squareup.com/docs/inventory-api/what-it-does
      - description: Webhooks
        url: https://developer.squareup.com/docs/webhooks-overview
    Reporting:
      name: Reporting
      summary: Deprecated - Use the Orders & Payments APIs instead
      description: |2-

        Prior to 2019/08/15, the Reporting API was the way to review multi-party payments taken with the Transactions
        API. The Payments API now includes a "application fee" parameter you can use to replace this functionality.
    OAuth:
      name: OAuth
      summary: Allow your application to gain programmatic access to other merchant
        accounts
      description: |2-

        The Square OAuth API lets applications request and obtain permission from a Square account to make API
        calls on behalf of that account. Applications can request individual permissions so that users do not need
        to grant full access to their Square accounts.
      externalDocsList:
      - description: OAuth
        url: https://developer.squareup.com/docs/oauth-api/overview
      - description: Webhooks
        url: https://developer.squareup.com/docs/webhooks-overview
    Webhooks:
      name: Webhooks
      summary: Subscribe to V1 Webhook events for a merchant
      description: |2-

        **If you're working with V1 Webhooks,** you'll use the Webhooks API to subscribe to events for each merchant you're interested in receiving events for. Learn how to subscribe to V1 Webhooks [here](/docs/webhooks-api/subscribe-to-events-v1).

        **If you're working with V2 Webhooks,** you don't need to use this API; instead, you'll subscribe to events using the [Developer Dashboard](/apps). Learn how to subscribe to V2 Webhooks [here](/docs/webhooks-api/subscribe-to-events).
    Merchants:
      name: Merchants
      summary: Use the Merchants API to retrieve information about a Square merchant
        account
      description: |2-

        For example, suppose you develop an application (an eCommerce or a SaaS platform) integrated
        with Square to process payments. Other Square sellers sign up to use your application.

        In this scenario, the application developer can use the Merchants API to retrieve seller account information,
        such as language, business name, country, and account status as shown in the following RetrieveMerchant request.
        In the request, the Authorization header provides an OAuth access token that identifies the seller whose account
        information is requested.
      externalDocsList:
      - description: Merchants
        url: https://developer.squareup.com/docs/merchants-api
    Invoices:
      name: Invoices
      summary: Create and manage invoices.
      description: |2

        Square Invoices enable you to request or automatically collect payments from customers for orders created using the Orders API.

        The Invoices API makes it easy for you to manage invoices. After you create and publish an invoice using the API, Square follows up with the customer by sending the invoice to the customer's email address or automatically charging the customer's card on file. Square makes it easy for your customers to pay by hosting each invoice on a web page where customers can pay for it.
      externalDocsList:
      - description: Invoices
        url: https://developer.squareup.com/docs/invoices-api/overview
      - description: Webhooks
        url: https://developer.squareup.com/docs/webhooks-overview
    Employees:
      name: Employees
      summary: Pull employee data into accounting and payroll systems with the Employees
        API
      description: |2-

        The Employees API allows applications to retrieve a roster of employees registered in the Square Point
        of Sale system, which can be useful in payroll and account contexts.

        The Employees API is best used in conjunction with the Labor API, where you provide employee IDs to
        manage shifts, breaks, and wages.
    Customers:
      name: Customers
      summary: Create and manage customer profiles, save cards on file for customers,
        and sync CRM systems with Square.
      description: |2

        The Customers API enables you to create and manage customer profiles, as well as search for customers based on various criteria (including customer group membership). You can also use the API to save cards on file for customers to streamline future transactions, for example, to enable speedier checkout without requiring the card-on-file customer to provide the credit card info again. In addition, the API allows you to sync contacts between your CRM system and Square.
      externalDocsList:
      - description: Customers
        url: https://developer.squareup.com/docs/customers-api/what-it-does
    CashDrawers:
      name: Cash Drawers
      summary: Get details about cash drawers
      description: |2-

        Cash drawers track cash transactions so that total money in the cash drawers can be reconciled for a
        specific period of time (a cash drawer shift) for a particular device in a particular location. The Cash Drawers API
        enables you to list and retrieve cash drawers information.
      externalDocsList:
      - description: Cash Drawer Shifts
        url: https://developer.squareup.com/docs/cashdrawershift-api/reporting
    CustomerSegments:
      name: Customer Segments
      summary: List and retrieve customer segments (aka smart groups) in the business
        account.
      description: "\nThe Customer Segments API lets you retrieve information about\
        \ segments available in the business account. You can only create a segment\
        \ in the Square Dashboard or Point of Sale by defining and saving the desired\
        \ filters for the segment. For example, you could define a customer segment\
        \ to include customers who have visited more than 10 times. Customers will\
        \ be automatically added to and removed from the segment over time based on\
        \ this criterion. \n\nYou can determine if a given customer is a part of segment\
        \ by inspecting the customer's `segment_ids` property. With the segments'\
        \ IDs, you can then use the Customer Segments API to retrieve basic details\
        \ about each segment, such as the segment name and the time when it was created."
      externalDocsList:
      - description: Customer Segments
        url: https://developer.squareup.com/docs/customer-segments-api/what-it-does
    ApplePay:
      name: Apple Pay
      summary: Apple Pay support APIs
      description: |2-

        The Apple Pay APIs provides an easy way for platform developers
        to bulk activate Web Apple Pay with Square for merchants using their platform.
      externalDocsList:
      - description: Payment Form
        url: https://developer.squareup.com/docs/payment-form/add-digital-wallets/apple-pay
      - description: In-App Payments SDK
        url: https://developer.squareup.com/docs/in-app-payments-sdk/add-digital-wallets/apple-pay
    Payments:
      name: Payments
      summary: The Payments API lets developers take and manage payments
      description: |2

        Applications need the following input to take a payment:

        - Amount to charge.
        - Payment recipient. The payment goes to the account identified by the Authorization header in the API request.
        - Payment source. It can be a secure token (nonce) or a card on file.

        You can generate a nonce using the Square Payment Form and the In-App Payments SDK.
        For working code examples, see Connect API examples.

        A card on file refers to a credit/debit or a gift card associated with a customer.
        You can create a customer and add a card to them using either the Customers API, the dashboard, or the Square mobile app.
      externalDocsList:
      - description: Payments
        url: https://developer.squareup.com/docs/payments-api/overview
      - description: Webhooks
        url: https://developer.squareup.com/docs/webhooks-overview
    MobileAuthorization:
      name: Mobile Authorization
      summary: Authorize Reader SDK apps to take in-person payments
      description: |2-

        The Mobile Authorization API accepts an account credential (OAuth token or Personal Access Token) and
        location ID and returns an authorization code that custom mobile apps can use to initialize Square mobile
        solutions like Reader SDK to accept payments using Square hardware.
      externalDocsList:
      - description: Mobile Authorization
        url: https://developer.squareup.com/docs/mobile-authz/what-it-does
    Terminal:
      name: Terminal
      summary: Requests a checkout from a paired Square Terminal
      description: |2-

        The Terminal API allows you to manage terminal checkout requests sent to a paired Square
        Terminal. You can create a request, check the request status, cancel the checkout,
        search for in-process checkout requests, and get the results of the checkout after
        it is completed by the Square Terminal.
      externalDocsList:
      - description: Terminal
        url: https://developer.squareup.com/docs/terminal-api/overview
      - description: Webhooks
        url: https://developer.squareup.com/docs/webhooks-overview
    Disputes:
      name: Disputes
      summary: Use the Disputes API to manage disputes (chargebacks).
      description: |2-

        A merchant has the following options to process a dispute:

        - **Accept the dispute** using the [AcceptDispute](/reference/square/disputes-api/accept-dispute) endpoint. Square returns the disputed amount from the account balance of the Square account.
        - **Challenge the dispute** using the [SubmitEvidence](/reference/square/disputes-api/submit-evidence) endpoint — If payment was valid you can contest the disputed payment.
        You submit supporting evidence you have about the transaction, such as, receipts, invoices, email correspondence, proof of delivery, or photos.
        You upload evidence using the [CreateDisputeEvidenceFile](/reference/square/disputes-api/create-dispute-evidence-file) endpoint.

        The Disputes API also supports other endpoints useful in dispute management.
      externalDocsList:
      - description: Disputes
        url: https://developer.squareup.com/docs/disputes-api/overview
      - description: Webhooks
        url: https://developer.squareup.com/docs/webhooks-overview
    Catalog:
      name: Catalog
      summary: Sync items to Square POS to itemize payments consistently across all
        channels
      description: |2-

        The Catalog API allows you to manage your item catalog in Point of Sale, including items, variations,
        categories, discounts, taxes, modifiers, and more.

        You can efficiently sync items between your systems and Square by using our batch APIs, which allow
        you update many catalog items at once.
      externalDocsList:
      - description: Catalog
        url: https://developer.squareup.com/docs/catalog-api/what-it-does
      - description: Webhooks
        url: https://developer.squareup.com/docs/webhooks-overview
    CustomerGroups:
      name: Customer Groups
      summary: Programmatically create and manage customer groups to streamline and
        automate workflows, and to enable more personalized customer interactions.
      description: "\nThe Customer Groups API lets you create and manage customer\
        \ groups to provide targeted promotions or take other customized actions based\
        \ on customers' group memberships. For example, you could create _Weekly_,\
        \ _Monthly_ and _Quarterly_ customer groups and add customers to them based\
        \ on their preferences to receive marketing promotions on a weekly, monthly\
        \ and quarterly basis, respectively. You could then send marketing emails\
        \ to customers in the _Weekly_ group every Wednesday, to those in the _Monthly_\
        \ group the first day of each month, and to those in the _Quarterly_ group\
        \ every three months. \n\nThe Customer Groups API enables you to retrieve\
        \ and manage customer groups, while you can add and remove customers from\
        \ groups and search for customers based on group membership using the Customers\
        \ API.\n\n"
      externalDocsList:
      - description: Customer Groups
        url: https://developer.squareup.com/docs/customer-groups-api/what-it-does
    Settlements:
      name: Settlements
      summary: Get a list of deposits / withdrawals from a merchant's bank accounts
      description: |2-

        The Settlements API allows you to see a complete list of settlements made to a merchant's bank account,
        with a list of settlement entries that describe the payments associated with each settlement. It can be paired with the
        Bank Accounts API to add detail about which bank account each settlement was made to.
    Orders:
      name: Orders
      summary: Get sales data for a Square merchant, itemize payments, push orders
        to POS, and more
      description: |2-

        The Orders API is your one-stop shop for adding rich functionality to payments. You can itemize
        payments using custom line items or catalog objects, send orders to physical Point of Sale devices
        to be fulfilled, attach a customer to a payment, and more.

        In addition, the Orders API lets you search through all of a merchant's past sales and returns itemization
        data, customer references, and other details from sales made via POS or online.
      externalDocsList:
      - description: Orders
        url: https://developer.squareup.com/docs/orders-api/what-it-does
      - description: Webhooks
        url: https://developer.squareup.com/docs/webhooks-overview
    Team:
      name: Team
      summary: Pull employee data into accounting and payroll systems with the Team
        API
      description: |2-

        The Team API allows applications to retrieve a roster of team members registered in the Square Point
        of Sale system, which can be useful in payroll and account contexts.

        The Team API is best used in conjunction with the Labor API, where you provide team member IDs to
        manage shifts, breaks, and wages.
      externalDocsList:
      - description: Team
        url: https://developer.squareup.com/docs/team/overview
    Transactions:
      name: Transactions
      summary: Deprecated - Use the Orders & Payments APIs instead
      description: |2-

        Prior to 2019/08/15, Transactions API was the way to take online payments. Going forward, the Payments
        and Refunds API (together with the Orders API) replace the Transactions API.
    Refunds:
      name: Refunds
      summary: Manage and issue refunds for payments made to Square merchants
      description: |2

        The following apply for refunds:

        - You cannot refund more than what was originally collected.
        - The refund amount must be available in the account’s Square balance. If not, Square will attempt to take money out of
          their associated bank account. Refunds will be in a state of `PENDING` until the funds can be secured.
        - If funds can not be secured, the refund will not complete and the buyer will not receive a credit. The refund will have
          a status of `FAILED`. Future refunds to this payment will not be allowed and the buyer should be reimbursed by other means.
        - You can refund only payments with status `COMPLETED`. You cannot refund an `APPROVED` payment; however, you can cancel
          an approved payment.
      externalDocsList:
      - description: Refunds
        url: https://developer.squareup.com/docs/payments-api/overview
      - description: Webhooks
        url: https://developer.squareup.com/docs/webhooks-overview
    Subscriptions:
      name: Subscriptions
      summary: Create and manage subscriptions.
      description: "\nSubscriptions enable sellers to generate a reliable cash flow\
        \ and recurring revenue to grow their businesses. Square offers the Subscriptions\
        \ API for developers to embed subscription functionality in their applications.\
        \ You first create a subscription plan using the Catalog API and then use\
        \ the Subscriptions API to create and manage subscriptions. \n\n"
      externalDocsList:
      - description: Subscriptions
        url: https://developer.squareup.com/docs/subscriptions/overview
      - description: Webhooks
        url: https://developer.squareup.com/docs/webhooks-overview
  x-categories:
    Business:
      name: Business
      summary: Manage locations and merchant details
      description: |2-

        Use the Location and Merchant APIs to keep track of core business details, such
        as addresses and business hours. Use Devices and Cash Drawers to keep track of the
        point of sale devices and cash drawer shift activity in a business.
      apis:
      - '#/components/x-apis/Merchants'
      - '#/components/x-apis/Locations'
      - '#/components/x-apis/Devices'
      - '#/components/x-apis/Cash Drawers'
    Loyalty:
      name: Loyalty
      summary: 'Create loyalty accounts for buyers in a loyalty program, allow them
        to earn points, and to redeem rewards. '
      description: "\nCreate loyalty accounts for buyers in a loyalty program, add\
        \ points to their loyalty account, and redeem rewards.\n\n\n "
      apis:
      - '#/components/x-apis/Loyalty'
    Items:
      name: Items
      summary: APIs for enriching payments with items and inventory
      description: |2-

        Sync merchant catalogs and inventory to provide consistent itemization and
        reporting across all channels
      apis:
      - '#/components/x-apis/Catalog'
      - '#/components/x-apis/Inventory'
    Invoices:
      name: Invoices
      summary: Create and manage invoices.
      description: |2

        Square invoices enable you to request or automatically collect payments from  customer for orders created using the Orders API.

        The Invoices API makes it easy  for you to manage invoices. After you create and publish an invoice using the API, Square follows up with customers: sends invoices to the customer's email address or automatically charges the customer's card on file. Square makes it easy for your customers to pay by hosting each invoice on a web page where customers can pay for it.

        For more information, see [Manage Invoices Using the Invoices API](/docs/invoices-api/overview).
      apis:
      - '#/components/x-apis/Invoices'
    Customers:
      name: Customers
      summary: 'Create and manage customer profiles, save cards on file for customers,
        and sync custom CRM systems with Square. '
      description: "\nCreate and manage customer profiles, as well as search for customers\
        \ based on various criteria such as customer group membership and when the\
        \ customer was created. Save cards on file for the customers to facilitate\
        \ future transactions. Sync contacts between your CRM system and Square.\n\
        \n\n "
      apis:
      - '#/components/x-apis/Customers'
      - '#/components/x-apis/CustomerGroups'
      - '#/components/x-apis/CustomerSegments'
    Payments:
      name: Payments
      summary: Take payments and issue refunds
      description: |2-

        Square's Payment APIs make it easy for you to take payments, manage refunds,
        and help customers check out online.
      apis:
      - '#/components/x-apis/Payments'
      - '#/components/x-apis/Refunds'
      - '#/components/x-apis/Disputes'
      - '#/components/x-apis/Checkout'
      - '#/components/x-apis/ApplePay'
      - '#/components/x-apis/Reporting'
      - '#/components/x-apis/Terminal'
      - '#/components/x-apis/Transactions'
    Auth:
      name: Auth
      summary: Manage access to Square merchant accounts
      description: |2-

        Use OAuth to gain programmatic access to other Square merchants, and use the
        Mobile Authorization API to grant access to Reader SDK to take payments.
      apis:
      - '#/components/x-apis/OAuth'
      - '#/components/x-apis/MobileAuthorization'
    Orders:
      name: Orders
      summary: Itemize payments, issue refunds, and push orders into Square of Sale
      description: |2-

        Square's Payment APIs make it easy for you to take itemize payments, fulfill
        orders at physical locations, and report on a merchant's sales.
      apis:
      - '#/components/x-apis/Orders'
    Team:
      name: Team
      summary: Manage your team of employees
      description: |2-

        Use the Team and Labor APIs to keep track of who works at your business and
        when they clock in / out.
      apis:
      - '#/components/x-apis/Team'
      - '#/components/x-apis/Labor'
    Financials:
      name: Financials
      summary: Get details about your business' deposits and bank accounts
      description: ""
      apis:
      - '#/components/x-apis/BankAccounts'
      - '#/components/x-apis/Settlements'
    Subscriptions:
      name: Subscriptions
      summary: 'Create and manage subscriptions. '
      description: "\nSubscriptions enable sellers to generate a reliable cash flow\
        \ and recurring revenue to grow their businesses. Square offers the Subscriptions\
        \ API for developers to embed subscription functionality in their applications.\
        \ You first create a subscription plan using the Catalog API and then use\
        \ the Subscriptions API to create and manage subscriptions. \n\nFor more information,\
        \ see [Square Subscriptions](/docs/subscriptions/overview)."
      apis:
      - '#/components/x-apis/Subscriptions'
  x-categories-order:
  - Payments
  - Orders
  - Subscriptions
  - Invoices
  - Items
  - Customers
  - Loyalty
  - Business
  - Team
  - Financials
  - Auth
  x-v1-api-mappings:
    V1Employees:
      ListCashDrawerShifts: CashDrawers
      RetrieveCashDrawerShift: CashDrawers
      CreateEmployee: Employees
      CreateEmployeeRole: Employees
      ListEmployees: Employees
      ListEmployeeRoles: Employees
      RetrieveEmployee: Employees
      RetrieveEmployeeRole: Employees
      UpdateEmployee: Employees
      UpdateEmployeeRole: Employees
      CreateTimecard: Labor
      DeleteTimecard: Labor
      ListTimecards: Labor
      ListTimecardEvents: Labor
      RetrieveTimecard: Labor
      UpdateTimecard: Labor
    V1Items:
      ApplyFee: Catalog
      ApplyModifierList: Catalog
      CreateCategory: Catalog
      CreateDiscount: Catalog
      CreateFee: Catalog
      CreateItem: Catalog
      CreateModifierList: Catalog
      CreateModifierOption: Catalog
      CreatePage: Catalog
      CreateVariation: Catalog
      DeleteCategory: Catalog
      DeleteDiscount: Catalog
      DeleteFee: Catalog
      DeleteItem: Catalog
      DeleteModifierList: Catalog
      DeleteModifierOption: Catalog
      DeletePage: Catalog
      DeletePageCell: Catalog
      DeleteVariation: Catalog
      ListCategories: Catalog
      ListDiscounts: Catalog
      ListFees: Catalog
      ListItems: Catalog
      ListModifierLists: Catalog
      ListPages: Catalog
      RemoveFee: Catalog
      RemoveModifierList: Catalog
      RetrieveItem: Catalog
      RetrieveModifierList: Catalog
      UpdateCategory: Catalog
      UpdateDiscount: Catalog
      UpdateFee: Catalog
      UpdateItem: Catalog
      UpdateModifierList: Catalog
      UpdateModifierOption: Catalog
      UpdatePage: Catalog
      UpdatePageCell: Catalog
      UpdateVariation: Catalog
      UploadItemImage: Catalog
      AdjustInventory: Inventory
      ListInventory: Inventory
    V1Locations:
      ListLocations: Locations
      RetrieveBusiness: Merchants
    V1Transactions:
      ListBankAccounts: BankAccounts
      RetrieveBankAccount: BankAccounts
      ListPayments: Payments
      RetrievePayment: Payments
      CreateRefund: Refunds
      ListRefunds: Refunds
      ListSettlements: Settlements
      RetrieveSettlement: Settlements
    V1Webhooks:
      ListWebhooks: Webhooks
      UpdateWebhooks: Webhooks
